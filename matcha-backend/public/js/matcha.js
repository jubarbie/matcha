
(function() {
'use strict';

function F2(fun)
{
  function wrapper(a) { return function(b) { return fun(a,b); }; }
  wrapper.arity = 2;
  wrapper.func = fun;
  return wrapper;
}

function F3(fun)
{
  function wrapper(a) {
    return function(b) { return function(c) { return fun(a, b, c); }; };
  }
  wrapper.arity = 3;
  wrapper.func = fun;
  return wrapper;
}

function F4(fun)
{
  function wrapper(a) { return function(b) { return function(c) {
    return function(d) { return fun(a, b, c, d); }; }; };
  }
  wrapper.arity = 4;
  wrapper.func = fun;
  return wrapper;
}

function F5(fun)
{
  function wrapper(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };
  }
  wrapper.arity = 5;
  wrapper.func = fun;
  return wrapper;
}

function F6(fun)
{
  function wrapper(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return fun(a, b, c, d, e, f); }; }; }; }; };
  }
  wrapper.arity = 6;
  wrapper.func = fun;
  return wrapper;
}

function F7(fun)
{
  function wrapper(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };
  }
  wrapper.arity = 7;
  wrapper.func = fun;
  return wrapper;
}

function F8(fun)
{
  function wrapper(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) {
    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };
  }
  wrapper.arity = 8;
  wrapper.func = fun;
  return wrapper;
}

function F9(fun)
{
  function wrapper(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) { return function(i) {
    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };
  }
  wrapper.arity = 9;
  wrapper.func = fun;
  return wrapper;
}

function A2(fun, a, b)
{
  return fun.arity === 2
    ? fun.func(a, b)
    : fun(a)(b);
}
function A3(fun, a, b, c)
{
  return fun.arity === 3
    ? fun.func(a, b, c)
    : fun(a)(b)(c);
}
function A4(fun, a, b, c, d)
{
  return fun.arity === 4
    ? fun.func(a, b, c, d)
    : fun(a)(b)(c)(d);
}
function A5(fun, a, b, c, d, e)
{
  return fun.arity === 5
    ? fun.func(a, b, c, d, e)
    : fun(a)(b)(c)(d)(e);
}
function A6(fun, a, b, c, d, e, f)
{
  return fun.arity === 6
    ? fun.func(a, b, c, d, e, f)
    : fun(a)(b)(c)(d)(e)(f);
}
function A7(fun, a, b, c, d, e, f, g)
{
  return fun.arity === 7
    ? fun.func(a, b, c, d, e, f, g)
    : fun(a)(b)(c)(d)(e)(f)(g);
}
function A8(fun, a, b, c, d, e, f, g, h)
{
  return fun.arity === 8
    ? fun.func(a, b, c, d, e, f, g, h)
    : fun(a)(b)(c)(d)(e)(f)(g)(h);
}
function A9(fun, a, b, c, d, e, f, g, h, i)
{
  return fun.arity === 9
    ? fun.func(a, b, c, d, e, f, g, h, i)
    : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);
}

//import Result //

var _elm_lang$core$Native_Date = function() {

function fromString(str)
{
	var date = new Date(str);
	return isNaN(date.getTime())
		? _elm_lang$core$Result$Err('Unable to parse \'' + str + '\' as a date. Dates must be in the ISO 8601 format.')
		: _elm_lang$core$Result$Ok(date);
}

var dayTable = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
var monthTable =
	['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
	 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];


return {
	fromString: fromString,
	year: function(d) { return d.getFullYear(); },
	month: function(d) { return { ctor: monthTable[d.getMonth()] }; },
	day: function(d) { return d.getDate(); },
	hour: function(d) { return d.getHours(); },
	minute: function(d) { return d.getMinutes(); },
	second: function(d) { return d.getSeconds(); },
	millisecond: function(d) { return d.getMilliseconds(); },
	toTime: function(d) { return d.getTime(); },
	fromTime: function(t) { return new Date(t); },
	dayOfWeek: function(d) { return { ctor: dayTable[d.getDay()] }; }
};

}();
//import Native.Utils //

var _elm_lang$core$Native_Basics = function() {

function div(a, b)
{
	return (a / b) | 0;
}
function rem(a, b)
{
	return a % b;
}
function mod(a, b)
{
	if (b === 0)
	{
		throw new Error('Cannot perform mod 0. Division by zero error.');
	}
	var r = a % b;
	var m = a === 0 ? 0 : (b > 0 ? (a >= 0 ? r : r + b) : -mod(-a, -b));

	return m === b ? 0 : m;
}
function logBase(base, n)
{
	return Math.log(n) / Math.log(base);
}
function negate(n)
{
	return -n;
}
function abs(n)
{
	return n < 0 ? -n : n;
}

function min(a, b)
{
	return _elm_lang$core$Native_Utils.cmp(a, b) < 0 ? a : b;
}
function max(a, b)
{
	return _elm_lang$core$Native_Utils.cmp(a, b) > 0 ? a : b;
}
function clamp(lo, hi, n)
{
	return _elm_lang$core$Native_Utils.cmp(n, lo) < 0
		? lo
		: _elm_lang$core$Native_Utils.cmp(n, hi) > 0
			? hi
			: n;
}

var ord = ['LT', 'EQ', 'GT'];

function compare(x, y)
{
	return { ctor: ord[_elm_lang$core$Native_Utils.cmp(x, y) + 1] };
}

function xor(a, b)
{
	return a !== b;
}
function not(b)
{
	return !b;
}
function isInfinite(n)
{
	return n === Infinity || n === -Infinity;
}

function truncate(n)
{
	return n | 0;
}

function degrees(d)
{
	return d * Math.PI / 180;
}
function turns(t)
{
	return 2 * Math.PI * t;
}
function fromPolar(point)
{
	var r = point._0;
	var t = point._1;
	return _elm_lang$core$Native_Utils.Tuple2(r * Math.cos(t), r * Math.sin(t));
}
function toPolar(point)
{
	var x = point._0;
	var y = point._1;
	return _elm_lang$core$Native_Utils.Tuple2(Math.sqrt(x * x + y * y), Math.atan2(y, x));
}

return {
	div: F2(div),
	rem: F2(rem),
	mod: F2(mod),

	pi: Math.PI,
	e: Math.E,
	cos: Math.cos,
	sin: Math.sin,
	tan: Math.tan,
	acos: Math.acos,
	asin: Math.asin,
	atan: Math.atan,
	atan2: F2(Math.atan2),

	degrees: degrees,
	turns: turns,
	fromPolar: fromPolar,
	toPolar: toPolar,

	sqrt: Math.sqrt,
	logBase: F2(logBase),
	negate: negate,
	abs: abs,
	min: F2(min),
	max: F2(max),
	clamp: F3(clamp),
	compare: F2(compare),

	xor: F2(xor),
	not: not,

	truncate: truncate,
	ceiling: Math.ceil,
	floor: Math.floor,
	round: Math.round,
	toFloat: function(x) { return x; },
	isNaN: isNaN,
	isInfinite: isInfinite
};

}();
//import //

var _elm_lang$core$Native_Utils = function() {

// COMPARISONS

function eq(x, y)
{
	var stack = [];
	var isEqual = eqHelp(x, y, 0, stack);
	var pair;
	while (isEqual && (pair = stack.pop()))
	{
		isEqual = eqHelp(pair.x, pair.y, 0, stack);
	}
	return isEqual;
}


function eqHelp(x, y, depth, stack)
{
	if (depth > 100)
	{
		stack.push({ x: x, y: y });
		return true;
	}

	if (x === y)
	{
		return true;
	}

	if (typeof x !== 'object')
	{
		if (typeof x === 'function')
		{
			throw new Error(
				'Trying to use `(==)` on functions. There is no way to know if functions are "the same" in the Elm sense.'
				+ ' Read more about this at http://package.elm-lang.org/packages/elm-lang/core/latest/Basics#=='
				+ ' which describes why it is this way and what the better version will look like.'
			);
		}
		return false;
	}

	if (x === null || y === null)
	{
		return false
	}

	if (x instanceof Date)
	{
		return x.getTime() === y.getTime();
	}

	if (!('ctor' in x))
	{
		for (var key in x)
		{
			if (!eqHelp(x[key], y[key], depth + 1, stack))
			{
				return false;
			}
		}
		return true;
	}

	// convert Dicts and Sets to lists
	if (x.ctor === 'RBNode_elm_builtin' || x.ctor === 'RBEmpty_elm_builtin')
	{
		x = _elm_lang$core$Dict$toList(x);
		y = _elm_lang$core$Dict$toList(y);
	}
	if (x.ctor === 'Set_elm_builtin')
	{
		x = _elm_lang$core$Set$toList(x);
		y = _elm_lang$core$Set$toList(y);
	}

	// check if lists are equal without recursion
	if (x.ctor === '::')
	{
		var a = x;
		var b = y;
		while (a.ctor === '::' && b.ctor === '::')
		{
			if (!eqHelp(a._0, b._0, depth + 1, stack))
			{
				return false;
			}
			a = a._1;
			b = b._1;
		}
		return a.ctor === b.ctor;
	}

	// check if Arrays are equal
	if (x.ctor === '_Array')
	{
		var xs = _elm_lang$core$Native_Array.toJSArray(x);
		var ys = _elm_lang$core$Native_Array.toJSArray(y);
		if (xs.length !== ys.length)
		{
			return false;
		}
		for (var i = 0; i < xs.length; i++)
		{
			if (!eqHelp(xs[i], ys[i], depth + 1, stack))
			{
				return false;
			}
		}
		return true;
	}

	if (!eqHelp(x.ctor, y.ctor, depth + 1, stack))
	{
		return false;
	}

	for (var key in x)
	{
		if (!eqHelp(x[key], y[key], depth + 1, stack))
		{
			return false;
		}
	}
	return true;
}

// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on
// the particular integer values assigned to LT, EQ, and GT.

var LT = -1, EQ = 0, GT = 1;

function cmp(x, y)
{
	if (typeof x !== 'object')
	{
		return x === y ? EQ : x < y ? LT : GT;
	}

	if (x instanceof String)
	{
		var a = x.valueOf();
		var b = y.valueOf();
		return a === b ? EQ : a < b ? LT : GT;
	}

	if (x.ctor === '::' || x.ctor === '[]')
	{
		while (x.ctor === '::' && y.ctor === '::')
		{
			var ord = cmp(x._0, y._0);
			if (ord !== EQ)
			{
				return ord;
			}
			x = x._1;
			y = y._1;
		}
		return x.ctor === y.ctor ? EQ : x.ctor === '[]' ? LT : GT;
	}

	if (x.ctor.slice(0, 6) === '_Tuple')
	{
		var ord;
		var n = x.ctor.slice(6) - 0;
		var err = 'cannot compare tuples with more than 6 elements.';
		if (n === 0) return EQ;
		if (n >= 1) { ord = cmp(x._0, y._0); if (ord !== EQ) return ord;
		if (n >= 2) { ord = cmp(x._1, y._1); if (ord !== EQ) return ord;
		if (n >= 3) { ord = cmp(x._2, y._2); if (ord !== EQ) return ord;
		if (n >= 4) { ord = cmp(x._3, y._3); if (ord !== EQ) return ord;
		if (n >= 5) { ord = cmp(x._4, y._4); if (ord !== EQ) return ord;
		if (n >= 6) { ord = cmp(x._5, y._5); if (ord !== EQ) return ord;
		if (n >= 7) throw new Error('Comparison error: ' + err); } } } } } }
		return EQ;
	}

	throw new Error(
		'Comparison error: comparison is only defined on ints, '
		+ 'floats, times, chars, strings, lists of comparable values, '
		+ 'and tuples of comparable values.'
	);
}


// COMMON VALUES

var Tuple0 = {
	ctor: '_Tuple0'
};

function Tuple2(x, y)
{
	return {
		ctor: '_Tuple2',
		_0: x,
		_1: y
	};
}

function chr(c)
{
	return new String(c);
}


// GUID

var count = 0;
function guid(_)
{
	return count++;
}


// RECORDS

function update(oldRecord, updatedFields)
{
	var newRecord = {};

	for (var key in oldRecord)
	{
		newRecord[key] = oldRecord[key];
	}

	for (var key in updatedFields)
	{
		newRecord[key] = updatedFields[key];
	}

	return newRecord;
}


//// LIST STUFF ////

var Nil = { ctor: '[]' };

function Cons(hd, tl)
{
	return {
		ctor: '::',
		_0: hd,
		_1: tl
	};
}

function append(xs, ys)
{
	// append Strings
	if (typeof xs === 'string')
	{
		return xs + ys;
	}

	// append Lists
	if (xs.ctor === '[]')
	{
		return ys;
	}
	var root = Cons(xs._0, Nil);
	var curr = root;
	xs = xs._1;
	while (xs.ctor !== '[]')
	{
		curr._1 = Cons(xs._0, Nil);
		xs = xs._1;
		curr = curr._1;
	}
	curr._1 = ys;
	return root;
}


// CRASHES

function crash(moduleName, region)
{
	return function(message) {
		throw new Error(
			'Ran into a `Debug.crash` in module `' + moduleName + '` ' + regionToString(region) + '\n'
			+ 'The message provided by the code author is:\n\n    '
			+ message
		);
	};
}

function crashCase(moduleName, region, value)
{
	return function(message) {
		throw new Error(
			'Ran into a `Debug.crash` in module `' + moduleName + '`\n\n'
			+ 'This was caused by the `case` expression ' + regionToString(region) + '.\n'
			+ 'One of the branches ended with a crash and the following value got through:\n\n    ' + toString(value) + '\n\n'
			+ 'The message provided by the code author is:\n\n    '
			+ message
		);
	};
}

function regionToString(region)
{
	if (region.start.line == region.end.line)
	{
		return 'on line ' + region.start.line;
	}
	return 'between lines ' + region.start.line + ' and ' + region.end.line;
}


// TO STRING

function toString(v)
{
	var type = typeof v;
	if (type === 'function')
	{
		return '<function>';
	}

	if (type === 'boolean')
	{
		return v ? 'True' : 'False';
	}

	if (type === 'number')
	{
		return v + '';
	}

	if (v instanceof String)
	{
		return '\'' + addSlashes(v, true) + '\'';
	}

	if (type === 'string')
	{
		return '"' + addSlashes(v, false) + '"';
	}

	if (v === null)
	{
		return 'null';
	}

	if (type === 'object' && 'ctor' in v)
	{
		var ctorStarter = v.ctor.substring(0, 5);

		if (ctorStarter === '_Tupl')
		{
			var output = [];
			for (var k in v)
			{
				if (k === 'ctor') continue;
				output.push(toString(v[k]));
			}
			return '(' + output.join(',') + ')';
		}

		if (ctorStarter === '_Task')
		{
			return '<task>'
		}

		if (v.ctor === '_Array')
		{
			var list = _elm_lang$core$Array$toList(v);
			return 'Array.fromList ' + toString(list);
		}

		if (v.ctor === '<decoder>')
		{
			return '<decoder>';
		}

		if (v.ctor === '_Process')
		{
			return '<process:' + v.id + '>';
		}

		if (v.ctor === '::')
		{
			var output = '[' + toString(v._0);
			v = v._1;
			while (v.ctor === '::')
			{
				output += ',' + toString(v._0);
				v = v._1;
			}
			return output + ']';
		}

		if (v.ctor === '[]')
		{
			return '[]';
		}

		if (v.ctor === 'Set_elm_builtin')
		{
			return 'Set.fromList ' + toString(_elm_lang$core$Set$toList(v));
		}

		if (v.ctor === 'RBNode_elm_builtin' || v.ctor === 'RBEmpty_elm_builtin')
		{
			return 'Dict.fromList ' + toString(_elm_lang$core$Dict$toList(v));
		}

		var output = '';
		for (var i in v)
		{
			if (i === 'ctor') continue;
			var str = toString(v[i]);
			var c0 = str[0];
			var parenless = c0 === '{' || c0 === '(' || c0 === '<' || c0 === '"' || str.indexOf(' ') < 0;
			output += ' ' + (parenless ? str : '(' + str + ')');
		}
		return v.ctor + output;
	}

	if (type === 'object')
	{
		if (v instanceof Date)
		{
			return '<' + v.toString() + '>';
		}

		if (v.elm_web_socket)
		{
			return '<websocket>';
		}

		var output = [];
		for (var k in v)
		{
			output.push(k + ' = ' + toString(v[k]));
		}
		if (output.length === 0)
		{
			return '{}';
		}
		return '{ ' + output.join(', ') + ' }';
	}

	return '<internal structure>';
}

function addSlashes(str, isChar)
{
	var s = str.replace(/\\/g, '\\\\')
			  .replace(/\n/g, '\\n')
			  .replace(/\t/g, '\\t')
			  .replace(/\r/g, '\\r')
			  .replace(/\v/g, '\\v')
			  .replace(/\0/g, '\\0');
	if (isChar)
	{
		return s.replace(/\'/g, '\\\'');
	}
	else
	{
		return s.replace(/\"/g, '\\"');
	}
}


return {
	eq: eq,
	cmp: cmp,
	Tuple0: Tuple0,
	Tuple2: Tuple2,
	chr: chr,
	update: update,
	guid: guid,

	append: F2(append),

	crash: crash,
	crashCase: crashCase,

	toString: toString
};

}();
var _elm_lang$core$Basics$never = function (_p0) {
	never:
	while (true) {
		var _p1 = _p0;
		var _v1 = _p1._0;
		_p0 = _v1;
		continue never;
	}
};
var _elm_lang$core$Basics$uncurry = F2(
	function (f, _p2) {
		var _p3 = _p2;
		return A2(f, _p3._0, _p3._1);
	});
var _elm_lang$core$Basics$curry = F3(
	function (f, a, b) {
		return f(
			{ctor: '_Tuple2', _0: a, _1: b});
	});
var _elm_lang$core$Basics$flip = F3(
	function (f, b, a) {
		return A2(f, a, b);
	});
var _elm_lang$core$Basics$always = F2(
	function (a, _p4) {
		return a;
	});
var _elm_lang$core$Basics$identity = function (x) {
	return x;
};
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['<|'] = F2(
	function (f, x) {
		return f(x);
	});
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['|>'] = F2(
	function (x, f) {
		return f(x);
	});
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['>>'] = F3(
	function (f, g, x) {
		return g(
			f(x));
	});
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['<<'] = F3(
	function (g, f, x) {
		return g(
			f(x));
	});
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['++'] = _elm_lang$core$Native_Utils.append;
var _elm_lang$core$Basics$toString = _elm_lang$core$Native_Utils.toString;
var _elm_lang$core$Basics$isInfinite = _elm_lang$core$Native_Basics.isInfinite;
var _elm_lang$core$Basics$isNaN = _elm_lang$core$Native_Basics.isNaN;
var _elm_lang$core$Basics$toFloat = _elm_lang$core$Native_Basics.toFloat;
var _elm_lang$core$Basics$ceiling = _elm_lang$core$Native_Basics.ceiling;
var _elm_lang$core$Basics$floor = _elm_lang$core$Native_Basics.floor;
var _elm_lang$core$Basics$truncate = _elm_lang$core$Native_Basics.truncate;
var _elm_lang$core$Basics$round = _elm_lang$core$Native_Basics.round;
var _elm_lang$core$Basics$not = _elm_lang$core$Native_Basics.not;
var _elm_lang$core$Basics$xor = _elm_lang$core$Native_Basics.xor;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['||'] = _elm_lang$core$Native_Basics.or;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['&&'] = _elm_lang$core$Native_Basics.and;
var _elm_lang$core$Basics$max = _elm_lang$core$Native_Basics.max;
var _elm_lang$core$Basics$min = _elm_lang$core$Native_Basics.min;
var _elm_lang$core$Basics$compare = _elm_lang$core$Native_Basics.compare;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['>='] = _elm_lang$core$Native_Basics.ge;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['<='] = _elm_lang$core$Native_Basics.le;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['>'] = _elm_lang$core$Native_Basics.gt;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['<'] = _elm_lang$core$Native_Basics.lt;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['/='] = _elm_lang$core$Native_Basics.neq;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['=='] = _elm_lang$core$Native_Basics.eq;
var _elm_lang$core$Basics$e = _elm_lang$core$Native_Basics.e;
var _elm_lang$core$Basics$pi = _elm_lang$core$Native_Basics.pi;
var _elm_lang$core$Basics$clamp = _elm_lang$core$Native_Basics.clamp;
var _elm_lang$core$Basics$logBase = _elm_lang$core$Native_Basics.logBase;
var _elm_lang$core$Basics$abs = _elm_lang$core$Native_Basics.abs;
var _elm_lang$core$Basics$negate = _elm_lang$core$Native_Basics.negate;
var _elm_lang$core$Basics$sqrt = _elm_lang$core$Native_Basics.sqrt;
var _elm_lang$core$Basics$atan2 = _elm_lang$core$Native_Basics.atan2;
var _elm_lang$core$Basics$atan = _elm_lang$core$Native_Basics.atan;
var _elm_lang$core$Basics$asin = _elm_lang$core$Native_Basics.asin;
var _elm_lang$core$Basics$acos = _elm_lang$core$Native_Basics.acos;
var _elm_lang$core$Basics$tan = _elm_lang$core$Native_Basics.tan;
var _elm_lang$core$Basics$sin = _elm_lang$core$Native_Basics.sin;
var _elm_lang$core$Basics$cos = _elm_lang$core$Native_Basics.cos;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['^'] = _elm_lang$core$Native_Basics.exp;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['%'] = _elm_lang$core$Native_Basics.mod;
var _elm_lang$core$Basics$rem = _elm_lang$core$Native_Basics.rem;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['//'] = _elm_lang$core$Native_Basics.div;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['/'] = _elm_lang$core$Native_Basics.floatDiv;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['*'] = _elm_lang$core$Native_Basics.mul;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['-'] = _elm_lang$core$Native_Basics.sub;
var _elm_lang$core$Basics_ops = _elm_lang$core$Basics_ops || {};
_elm_lang$core$Basics_ops['+'] = _elm_lang$core$Native_Basics.add;
var _elm_lang$core$Basics$toPolar = _elm_lang$core$Native_Basics.toPolar;
var _elm_lang$core$Basics$fromPolar = _elm_lang$core$Native_Basics.fromPolar;
var _elm_lang$core$Basics$turns = _elm_lang$core$Native_Basics.turns;
var _elm_lang$core$Basics$degrees = _elm_lang$core$Native_Basics.degrees;
var _elm_lang$core$Basics$radians = function (t) {
	return t;
};
var _elm_lang$core$Basics$GT = {ctor: 'GT'};
var _elm_lang$core$Basics$EQ = {ctor: 'EQ'};
var _elm_lang$core$Basics$LT = {ctor: 'LT'};
var _elm_lang$core$Basics$JustOneMore = function (a) {
	return {ctor: 'JustOneMore', _0: a};
};

var _elm_lang$core$Maybe$withDefault = F2(
	function ($default, maybe) {
		var _p0 = maybe;
		if (_p0.ctor === 'Just') {
			return _p0._0;
		} else {
			return $default;
		}
	});
var _elm_lang$core$Maybe$Nothing = {ctor: 'Nothing'};
var _elm_lang$core$Maybe$andThen = F2(
	function (callback, maybeValue) {
		var _p1 = maybeValue;
		if (_p1.ctor === 'Just') {
			return callback(_p1._0);
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _elm_lang$core$Maybe$Just = function (a) {
	return {ctor: 'Just', _0: a};
};
var _elm_lang$core$Maybe$map = F2(
	function (f, maybe) {
		var _p2 = maybe;
		if (_p2.ctor === 'Just') {
			return _elm_lang$core$Maybe$Just(
				f(_p2._0));
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _elm_lang$core$Maybe$map2 = F3(
	function (func, ma, mb) {
		var _p3 = {ctor: '_Tuple2', _0: ma, _1: mb};
		if (((_p3.ctor === '_Tuple2') && (_p3._0.ctor === 'Just')) && (_p3._1.ctor === 'Just')) {
			return _elm_lang$core$Maybe$Just(
				A2(func, _p3._0._0, _p3._1._0));
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _elm_lang$core$Maybe$map3 = F4(
	function (func, ma, mb, mc) {
		var _p4 = {ctor: '_Tuple3', _0: ma, _1: mb, _2: mc};
		if ((((_p4.ctor === '_Tuple3') && (_p4._0.ctor === 'Just')) && (_p4._1.ctor === 'Just')) && (_p4._2.ctor === 'Just')) {
			return _elm_lang$core$Maybe$Just(
				A3(func, _p4._0._0, _p4._1._0, _p4._2._0));
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _elm_lang$core$Maybe$map4 = F5(
	function (func, ma, mb, mc, md) {
		var _p5 = {ctor: '_Tuple4', _0: ma, _1: mb, _2: mc, _3: md};
		if (((((_p5.ctor === '_Tuple4') && (_p5._0.ctor === 'Just')) && (_p5._1.ctor === 'Just')) && (_p5._2.ctor === 'Just')) && (_p5._3.ctor === 'Just')) {
			return _elm_lang$core$Maybe$Just(
				A4(func, _p5._0._0, _p5._1._0, _p5._2._0, _p5._3._0));
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _elm_lang$core$Maybe$map5 = F6(
	function (func, ma, mb, mc, md, me) {
		var _p6 = {ctor: '_Tuple5', _0: ma, _1: mb, _2: mc, _3: md, _4: me};
		if ((((((_p6.ctor === '_Tuple5') && (_p6._0.ctor === 'Just')) && (_p6._1.ctor === 'Just')) && (_p6._2.ctor === 'Just')) && (_p6._3.ctor === 'Just')) && (_p6._4.ctor === 'Just')) {
			return _elm_lang$core$Maybe$Just(
				A5(func, _p6._0._0, _p6._1._0, _p6._2._0, _p6._3._0, _p6._4._0));
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});

//import Native.Utils //

var _elm_lang$core$Native_List = function() {

var Nil = { ctor: '[]' };

function Cons(hd, tl)
{
	return { ctor: '::', _0: hd, _1: tl };
}

function fromArray(arr)
{
	var out = Nil;
	for (var i = arr.length; i--; )
	{
		out = Cons(arr[i], out);
	}
	return out;
}

function toArray(xs)
{
	var out = [];
	while (xs.ctor !== '[]')
	{
		out.push(xs._0);
		xs = xs._1;
	}
	return out;
}

function foldr(f, b, xs)
{
	var arr = toArray(xs);
	var acc = b;
	for (var i = arr.length; i--; )
	{
		acc = A2(f, arr[i], acc);
	}
	return acc;
}

function map2(f, xs, ys)
{
	var arr = [];
	while (xs.ctor !== '[]' && ys.ctor !== '[]')
	{
		arr.push(A2(f, xs._0, ys._0));
		xs = xs._1;
		ys = ys._1;
	}
	return fromArray(arr);
}

function map3(f, xs, ys, zs)
{
	var arr = [];
	while (xs.ctor !== '[]' && ys.ctor !== '[]' && zs.ctor !== '[]')
	{
		arr.push(A3(f, xs._0, ys._0, zs._0));
		xs = xs._1;
		ys = ys._1;
		zs = zs._1;
	}
	return fromArray(arr);
}

function map4(f, ws, xs, ys, zs)
{
	var arr = [];
	while (   ws.ctor !== '[]'
		   && xs.ctor !== '[]'
		   && ys.ctor !== '[]'
		   && zs.ctor !== '[]')
	{
		arr.push(A4(f, ws._0, xs._0, ys._0, zs._0));
		ws = ws._1;
		xs = xs._1;
		ys = ys._1;
		zs = zs._1;
	}
	return fromArray(arr);
}

function map5(f, vs, ws, xs, ys, zs)
{
	var arr = [];
	while (   vs.ctor !== '[]'
		   && ws.ctor !== '[]'
		   && xs.ctor !== '[]'
		   && ys.ctor !== '[]'
		   && zs.ctor !== '[]')
	{
		arr.push(A5(f, vs._0, ws._0, xs._0, ys._0, zs._0));
		vs = vs._1;
		ws = ws._1;
		xs = xs._1;
		ys = ys._1;
		zs = zs._1;
	}
	return fromArray(arr);
}

function sortBy(f, xs)
{
	return fromArray(toArray(xs).sort(function(a, b) {
		return _elm_lang$core$Native_Utils.cmp(f(a), f(b));
	}));
}

function sortWith(f, xs)
{
	return fromArray(toArray(xs).sort(function(a, b) {
		var ord = f(a)(b).ctor;
		return ord === 'EQ' ? 0 : ord === 'LT' ? -1 : 1;
	}));
}

return {
	Nil: Nil,
	Cons: Cons,
	cons: F2(Cons),
	toArray: toArray,
	fromArray: fromArray,

	foldr: F3(foldr),

	map2: F3(map2),
	map3: F4(map3),
	map4: F5(map4),
	map5: F6(map5),
	sortBy: F2(sortBy),
	sortWith: F2(sortWith)
};

}();
var _elm_lang$core$List$sortWith = _elm_lang$core$Native_List.sortWith;
var _elm_lang$core$List$sortBy = _elm_lang$core$Native_List.sortBy;
var _elm_lang$core$List$sort = function (xs) {
	return A2(_elm_lang$core$List$sortBy, _elm_lang$core$Basics$identity, xs);
};
var _elm_lang$core$List$singleton = function (value) {
	return {
		ctor: '::',
		_0: value,
		_1: {ctor: '[]'}
	};
};
var _elm_lang$core$List$drop = F2(
	function (n, list) {
		drop:
		while (true) {
			if (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {
				return list;
			} else {
				var _p0 = list;
				if (_p0.ctor === '[]') {
					return list;
				} else {
					var _v1 = n - 1,
						_v2 = _p0._1;
					n = _v1;
					list = _v2;
					continue drop;
				}
			}
		}
	});
var _elm_lang$core$List$map5 = _elm_lang$core$Native_List.map5;
var _elm_lang$core$List$map4 = _elm_lang$core$Native_List.map4;
var _elm_lang$core$List$map3 = _elm_lang$core$Native_List.map3;
var _elm_lang$core$List$map2 = _elm_lang$core$Native_List.map2;
var _elm_lang$core$List$any = F2(
	function (isOkay, list) {
		any:
		while (true) {
			var _p1 = list;
			if (_p1.ctor === '[]') {
				return false;
			} else {
				if (isOkay(_p1._0)) {
					return true;
				} else {
					var _v4 = isOkay,
						_v5 = _p1._1;
					isOkay = _v4;
					list = _v5;
					continue any;
				}
			}
		}
	});
var _elm_lang$core$List$all = F2(
	function (isOkay, list) {
		return !A2(
			_elm_lang$core$List$any,
			function (_p2) {
				return !isOkay(_p2);
			},
			list);
	});
var _elm_lang$core$List$foldr = _elm_lang$core$Native_List.foldr;
var _elm_lang$core$List$foldl = F3(
	function (func, acc, list) {
		foldl:
		while (true) {
			var _p3 = list;
			if (_p3.ctor === '[]') {
				return acc;
			} else {
				var _v7 = func,
					_v8 = A2(func, _p3._0, acc),
					_v9 = _p3._1;
				func = _v7;
				acc = _v8;
				list = _v9;
				continue foldl;
			}
		}
	});
var _elm_lang$core$List$length = function (xs) {
	return A3(
		_elm_lang$core$List$foldl,
		F2(
			function (_p4, i) {
				return i + 1;
			}),
		0,
		xs);
};
var _elm_lang$core$List$sum = function (numbers) {
	return A3(
		_elm_lang$core$List$foldl,
		F2(
			function (x, y) {
				return x + y;
			}),
		0,
		numbers);
};
var _elm_lang$core$List$product = function (numbers) {
	return A3(
		_elm_lang$core$List$foldl,
		F2(
			function (x, y) {
				return x * y;
			}),
		1,
		numbers);
};
var _elm_lang$core$List$maximum = function (list) {
	var _p5 = list;
	if (_p5.ctor === '::') {
		return _elm_lang$core$Maybe$Just(
			A3(_elm_lang$core$List$foldl, _elm_lang$core$Basics$max, _p5._0, _p5._1));
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _elm_lang$core$List$minimum = function (list) {
	var _p6 = list;
	if (_p6.ctor === '::') {
		return _elm_lang$core$Maybe$Just(
			A3(_elm_lang$core$List$foldl, _elm_lang$core$Basics$min, _p6._0, _p6._1));
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _elm_lang$core$List$member = F2(
	function (x, xs) {
		return A2(
			_elm_lang$core$List$any,
			function (a) {
				return _elm_lang$core$Native_Utils.eq(a, x);
			},
			xs);
	});
var _elm_lang$core$List$isEmpty = function (xs) {
	var _p7 = xs;
	if (_p7.ctor === '[]') {
		return true;
	} else {
		return false;
	}
};
var _elm_lang$core$List$tail = function (list) {
	var _p8 = list;
	if (_p8.ctor === '::') {
		return _elm_lang$core$Maybe$Just(_p8._1);
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _elm_lang$core$List$head = function (list) {
	var _p9 = list;
	if (_p9.ctor === '::') {
		return _elm_lang$core$Maybe$Just(_p9._0);
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _elm_lang$core$List_ops = _elm_lang$core$List_ops || {};
_elm_lang$core$List_ops['::'] = _elm_lang$core$Native_List.cons;
var _elm_lang$core$List$map = F2(
	function (f, xs) {
		return A3(
			_elm_lang$core$List$foldr,
			F2(
				function (x, acc) {
					return {
						ctor: '::',
						_0: f(x),
						_1: acc
					};
				}),
			{ctor: '[]'},
			xs);
	});
var _elm_lang$core$List$filter = F2(
	function (pred, xs) {
		var conditionalCons = F2(
			function (front, back) {
				return pred(front) ? {ctor: '::', _0: front, _1: back} : back;
			});
		return A3(
			_elm_lang$core$List$foldr,
			conditionalCons,
			{ctor: '[]'},
			xs);
	});
var _elm_lang$core$List$maybeCons = F3(
	function (f, mx, xs) {
		var _p10 = f(mx);
		if (_p10.ctor === 'Just') {
			return {ctor: '::', _0: _p10._0, _1: xs};
		} else {
			return xs;
		}
	});
var _elm_lang$core$List$filterMap = F2(
	function (f, xs) {
		return A3(
			_elm_lang$core$List$foldr,
			_elm_lang$core$List$maybeCons(f),
			{ctor: '[]'},
			xs);
	});
var _elm_lang$core$List$reverse = function (list) {
	return A3(
		_elm_lang$core$List$foldl,
		F2(
			function (x, y) {
				return {ctor: '::', _0: x, _1: y};
			}),
		{ctor: '[]'},
		list);
};
var _elm_lang$core$List$scanl = F3(
	function (f, b, xs) {
		var scan1 = F2(
			function (x, accAcc) {
				var _p11 = accAcc;
				if (_p11.ctor === '::') {
					return {
						ctor: '::',
						_0: A2(f, x, _p11._0),
						_1: accAcc
					};
				} else {
					return {ctor: '[]'};
				}
			});
		return _elm_lang$core$List$reverse(
			A3(
				_elm_lang$core$List$foldl,
				scan1,
				{
					ctor: '::',
					_0: b,
					_1: {ctor: '[]'}
				},
				xs));
	});
var _elm_lang$core$List$append = F2(
	function (xs, ys) {
		var _p12 = ys;
		if (_p12.ctor === '[]') {
			return xs;
		} else {
			return A3(
				_elm_lang$core$List$foldr,
				F2(
					function (x, y) {
						return {ctor: '::', _0: x, _1: y};
					}),
				ys,
				xs);
		}
	});
var _elm_lang$core$List$concat = function (lists) {
	return A3(
		_elm_lang$core$List$foldr,
		_elm_lang$core$List$append,
		{ctor: '[]'},
		lists);
};
var _elm_lang$core$List$concatMap = F2(
	function (f, list) {
		return _elm_lang$core$List$concat(
			A2(_elm_lang$core$List$map, f, list));
	});
var _elm_lang$core$List$partition = F2(
	function (pred, list) {
		var step = F2(
			function (x, _p13) {
				var _p14 = _p13;
				var _p16 = _p14._0;
				var _p15 = _p14._1;
				return pred(x) ? {
					ctor: '_Tuple2',
					_0: {ctor: '::', _0: x, _1: _p16},
					_1: _p15
				} : {
					ctor: '_Tuple2',
					_0: _p16,
					_1: {ctor: '::', _0: x, _1: _p15}
				};
			});
		return A3(
			_elm_lang$core$List$foldr,
			step,
			{
				ctor: '_Tuple2',
				_0: {ctor: '[]'},
				_1: {ctor: '[]'}
			},
			list);
	});
var _elm_lang$core$List$unzip = function (pairs) {
	var step = F2(
		function (_p18, _p17) {
			var _p19 = _p18;
			var _p20 = _p17;
			return {
				ctor: '_Tuple2',
				_0: {ctor: '::', _0: _p19._0, _1: _p20._0},
				_1: {ctor: '::', _0: _p19._1, _1: _p20._1}
			};
		});
	return A3(
		_elm_lang$core$List$foldr,
		step,
		{
			ctor: '_Tuple2',
			_0: {ctor: '[]'},
			_1: {ctor: '[]'}
		},
		pairs);
};
var _elm_lang$core$List$intersperse = F2(
	function (sep, xs) {
		var _p21 = xs;
		if (_p21.ctor === '[]') {
			return {ctor: '[]'};
		} else {
			var step = F2(
				function (x, rest) {
					return {
						ctor: '::',
						_0: sep,
						_1: {ctor: '::', _0: x, _1: rest}
					};
				});
			var spersed = A3(
				_elm_lang$core$List$foldr,
				step,
				{ctor: '[]'},
				_p21._1);
			return {ctor: '::', _0: _p21._0, _1: spersed};
		}
	});
var _elm_lang$core$List$takeReverse = F3(
	function (n, list, taken) {
		takeReverse:
		while (true) {
			if (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {
				return taken;
			} else {
				var _p22 = list;
				if (_p22.ctor === '[]') {
					return taken;
				} else {
					var _v23 = n - 1,
						_v24 = _p22._1,
						_v25 = {ctor: '::', _0: _p22._0, _1: taken};
					n = _v23;
					list = _v24;
					taken = _v25;
					continue takeReverse;
				}
			}
		}
	});
var _elm_lang$core$List$takeTailRec = F2(
	function (n, list) {
		return _elm_lang$core$List$reverse(
			A3(
				_elm_lang$core$List$takeReverse,
				n,
				list,
				{ctor: '[]'}));
	});
var _elm_lang$core$List$takeFast = F3(
	function (ctr, n, list) {
		if (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {
			return {ctor: '[]'};
		} else {
			var _p23 = {ctor: '_Tuple2', _0: n, _1: list};
			_v26_5:
			do {
				_v26_1:
				do {
					if (_p23.ctor === '_Tuple2') {
						if (_p23._1.ctor === '[]') {
							return list;
						} else {
							if (_p23._1._1.ctor === '::') {
								switch (_p23._0) {
									case 1:
										break _v26_1;
									case 2:
										return {
											ctor: '::',
											_0: _p23._1._0,
											_1: {
												ctor: '::',
												_0: _p23._1._1._0,
												_1: {ctor: '[]'}
											}
										};
									case 3:
										if (_p23._1._1._1.ctor === '::') {
											return {
												ctor: '::',
												_0: _p23._1._0,
												_1: {
													ctor: '::',
													_0: _p23._1._1._0,
													_1: {
														ctor: '::',
														_0: _p23._1._1._1._0,
														_1: {ctor: '[]'}
													}
												}
											};
										} else {
											break _v26_5;
										}
									default:
										if ((_p23._1._1._1.ctor === '::') && (_p23._1._1._1._1.ctor === '::')) {
											var _p28 = _p23._1._1._1._0;
											var _p27 = _p23._1._1._0;
											var _p26 = _p23._1._0;
											var _p25 = _p23._1._1._1._1._0;
											var _p24 = _p23._1._1._1._1._1;
											return (_elm_lang$core$Native_Utils.cmp(ctr, 1000) > 0) ? {
												ctor: '::',
												_0: _p26,
												_1: {
													ctor: '::',
													_0: _p27,
													_1: {
														ctor: '::',
														_0: _p28,
														_1: {
															ctor: '::',
															_0: _p25,
															_1: A2(_elm_lang$core$List$takeTailRec, n - 4, _p24)
														}
													}
												}
											} : {
												ctor: '::',
												_0: _p26,
												_1: {
													ctor: '::',
													_0: _p27,
													_1: {
														ctor: '::',
														_0: _p28,
														_1: {
															ctor: '::',
															_0: _p25,
															_1: A3(_elm_lang$core$List$takeFast, ctr + 1, n - 4, _p24)
														}
													}
												}
											};
										} else {
											break _v26_5;
										}
								}
							} else {
								if (_p23._0 === 1) {
									break _v26_1;
								} else {
									break _v26_5;
								}
							}
						}
					} else {
						break _v26_5;
					}
				} while(false);
				return {
					ctor: '::',
					_0: _p23._1._0,
					_1: {ctor: '[]'}
				};
			} while(false);
			return list;
		}
	});
var _elm_lang$core$List$take = F2(
	function (n, list) {
		return A3(_elm_lang$core$List$takeFast, 0, n, list);
	});
var _elm_lang$core$List$repeatHelp = F3(
	function (result, n, value) {
		repeatHelp:
		while (true) {
			if (_elm_lang$core$Native_Utils.cmp(n, 0) < 1) {
				return result;
			} else {
				var _v27 = {ctor: '::', _0: value, _1: result},
					_v28 = n - 1,
					_v29 = value;
				result = _v27;
				n = _v28;
				value = _v29;
				continue repeatHelp;
			}
		}
	});
var _elm_lang$core$List$repeat = F2(
	function (n, value) {
		return A3(
			_elm_lang$core$List$repeatHelp,
			{ctor: '[]'},
			n,
			value);
	});
var _elm_lang$core$List$rangeHelp = F3(
	function (lo, hi, list) {
		rangeHelp:
		while (true) {
			if (_elm_lang$core$Native_Utils.cmp(lo, hi) < 1) {
				var _v30 = lo,
					_v31 = hi - 1,
					_v32 = {ctor: '::', _0: hi, _1: list};
				lo = _v30;
				hi = _v31;
				list = _v32;
				continue rangeHelp;
			} else {
				return list;
			}
		}
	});
var _elm_lang$core$List$range = F2(
	function (lo, hi) {
		return A3(
			_elm_lang$core$List$rangeHelp,
			lo,
			hi,
			{ctor: '[]'});
	});
var _elm_lang$core$List$indexedMap = F2(
	function (f, xs) {
		return A3(
			_elm_lang$core$List$map2,
			f,
			A2(
				_elm_lang$core$List$range,
				0,
				_elm_lang$core$List$length(xs) - 1),
			xs);
	});

//import Native.Utils //

var _elm_lang$core$Native_Scheduler = function() {

var MAX_STEPS = 10000;


// TASKS

function succeed(value)
{
	return {
		ctor: '_Task_succeed',
		value: value
	};
}

function fail(error)
{
	return {
		ctor: '_Task_fail',
		value: error
	};
}

function nativeBinding(callback)
{
	return {
		ctor: '_Task_nativeBinding',
		callback: callback,
		cancel: null
	};
}

function andThen(callback, task)
{
	return {
		ctor: '_Task_andThen',
		callback: callback,
		task: task
	};
}

function onError(callback, task)
{
	return {
		ctor: '_Task_onError',
		callback: callback,
		task: task
	};
}

function receive(callback)
{
	return {
		ctor: '_Task_receive',
		callback: callback
	};
}


// PROCESSES

function rawSpawn(task)
{
	var process = {
		ctor: '_Process',
		id: _elm_lang$core$Native_Utils.guid(),
		root: task,
		stack: null,
		mailbox: []
	};

	enqueue(process);

	return process;
}

function spawn(task)
{
	return nativeBinding(function(callback) {
		var process = rawSpawn(task);
		callback(succeed(process));
	});
}

function rawSend(process, msg)
{
	process.mailbox.push(msg);
	enqueue(process);
}

function send(process, msg)
{
	return nativeBinding(function(callback) {
		rawSend(process, msg);
		callback(succeed(_elm_lang$core$Native_Utils.Tuple0));
	});
}

function kill(process)
{
	return nativeBinding(function(callback) {
		var root = process.root;
		if (root.ctor === '_Task_nativeBinding' && root.cancel)
		{
			root.cancel();
		}

		process.root = null;

		callback(succeed(_elm_lang$core$Native_Utils.Tuple0));
	});
}

function sleep(time)
{
	return nativeBinding(function(callback) {
		var id = setTimeout(function() {
			callback(succeed(_elm_lang$core$Native_Utils.Tuple0));
		}, time);

		return function() { clearTimeout(id); };
	});
}


// STEP PROCESSES

function step(numSteps, process)
{
	while (numSteps < MAX_STEPS)
	{
		var ctor = process.root.ctor;

		if (ctor === '_Task_succeed')
		{
			while (process.stack && process.stack.ctor === '_Task_onError')
			{
				process.stack = process.stack.rest;
			}
			if (process.stack === null)
			{
				break;
			}
			process.root = process.stack.callback(process.root.value);
			process.stack = process.stack.rest;
			++numSteps;
			continue;
		}

		if (ctor === '_Task_fail')
		{
			while (process.stack && process.stack.ctor === '_Task_andThen')
			{
				process.stack = process.stack.rest;
			}
			if (process.stack === null)
			{
				break;
			}
			process.root = process.stack.callback(process.root.value);
			process.stack = process.stack.rest;
			++numSteps;
			continue;
		}

		if (ctor === '_Task_andThen')
		{
			process.stack = {
				ctor: '_Task_andThen',
				callback: process.root.callback,
				rest: process.stack
			};
			process.root = process.root.task;
			++numSteps;
			continue;
		}

		if (ctor === '_Task_onError')
		{
			process.stack = {
				ctor: '_Task_onError',
				callback: process.root.callback,
				rest: process.stack
			};
			process.root = process.root.task;
			++numSteps;
			continue;
		}

		if (ctor === '_Task_nativeBinding')
		{
			process.root.cancel = process.root.callback(function(newRoot) {
				process.root = newRoot;
				enqueue(process);
			});

			break;
		}

		if (ctor === '_Task_receive')
		{
			var mailbox = process.mailbox;
			if (mailbox.length === 0)
			{
				break;
			}

			process.root = process.root.callback(mailbox.shift());
			++numSteps;
			continue;
		}

		throw new Error(ctor);
	}

	if (numSteps < MAX_STEPS)
	{
		return numSteps + 1;
	}
	enqueue(process);

	return numSteps;
}


// WORK QUEUE

var working = false;
var workQueue = [];

function enqueue(process)
{
	workQueue.push(process);

	if (!working)
	{
		setTimeout(work, 0);
		working = true;
	}
}

function work()
{
	var numSteps = 0;
	var process;
	while (numSteps < MAX_STEPS && (process = workQueue.shift()))
	{
		if (process.root)
		{
			numSteps = step(numSteps, process);
		}
	}
	if (!process)
	{
		working = false;
		return;
	}
	setTimeout(work, 0);
}


return {
	succeed: succeed,
	fail: fail,
	nativeBinding: nativeBinding,
	andThen: F2(andThen),
	onError: F2(onError),
	receive: receive,

	spawn: spawn,
	kill: kill,
	sleep: sleep,
	send: F2(send),

	rawSpawn: rawSpawn,
	rawSend: rawSend
};

}();
//import //

var _elm_lang$core$Native_Platform = function() {


// PROGRAMS

function program(impl)
{
	return function(flagDecoder)
	{
		return function(object, moduleName)
		{
			object['worker'] = function worker(flags)
			{
				if (typeof flags !== 'undefined')
				{
					throw new Error(
						'The `' + moduleName + '` module does not need flags.\n'
						+ 'Call ' + moduleName + '.worker() with no arguments and you should be all set!'
					);
				}

				return initialize(
					impl.init,
					impl.update,
					impl.subscriptions,
					renderer
				);
			};
		};
	};
}

function programWithFlags(impl)
{
	return function(flagDecoder)
	{
		return function(object, moduleName)
		{
			object['worker'] = function worker(flags)
			{
				if (typeof flagDecoder === 'undefined')
				{
					throw new Error(
						'Are you trying to sneak a Never value into Elm? Trickster!\n'
						+ 'It looks like ' + moduleName + '.main is defined with `programWithFlags` but has type `Program Never`.\n'
						+ 'Use `program` instead if you do not want flags.'
					);
				}

				var result = A2(_elm_lang$core$Native_Json.run, flagDecoder, flags);
				if (result.ctor === 'Err')
				{
					throw new Error(
						moduleName + '.worker(...) was called with an unexpected argument.\n'
						+ 'I tried to convert it to an Elm value, but ran into this problem:\n\n'
						+ result._0
					);
				}

				return initialize(
					impl.init(result._0),
					impl.update,
					impl.subscriptions,
					renderer
				);
			};
		};
	};
}

function renderer(enqueue, _)
{
	return function(_) {};
}


// HTML TO PROGRAM

function htmlToProgram(vnode)
{
	var emptyBag = batch(_elm_lang$core$Native_List.Nil);
	var noChange = _elm_lang$core$Native_Utils.Tuple2(
		_elm_lang$core$Native_Utils.Tuple0,
		emptyBag
	);

	return _elm_lang$virtual_dom$VirtualDom$program({
		init: noChange,
		view: function(model) { return main; },
		update: F2(function(msg, model) { return noChange; }),
		subscriptions: function (model) { return emptyBag; }
	});
}


// INITIALIZE A PROGRAM

function initialize(init, update, subscriptions, renderer)
{
	// ambient state
	var managers = {};
	var updateView;

	// init and update state in main process
	var initApp = _elm_lang$core$Native_Scheduler.nativeBinding(function(callback) {
		var model = init._0;
		updateView = renderer(enqueue, model);
		var cmds = init._1;
		var subs = subscriptions(model);
		dispatchEffects(managers, cmds, subs);
		callback(_elm_lang$core$Native_Scheduler.succeed(model));
	});

	function onMessage(msg, model)
	{
		return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback) {
			var results = A2(update, msg, model);
			model = results._0;
			updateView(model);
			var cmds = results._1;
			var subs = subscriptions(model);
			dispatchEffects(managers, cmds, subs);
			callback(_elm_lang$core$Native_Scheduler.succeed(model));
		});
	}

	var mainProcess = spawnLoop(initApp, onMessage);

	function enqueue(msg)
	{
		_elm_lang$core$Native_Scheduler.rawSend(mainProcess, msg);
	}

	var ports = setupEffects(managers, enqueue);

	return ports ? { ports: ports } : {};
}


// EFFECT MANAGERS

var effectManagers = {};

function setupEffects(managers, callback)
{
	var ports;

	// setup all necessary effect managers
	for (var key in effectManagers)
	{
		var manager = effectManagers[key];

		if (manager.isForeign)
		{
			ports = ports || {};
			ports[key] = manager.tag === 'cmd'
				? setupOutgoingPort(key)
				: setupIncomingPort(key, callback);
		}

		managers[key] = makeManager(manager, callback);
	}

	return ports;
}

function makeManager(info, callback)
{
	var router = {
		main: callback,
		self: undefined
	};

	var tag = info.tag;
	var onEffects = info.onEffects;
	var onSelfMsg = info.onSelfMsg;

	function onMessage(msg, state)
	{
		if (msg.ctor === 'self')
		{
			return A3(onSelfMsg, router, msg._0, state);
		}

		var fx = msg._0;
		switch (tag)
		{
			case 'cmd':
				return A3(onEffects, router, fx.cmds, state);

			case 'sub':
				return A3(onEffects, router, fx.subs, state);

			case 'fx':
				return A4(onEffects, router, fx.cmds, fx.subs, state);
		}
	}

	var process = spawnLoop(info.init, onMessage);
	router.self = process;
	return process;
}

function sendToApp(router, msg)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		router.main(msg);
		callback(_elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Native_Utils.Tuple0));
	});
}

function sendToSelf(router, msg)
{
	return A2(_elm_lang$core$Native_Scheduler.send, router.self, {
		ctor: 'self',
		_0: msg
	});
}


// HELPER for STATEFUL LOOPS

function spawnLoop(init, onMessage)
{
	var andThen = _elm_lang$core$Native_Scheduler.andThen;

	function loop(state)
	{
		var handleMsg = _elm_lang$core$Native_Scheduler.receive(function(msg) {
			return onMessage(msg, state);
		});
		return A2(andThen, loop, handleMsg);
	}

	var task = A2(andThen, loop, init);

	return _elm_lang$core$Native_Scheduler.rawSpawn(task);
}


// BAGS

function leaf(home)
{
	return function(value)
	{
		return {
			type: 'leaf',
			home: home,
			value: value
		};
	};
}

function batch(list)
{
	return {
		type: 'node',
		branches: list
	};
}

function map(tagger, bag)
{
	return {
		type: 'map',
		tagger: tagger,
		tree: bag
	}
}


// PIPE BAGS INTO EFFECT MANAGERS

function dispatchEffects(managers, cmdBag, subBag)
{
	var effectsDict = {};
	gatherEffects(true, cmdBag, effectsDict, null);
	gatherEffects(false, subBag, effectsDict, null);

	for (var home in managers)
	{
		var fx = home in effectsDict
			? effectsDict[home]
			: {
				cmds: _elm_lang$core$Native_List.Nil,
				subs: _elm_lang$core$Native_List.Nil
			};

		_elm_lang$core$Native_Scheduler.rawSend(managers[home], { ctor: 'fx', _0: fx });
	}
}

function gatherEffects(isCmd, bag, effectsDict, taggers)
{
	switch (bag.type)
	{
		case 'leaf':
			var home = bag.home;
			var effect = toEffect(isCmd, home, taggers, bag.value);
			effectsDict[home] = insert(isCmd, effect, effectsDict[home]);
			return;

		case 'node':
			var list = bag.branches;
			while (list.ctor !== '[]')
			{
				gatherEffects(isCmd, list._0, effectsDict, taggers);
				list = list._1;
			}
			return;

		case 'map':
			gatherEffects(isCmd, bag.tree, effectsDict, {
				tagger: bag.tagger,
				rest: taggers
			});
			return;
	}
}

function toEffect(isCmd, home, taggers, value)
{
	function applyTaggers(x)
	{
		var temp = taggers;
		while (temp)
		{
			x = temp.tagger(x);
			temp = temp.rest;
		}
		return x;
	}

	var map = isCmd
		? effectManagers[home].cmdMap
		: effectManagers[home].subMap;

	return A2(map, applyTaggers, value)
}

function insert(isCmd, newEffect, effects)
{
	effects = effects || {
		cmds: _elm_lang$core$Native_List.Nil,
		subs: _elm_lang$core$Native_List.Nil
	};
	if (isCmd)
	{
		effects.cmds = _elm_lang$core$Native_List.Cons(newEffect, effects.cmds);
		return effects;
	}
	effects.subs = _elm_lang$core$Native_List.Cons(newEffect, effects.subs);
	return effects;
}


// PORTS

function checkPortName(name)
{
	if (name in effectManagers)
	{
		throw new Error('There can only be one port named `' + name + '`, but your program has multiple.');
	}
}


// OUTGOING PORTS

function outgoingPort(name, converter)
{
	checkPortName(name);
	effectManagers[name] = {
		tag: 'cmd',
		cmdMap: outgoingPortMap,
		converter: converter,
		isForeign: true
	};
	return leaf(name);
}

var outgoingPortMap = F2(function cmdMap(tagger, value) {
	return value;
});

function setupOutgoingPort(name)
{
	var subs = [];
	var converter = effectManagers[name].converter;

	// CREATE MANAGER

	var init = _elm_lang$core$Native_Scheduler.succeed(null);

	function onEffects(router, cmdList, state)
	{
		while (cmdList.ctor !== '[]')
		{
			// grab a separate reference to subs in case unsubscribe is called
			var currentSubs = subs;
			var value = converter(cmdList._0);
			for (var i = 0; i < currentSubs.length; i++)
			{
				currentSubs[i](value);
			}
			cmdList = cmdList._1;
		}
		return init;
	}

	effectManagers[name].init = init;
	effectManagers[name].onEffects = F3(onEffects);

	// PUBLIC API

	function subscribe(callback)
	{
		subs.push(callback);
	}

	function unsubscribe(callback)
	{
		// copy subs into a new array in case unsubscribe is called within a
		// subscribed callback
		subs = subs.slice();
		var index = subs.indexOf(callback);
		if (index >= 0)
		{
			subs.splice(index, 1);
		}
	}

	return {
		subscribe: subscribe,
		unsubscribe: unsubscribe
	};
}


// INCOMING PORTS

function incomingPort(name, converter)
{
	checkPortName(name);
	effectManagers[name] = {
		tag: 'sub',
		subMap: incomingPortMap,
		converter: converter,
		isForeign: true
	};
	return leaf(name);
}

var incomingPortMap = F2(function subMap(tagger, finalTagger)
{
	return function(value)
	{
		return tagger(finalTagger(value));
	};
});

function setupIncomingPort(name, callback)
{
	var sentBeforeInit = [];
	var subs = _elm_lang$core$Native_List.Nil;
	var converter = effectManagers[name].converter;
	var currentOnEffects = preInitOnEffects;
	var currentSend = preInitSend;

	// CREATE MANAGER

	var init = _elm_lang$core$Native_Scheduler.succeed(null);

	function preInitOnEffects(router, subList, state)
	{
		var postInitResult = postInitOnEffects(router, subList, state);

		for(var i = 0; i < sentBeforeInit.length; i++)
		{
			postInitSend(sentBeforeInit[i]);
		}

		sentBeforeInit = null; // to release objects held in queue
		currentSend = postInitSend;
		currentOnEffects = postInitOnEffects;
		return postInitResult;
	}

	function postInitOnEffects(router, subList, state)
	{
		subs = subList;
		return init;
	}

	function onEffects(router, subList, state)
	{
		return currentOnEffects(router, subList, state);
	}

	effectManagers[name].init = init;
	effectManagers[name].onEffects = F3(onEffects);

	// PUBLIC API

	function preInitSend(value)
	{
		sentBeforeInit.push(value);
	}

	function postInitSend(value)
	{
		var temp = subs;
		while (temp.ctor !== '[]')
		{
			callback(temp._0(value));
			temp = temp._1;
		}
	}

	function send(incomingValue)
	{
		var result = A2(_elm_lang$core$Json_Decode$decodeValue, converter, incomingValue);
		if (result.ctor === 'Err')
		{
			throw new Error('Trying to send an unexpected type of value through port `' + name + '`:\n' + result._0);
		}

		currentSend(result._0);
	}

	return { send: send };
}

return {
	// routers
	sendToApp: F2(sendToApp),
	sendToSelf: F2(sendToSelf),

	// global setup
	effectManagers: effectManagers,
	outgoingPort: outgoingPort,
	incomingPort: incomingPort,

	htmlToProgram: htmlToProgram,
	program: program,
	programWithFlags: programWithFlags,
	initialize: initialize,

	// effect bags
	leaf: leaf,
	batch: batch,
	map: F2(map)
};

}();

var _elm_lang$core$Platform_Cmd$batch = _elm_lang$core$Native_Platform.batch;
var _elm_lang$core$Platform_Cmd$none = _elm_lang$core$Platform_Cmd$batch(
	{ctor: '[]'});
var _elm_lang$core$Platform_Cmd_ops = _elm_lang$core$Platform_Cmd_ops || {};
_elm_lang$core$Platform_Cmd_ops['!'] = F2(
	function (model, commands) {
		return {
			ctor: '_Tuple2',
			_0: model,
			_1: _elm_lang$core$Platform_Cmd$batch(commands)
		};
	});
var _elm_lang$core$Platform_Cmd$map = _elm_lang$core$Native_Platform.map;
var _elm_lang$core$Platform_Cmd$Cmd = {ctor: 'Cmd'};

var _elm_lang$core$Platform_Sub$batch = _elm_lang$core$Native_Platform.batch;
var _elm_lang$core$Platform_Sub$none = _elm_lang$core$Platform_Sub$batch(
	{ctor: '[]'});
var _elm_lang$core$Platform_Sub$map = _elm_lang$core$Native_Platform.map;
var _elm_lang$core$Platform_Sub$Sub = {ctor: 'Sub'};

var _elm_lang$core$Platform$hack = _elm_lang$core$Native_Scheduler.succeed;
var _elm_lang$core$Platform$sendToSelf = _elm_lang$core$Native_Platform.sendToSelf;
var _elm_lang$core$Platform$sendToApp = _elm_lang$core$Native_Platform.sendToApp;
var _elm_lang$core$Platform$programWithFlags = _elm_lang$core$Native_Platform.programWithFlags;
var _elm_lang$core$Platform$program = _elm_lang$core$Native_Platform.program;
var _elm_lang$core$Platform$Program = {ctor: 'Program'};
var _elm_lang$core$Platform$Task = {ctor: 'Task'};
var _elm_lang$core$Platform$ProcessId = {ctor: 'ProcessId'};
var _elm_lang$core$Platform$Router = {ctor: 'Router'};

var _elm_lang$core$Result$toMaybe = function (result) {
	var _p0 = result;
	if (_p0.ctor === 'Ok') {
		return _elm_lang$core$Maybe$Just(_p0._0);
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _elm_lang$core$Result$withDefault = F2(
	function (def, result) {
		var _p1 = result;
		if (_p1.ctor === 'Ok') {
			return _p1._0;
		} else {
			return def;
		}
	});
var _elm_lang$core$Result$Err = function (a) {
	return {ctor: 'Err', _0: a};
};
var _elm_lang$core$Result$andThen = F2(
	function (callback, result) {
		var _p2 = result;
		if (_p2.ctor === 'Ok') {
			return callback(_p2._0);
		} else {
			return _elm_lang$core$Result$Err(_p2._0);
		}
	});
var _elm_lang$core$Result$Ok = function (a) {
	return {ctor: 'Ok', _0: a};
};
var _elm_lang$core$Result$map = F2(
	function (func, ra) {
		var _p3 = ra;
		if (_p3.ctor === 'Ok') {
			return _elm_lang$core$Result$Ok(
				func(_p3._0));
		} else {
			return _elm_lang$core$Result$Err(_p3._0);
		}
	});
var _elm_lang$core$Result$map2 = F3(
	function (func, ra, rb) {
		var _p4 = {ctor: '_Tuple2', _0: ra, _1: rb};
		if (_p4._0.ctor === 'Ok') {
			if (_p4._1.ctor === 'Ok') {
				return _elm_lang$core$Result$Ok(
					A2(func, _p4._0._0, _p4._1._0));
			} else {
				return _elm_lang$core$Result$Err(_p4._1._0);
			}
		} else {
			return _elm_lang$core$Result$Err(_p4._0._0);
		}
	});
var _elm_lang$core$Result$map3 = F4(
	function (func, ra, rb, rc) {
		var _p5 = {ctor: '_Tuple3', _0: ra, _1: rb, _2: rc};
		if (_p5._0.ctor === 'Ok') {
			if (_p5._1.ctor === 'Ok') {
				if (_p5._2.ctor === 'Ok') {
					return _elm_lang$core$Result$Ok(
						A3(func, _p5._0._0, _p5._1._0, _p5._2._0));
				} else {
					return _elm_lang$core$Result$Err(_p5._2._0);
				}
			} else {
				return _elm_lang$core$Result$Err(_p5._1._0);
			}
		} else {
			return _elm_lang$core$Result$Err(_p5._0._0);
		}
	});
var _elm_lang$core$Result$map4 = F5(
	function (func, ra, rb, rc, rd) {
		var _p6 = {ctor: '_Tuple4', _0: ra, _1: rb, _2: rc, _3: rd};
		if (_p6._0.ctor === 'Ok') {
			if (_p6._1.ctor === 'Ok') {
				if (_p6._2.ctor === 'Ok') {
					if (_p6._3.ctor === 'Ok') {
						return _elm_lang$core$Result$Ok(
							A4(func, _p6._0._0, _p6._1._0, _p6._2._0, _p6._3._0));
					} else {
						return _elm_lang$core$Result$Err(_p6._3._0);
					}
				} else {
					return _elm_lang$core$Result$Err(_p6._2._0);
				}
			} else {
				return _elm_lang$core$Result$Err(_p6._1._0);
			}
		} else {
			return _elm_lang$core$Result$Err(_p6._0._0);
		}
	});
var _elm_lang$core$Result$map5 = F6(
	function (func, ra, rb, rc, rd, re) {
		var _p7 = {ctor: '_Tuple5', _0: ra, _1: rb, _2: rc, _3: rd, _4: re};
		if (_p7._0.ctor === 'Ok') {
			if (_p7._1.ctor === 'Ok') {
				if (_p7._2.ctor === 'Ok') {
					if (_p7._3.ctor === 'Ok') {
						if (_p7._4.ctor === 'Ok') {
							return _elm_lang$core$Result$Ok(
								A5(func, _p7._0._0, _p7._1._0, _p7._2._0, _p7._3._0, _p7._4._0));
						} else {
							return _elm_lang$core$Result$Err(_p7._4._0);
						}
					} else {
						return _elm_lang$core$Result$Err(_p7._3._0);
					}
				} else {
					return _elm_lang$core$Result$Err(_p7._2._0);
				}
			} else {
				return _elm_lang$core$Result$Err(_p7._1._0);
			}
		} else {
			return _elm_lang$core$Result$Err(_p7._0._0);
		}
	});
var _elm_lang$core$Result$mapError = F2(
	function (f, result) {
		var _p8 = result;
		if (_p8.ctor === 'Ok') {
			return _elm_lang$core$Result$Ok(_p8._0);
		} else {
			return _elm_lang$core$Result$Err(
				f(_p8._0));
		}
	});
var _elm_lang$core$Result$fromMaybe = F2(
	function (err, maybe) {
		var _p9 = maybe;
		if (_p9.ctor === 'Just') {
			return _elm_lang$core$Result$Ok(_p9._0);
		} else {
			return _elm_lang$core$Result$Err(err);
		}
	});

var _elm_lang$core$Task$onError = _elm_lang$core$Native_Scheduler.onError;
var _elm_lang$core$Task$andThen = _elm_lang$core$Native_Scheduler.andThen;
var _elm_lang$core$Task$spawnCmd = F2(
	function (router, _p0) {
		var _p1 = _p0;
		return _elm_lang$core$Native_Scheduler.spawn(
			A2(
				_elm_lang$core$Task$andThen,
				_elm_lang$core$Platform$sendToApp(router),
				_p1._0));
	});
var _elm_lang$core$Task$fail = _elm_lang$core$Native_Scheduler.fail;
var _elm_lang$core$Task$mapError = F2(
	function (convert, task) {
		return A2(
			_elm_lang$core$Task$onError,
			function (_p2) {
				return _elm_lang$core$Task$fail(
					convert(_p2));
			},
			task);
	});
var _elm_lang$core$Task$succeed = _elm_lang$core$Native_Scheduler.succeed;
var _elm_lang$core$Task$map = F2(
	function (func, taskA) {
		return A2(
			_elm_lang$core$Task$andThen,
			function (a) {
				return _elm_lang$core$Task$succeed(
					func(a));
			},
			taskA);
	});
var _elm_lang$core$Task$map2 = F3(
	function (func, taskA, taskB) {
		return A2(
			_elm_lang$core$Task$andThen,
			function (a) {
				return A2(
					_elm_lang$core$Task$andThen,
					function (b) {
						return _elm_lang$core$Task$succeed(
							A2(func, a, b));
					},
					taskB);
			},
			taskA);
	});
var _elm_lang$core$Task$map3 = F4(
	function (func, taskA, taskB, taskC) {
		return A2(
			_elm_lang$core$Task$andThen,
			function (a) {
				return A2(
					_elm_lang$core$Task$andThen,
					function (b) {
						return A2(
							_elm_lang$core$Task$andThen,
							function (c) {
								return _elm_lang$core$Task$succeed(
									A3(func, a, b, c));
							},
							taskC);
					},
					taskB);
			},
			taskA);
	});
var _elm_lang$core$Task$map4 = F5(
	function (func, taskA, taskB, taskC, taskD) {
		return A2(
			_elm_lang$core$Task$andThen,
			function (a) {
				return A2(
					_elm_lang$core$Task$andThen,
					function (b) {
						return A2(
							_elm_lang$core$Task$andThen,
							function (c) {
								return A2(
									_elm_lang$core$Task$andThen,
									function (d) {
										return _elm_lang$core$Task$succeed(
											A4(func, a, b, c, d));
									},
									taskD);
							},
							taskC);
					},
					taskB);
			},
			taskA);
	});
var _elm_lang$core$Task$map5 = F6(
	function (func, taskA, taskB, taskC, taskD, taskE) {
		return A2(
			_elm_lang$core$Task$andThen,
			function (a) {
				return A2(
					_elm_lang$core$Task$andThen,
					function (b) {
						return A2(
							_elm_lang$core$Task$andThen,
							function (c) {
								return A2(
									_elm_lang$core$Task$andThen,
									function (d) {
										return A2(
											_elm_lang$core$Task$andThen,
											function (e) {
												return _elm_lang$core$Task$succeed(
													A5(func, a, b, c, d, e));
											},
											taskE);
									},
									taskD);
							},
							taskC);
					},
					taskB);
			},
			taskA);
	});
var _elm_lang$core$Task$sequence = function (tasks) {
	var _p3 = tasks;
	if (_p3.ctor === '[]') {
		return _elm_lang$core$Task$succeed(
			{ctor: '[]'});
	} else {
		return A3(
			_elm_lang$core$Task$map2,
			F2(
				function (x, y) {
					return {ctor: '::', _0: x, _1: y};
				}),
			_p3._0,
			_elm_lang$core$Task$sequence(_p3._1));
	}
};
var _elm_lang$core$Task$onEffects = F3(
	function (router, commands, state) {
		return A2(
			_elm_lang$core$Task$map,
			function (_p4) {
				return {ctor: '_Tuple0'};
			},
			_elm_lang$core$Task$sequence(
				A2(
					_elm_lang$core$List$map,
					_elm_lang$core$Task$spawnCmd(router),
					commands)));
	});
var _elm_lang$core$Task$init = _elm_lang$core$Task$succeed(
	{ctor: '_Tuple0'});
var _elm_lang$core$Task$onSelfMsg = F3(
	function (_p7, _p6, _p5) {
		return _elm_lang$core$Task$succeed(
			{ctor: '_Tuple0'});
	});
var _elm_lang$core$Task$command = _elm_lang$core$Native_Platform.leaf('Task');
var _elm_lang$core$Task$Perform = function (a) {
	return {ctor: 'Perform', _0: a};
};
var _elm_lang$core$Task$perform = F2(
	function (toMessage, task) {
		return _elm_lang$core$Task$command(
			_elm_lang$core$Task$Perform(
				A2(_elm_lang$core$Task$map, toMessage, task)));
	});
var _elm_lang$core$Task$attempt = F2(
	function (resultToMessage, task) {
		return _elm_lang$core$Task$command(
			_elm_lang$core$Task$Perform(
				A2(
					_elm_lang$core$Task$onError,
					function (_p8) {
						return _elm_lang$core$Task$succeed(
							resultToMessage(
								_elm_lang$core$Result$Err(_p8)));
					},
					A2(
						_elm_lang$core$Task$andThen,
						function (_p9) {
							return _elm_lang$core$Task$succeed(
								resultToMessage(
									_elm_lang$core$Result$Ok(_p9)));
						},
						task))));
	});
var _elm_lang$core$Task$cmdMap = F2(
	function (tagger, _p10) {
		var _p11 = _p10;
		return _elm_lang$core$Task$Perform(
			A2(_elm_lang$core$Task$map, tagger, _p11._0));
	});
_elm_lang$core$Native_Platform.effectManagers['Task'] = {pkg: 'elm-lang/core', init: _elm_lang$core$Task$init, onEffects: _elm_lang$core$Task$onEffects, onSelfMsg: _elm_lang$core$Task$onSelfMsg, tag: 'cmd', cmdMap: _elm_lang$core$Task$cmdMap};

//import Native.Utils //

var _elm_lang$core$Native_Debug = function() {

function log(tag, value)
{
	var msg = tag + ': ' + _elm_lang$core$Native_Utils.toString(value);
	var process = process || {};
	if (process.stdout)
	{
		process.stdout.write(msg);
	}
	else
	{
		console.log(msg);
	}
	return value;
}

function crash(message)
{
	throw new Error(message);
}

return {
	crash: crash,
	log: F2(log)
};

}();
//import Maybe, Native.List, Native.Utils, Result //

var _elm_lang$core$Native_String = function() {

function isEmpty(str)
{
	return str.length === 0;
}
function cons(chr, str)
{
	return chr + str;
}
function uncons(str)
{
	var hd = str[0];
	if (hd)
	{
		return _elm_lang$core$Maybe$Just(_elm_lang$core$Native_Utils.Tuple2(_elm_lang$core$Native_Utils.chr(hd), str.slice(1)));
	}
	return _elm_lang$core$Maybe$Nothing;
}
function append(a, b)
{
	return a + b;
}
function concat(strs)
{
	return _elm_lang$core$Native_List.toArray(strs).join('');
}
function length(str)
{
	return str.length;
}
function map(f, str)
{
	var out = str.split('');
	for (var i = out.length; i--; )
	{
		out[i] = f(_elm_lang$core$Native_Utils.chr(out[i]));
	}
	return out.join('');
}
function filter(pred, str)
{
	return str.split('').map(_elm_lang$core$Native_Utils.chr).filter(pred).join('');
}
function reverse(str)
{
	return str.split('').reverse().join('');
}
function foldl(f, b, str)
{
	var len = str.length;
	for (var i = 0; i < len; ++i)
	{
		b = A2(f, _elm_lang$core$Native_Utils.chr(str[i]), b);
	}
	return b;
}
function foldr(f, b, str)
{
	for (var i = str.length; i--; )
	{
		b = A2(f, _elm_lang$core$Native_Utils.chr(str[i]), b);
	}
	return b;
}
function split(sep, str)
{
	return _elm_lang$core$Native_List.fromArray(str.split(sep));
}
function join(sep, strs)
{
	return _elm_lang$core$Native_List.toArray(strs).join(sep);
}
function repeat(n, str)
{
	var result = '';
	while (n > 0)
	{
		if (n & 1)
		{
			result += str;
		}
		n >>= 1, str += str;
	}
	return result;
}
function slice(start, end, str)
{
	return str.slice(start, end);
}
function left(n, str)
{
	return n < 1 ? '' : str.slice(0, n);
}
function right(n, str)
{
	return n < 1 ? '' : str.slice(-n);
}
function dropLeft(n, str)
{
	return n < 1 ? str : str.slice(n);
}
function dropRight(n, str)
{
	return n < 1 ? str : str.slice(0, -n);
}
function pad(n, chr, str)
{
	var half = (n - str.length) / 2;
	return repeat(Math.ceil(half), chr) + str + repeat(half | 0, chr);
}
function padRight(n, chr, str)
{
	return str + repeat(n - str.length, chr);
}
function padLeft(n, chr, str)
{
	return repeat(n - str.length, chr) + str;
}

function trim(str)
{
	return str.trim();
}
function trimLeft(str)
{
	return str.replace(/^\s+/, '');
}
function trimRight(str)
{
	return str.replace(/\s+$/, '');
}

function words(str)
{
	return _elm_lang$core$Native_List.fromArray(str.trim().split(/\s+/g));
}
function lines(str)
{
	return _elm_lang$core$Native_List.fromArray(str.split(/\r\n|\r|\n/g));
}

function toUpper(str)
{
	return str.toUpperCase();
}
function toLower(str)
{
	return str.toLowerCase();
}

function any(pred, str)
{
	for (var i = str.length; i--; )
	{
		if (pred(_elm_lang$core$Native_Utils.chr(str[i])))
		{
			return true;
		}
	}
	return false;
}
function all(pred, str)
{
	for (var i = str.length; i--; )
	{
		if (!pred(_elm_lang$core$Native_Utils.chr(str[i])))
		{
			return false;
		}
	}
	return true;
}

function contains(sub, str)
{
	return str.indexOf(sub) > -1;
}
function startsWith(sub, str)
{
	return str.indexOf(sub) === 0;
}
function endsWith(sub, str)
{
	return str.length >= sub.length &&
		str.lastIndexOf(sub) === str.length - sub.length;
}
function indexes(sub, str)
{
	var subLen = sub.length;

	if (subLen < 1)
	{
		return _elm_lang$core$Native_List.Nil;
	}

	var i = 0;
	var is = [];

	while ((i = str.indexOf(sub, i)) > -1)
	{
		is.push(i);
		i = i + subLen;
	}

	return _elm_lang$core$Native_List.fromArray(is);
}


function toInt(s)
{
	var len = s.length;

	// if empty
	if (len === 0)
	{
		return intErr(s);
	}

	// if hex
	var c = s[0];
	if (c === '0' && s[1] === 'x')
	{
		for (var i = 2; i < len; ++i)
		{
			var c = s[i];
			if (('0' <= c && c <= '9') || ('A' <= c && c <= 'F') || ('a' <= c && c <= 'f'))
			{
				continue;
			}
			return intErr(s);
		}
		return _elm_lang$core$Result$Ok(parseInt(s, 16));
	}

	// is decimal
	if (c > '9' || (c < '0' && c !== '-' && c !== '+'))
	{
		return intErr(s);
	}
	for (var i = 1; i < len; ++i)
	{
		var c = s[i];
		if (c < '0' || '9' < c)
		{
			return intErr(s);
		}
	}

	return _elm_lang$core$Result$Ok(parseInt(s, 10));
}

function intErr(s)
{
	return _elm_lang$core$Result$Err("could not convert string '" + s + "' to an Int");
}


function toFloat(s)
{
	// check if it is a hex, octal, or binary number
	if (s.length === 0 || /[\sxbo]/.test(s))
	{
		return floatErr(s);
	}
	var n = +s;
	// faster isNaN check
	return n === n ? _elm_lang$core$Result$Ok(n) : floatErr(s);
}

function floatErr(s)
{
	return _elm_lang$core$Result$Err("could not convert string '" + s + "' to a Float");
}


function toList(str)
{
	return _elm_lang$core$Native_List.fromArray(str.split('').map(_elm_lang$core$Native_Utils.chr));
}
function fromList(chars)
{
	return _elm_lang$core$Native_List.toArray(chars).join('');
}

return {
	isEmpty: isEmpty,
	cons: F2(cons),
	uncons: uncons,
	append: F2(append),
	concat: concat,
	length: length,
	map: F2(map),
	filter: F2(filter),
	reverse: reverse,
	foldl: F3(foldl),
	foldr: F3(foldr),

	split: F2(split),
	join: F2(join),
	repeat: F2(repeat),

	slice: F3(slice),
	left: F2(left),
	right: F2(right),
	dropLeft: F2(dropLeft),
	dropRight: F2(dropRight),

	pad: F3(pad),
	padLeft: F3(padLeft),
	padRight: F3(padRight),

	trim: trim,
	trimLeft: trimLeft,
	trimRight: trimRight,

	words: words,
	lines: lines,

	toUpper: toUpper,
	toLower: toLower,

	any: F2(any),
	all: F2(all),

	contains: F2(contains),
	startsWith: F2(startsWith),
	endsWith: F2(endsWith),
	indexes: F2(indexes),

	toInt: toInt,
	toFloat: toFloat,
	toList: toList,
	fromList: fromList
};

}();

//import Native.Utils //

var _elm_lang$core$Native_Char = function() {

return {
	fromCode: function(c) { return _elm_lang$core$Native_Utils.chr(String.fromCharCode(c)); },
	toCode: function(c) { return c.charCodeAt(0); },
	toUpper: function(c) { return _elm_lang$core$Native_Utils.chr(c.toUpperCase()); },
	toLower: function(c) { return _elm_lang$core$Native_Utils.chr(c.toLowerCase()); },
	toLocaleUpper: function(c) { return _elm_lang$core$Native_Utils.chr(c.toLocaleUpperCase()); },
	toLocaleLower: function(c) { return _elm_lang$core$Native_Utils.chr(c.toLocaleLowerCase()); }
};

}();
var _elm_lang$core$Char$fromCode = _elm_lang$core$Native_Char.fromCode;
var _elm_lang$core$Char$toCode = _elm_lang$core$Native_Char.toCode;
var _elm_lang$core$Char$toLocaleLower = _elm_lang$core$Native_Char.toLocaleLower;
var _elm_lang$core$Char$toLocaleUpper = _elm_lang$core$Native_Char.toLocaleUpper;
var _elm_lang$core$Char$toLower = _elm_lang$core$Native_Char.toLower;
var _elm_lang$core$Char$toUpper = _elm_lang$core$Native_Char.toUpper;
var _elm_lang$core$Char$isBetween = F3(
	function (low, high, $char) {
		var code = _elm_lang$core$Char$toCode($char);
		return (_elm_lang$core$Native_Utils.cmp(
			code,
			_elm_lang$core$Char$toCode(low)) > -1) && (_elm_lang$core$Native_Utils.cmp(
			code,
			_elm_lang$core$Char$toCode(high)) < 1);
	});
var _elm_lang$core$Char$isUpper = A2(
	_elm_lang$core$Char$isBetween,
	_elm_lang$core$Native_Utils.chr('A'),
	_elm_lang$core$Native_Utils.chr('Z'));
var _elm_lang$core$Char$isLower = A2(
	_elm_lang$core$Char$isBetween,
	_elm_lang$core$Native_Utils.chr('a'),
	_elm_lang$core$Native_Utils.chr('z'));
var _elm_lang$core$Char$isDigit = A2(
	_elm_lang$core$Char$isBetween,
	_elm_lang$core$Native_Utils.chr('0'),
	_elm_lang$core$Native_Utils.chr('9'));
var _elm_lang$core$Char$isOctDigit = A2(
	_elm_lang$core$Char$isBetween,
	_elm_lang$core$Native_Utils.chr('0'),
	_elm_lang$core$Native_Utils.chr('7'));
var _elm_lang$core$Char$isHexDigit = function ($char) {
	return _elm_lang$core$Char$isDigit($char) || (A3(
		_elm_lang$core$Char$isBetween,
		_elm_lang$core$Native_Utils.chr('a'),
		_elm_lang$core$Native_Utils.chr('f'),
		$char) || A3(
		_elm_lang$core$Char$isBetween,
		_elm_lang$core$Native_Utils.chr('A'),
		_elm_lang$core$Native_Utils.chr('F'),
		$char));
};

var _elm_lang$core$String$fromList = _elm_lang$core$Native_String.fromList;
var _elm_lang$core$String$toList = _elm_lang$core$Native_String.toList;
var _elm_lang$core$String$toFloat = _elm_lang$core$Native_String.toFloat;
var _elm_lang$core$String$toInt = _elm_lang$core$Native_String.toInt;
var _elm_lang$core$String$indices = _elm_lang$core$Native_String.indexes;
var _elm_lang$core$String$indexes = _elm_lang$core$Native_String.indexes;
var _elm_lang$core$String$endsWith = _elm_lang$core$Native_String.endsWith;
var _elm_lang$core$String$startsWith = _elm_lang$core$Native_String.startsWith;
var _elm_lang$core$String$contains = _elm_lang$core$Native_String.contains;
var _elm_lang$core$String$all = _elm_lang$core$Native_String.all;
var _elm_lang$core$String$any = _elm_lang$core$Native_String.any;
var _elm_lang$core$String$toLower = _elm_lang$core$Native_String.toLower;
var _elm_lang$core$String$toUpper = _elm_lang$core$Native_String.toUpper;
var _elm_lang$core$String$lines = _elm_lang$core$Native_String.lines;
var _elm_lang$core$String$words = _elm_lang$core$Native_String.words;
var _elm_lang$core$String$trimRight = _elm_lang$core$Native_String.trimRight;
var _elm_lang$core$String$trimLeft = _elm_lang$core$Native_String.trimLeft;
var _elm_lang$core$String$trim = _elm_lang$core$Native_String.trim;
var _elm_lang$core$String$padRight = _elm_lang$core$Native_String.padRight;
var _elm_lang$core$String$padLeft = _elm_lang$core$Native_String.padLeft;
var _elm_lang$core$String$pad = _elm_lang$core$Native_String.pad;
var _elm_lang$core$String$dropRight = _elm_lang$core$Native_String.dropRight;
var _elm_lang$core$String$dropLeft = _elm_lang$core$Native_String.dropLeft;
var _elm_lang$core$String$right = _elm_lang$core$Native_String.right;
var _elm_lang$core$String$left = _elm_lang$core$Native_String.left;
var _elm_lang$core$String$slice = _elm_lang$core$Native_String.slice;
var _elm_lang$core$String$repeat = _elm_lang$core$Native_String.repeat;
var _elm_lang$core$String$join = _elm_lang$core$Native_String.join;
var _elm_lang$core$String$split = _elm_lang$core$Native_String.split;
var _elm_lang$core$String$foldr = _elm_lang$core$Native_String.foldr;
var _elm_lang$core$String$foldl = _elm_lang$core$Native_String.foldl;
var _elm_lang$core$String$reverse = _elm_lang$core$Native_String.reverse;
var _elm_lang$core$String$filter = _elm_lang$core$Native_String.filter;
var _elm_lang$core$String$map = _elm_lang$core$Native_String.map;
var _elm_lang$core$String$length = _elm_lang$core$Native_String.length;
var _elm_lang$core$String$concat = _elm_lang$core$Native_String.concat;
var _elm_lang$core$String$append = _elm_lang$core$Native_String.append;
var _elm_lang$core$String$uncons = _elm_lang$core$Native_String.uncons;
var _elm_lang$core$String$cons = _elm_lang$core$Native_String.cons;
var _elm_lang$core$String$fromChar = function ($char) {
	return A2(_elm_lang$core$String$cons, $char, '');
};
var _elm_lang$core$String$isEmpty = _elm_lang$core$Native_String.isEmpty;

var _elm_lang$core$Dict$foldr = F3(
	function (f, acc, t) {
		foldr:
		while (true) {
			var _p0 = t;
			if (_p0.ctor === 'RBEmpty_elm_builtin') {
				return acc;
			} else {
				var _v1 = f,
					_v2 = A3(
					f,
					_p0._1,
					_p0._2,
					A3(_elm_lang$core$Dict$foldr, f, acc, _p0._4)),
					_v3 = _p0._3;
				f = _v1;
				acc = _v2;
				t = _v3;
				continue foldr;
			}
		}
	});
var _elm_lang$core$Dict$keys = function (dict) {
	return A3(
		_elm_lang$core$Dict$foldr,
		F3(
			function (key, value, keyList) {
				return {ctor: '::', _0: key, _1: keyList};
			}),
		{ctor: '[]'},
		dict);
};
var _elm_lang$core$Dict$values = function (dict) {
	return A3(
		_elm_lang$core$Dict$foldr,
		F3(
			function (key, value, valueList) {
				return {ctor: '::', _0: value, _1: valueList};
			}),
		{ctor: '[]'},
		dict);
};
var _elm_lang$core$Dict$toList = function (dict) {
	return A3(
		_elm_lang$core$Dict$foldr,
		F3(
			function (key, value, list) {
				return {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: key, _1: value},
					_1: list
				};
			}),
		{ctor: '[]'},
		dict);
};
var _elm_lang$core$Dict$foldl = F3(
	function (f, acc, dict) {
		foldl:
		while (true) {
			var _p1 = dict;
			if (_p1.ctor === 'RBEmpty_elm_builtin') {
				return acc;
			} else {
				var _v5 = f,
					_v6 = A3(
					f,
					_p1._1,
					_p1._2,
					A3(_elm_lang$core$Dict$foldl, f, acc, _p1._3)),
					_v7 = _p1._4;
				f = _v5;
				acc = _v6;
				dict = _v7;
				continue foldl;
			}
		}
	});
var _elm_lang$core$Dict$merge = F6(
	function (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {
		var stepState = F3(
			function (rKey, rValue, _p2) {
				stepState:
				while (true) {
					var _p3 = _p2;
					var _p9 = _p3._1;
					var _p8 = _p3._0;
					var _p4 = _p8;
					if (_p4.ctor === '[]') {
						return {
							ctor: '_Tuple2',
							_0: _p8,
							_1: A3(rightStep, rKey, rValue, _p9)
						};
					} else {
						var _p7 = _p4._1;
						var _p6 = _p4._0._1;
						var _p5 = _p4._0._0;
						if (_elm_lang$core$Native_Utils.cmp(_p5, rKey) < 0) {
							var _v10 = rKey,
								_v11 = rValue,
								_v12 = {
								ctor: '_Tuple2',
								_0: _p7,
								_1: A3(leftStep, _p5, _p6, _p9)
							};
							rKey = _v10;
							rValue = _v11;
							_p2 = _v12;
							continue stepState;
						} else {
							if (_elm_lang$core$Native_Utils.cmp(_p5, rKey) > 0) {
								return {
									ctor: '_Tuple2',
									_0: _p8,
									_1: A3(rightStep, rKey, rValue, _p9)
								};
							} else {
								return {
									ctor: '_Tuple2',
									_0: _p7,
									_1: A4(bothStep, _p5, _p6, rValue, _p9)
								};
							}
						}
					}
				}
			});
		var _p10 = A3(
			_elm_lang$core$Dict$foldl,
			stepState,
			{
				ctor: '_Tuple2',
				_0: _elm_lang$core$Dict$toList(leftDict),
				_1: initialResult
			},
			rightDict);
		var leftovers = _p10._0;
		var intermediateResult = _p10._1;
		return A3(
			_elm_lang$core$List$foldl,
			F2(
				function (_p11, result) {
					var _p12 = _p11;
					return A3(leftStep, _p12._0, _p12._1, result);
				}),
			intermediateResult,
			leftovers);
	});
var _elm_lang$core$Dict$reportRemBug = F4(
	function (msg, c, lgot, rgot) {
		return _elm_lang$core$Native_Debug.crash(
			_elm_lang$core$String$concat(
				{
					ctor: '::',
					_0: 'Internal red-black tree invariant violated, expected ',
					_1: {
						ctor: '::',
						_0: msg,
						_1: {
							ctor: '::',
							_0: ' and got ',
							_1: {
								ctor: '::',
								_0: _elm_lang$core$Basics$toString(c),
								_1: {
									ctor: '::',
									_0: '/',
									_1: {
										ctor: '::',
										_0: lgot,
										_1: {
											ctor: '::',
											_0: '/',
											_1: {
												ctor: '::',
												_0: rgot,
												_1: {
													ctor: '::',
													_0: '\nPlease report this bug to <https://github.com/elm-lang/core/issues>',
													_1: {ctor: '[]'}
												}
											}
										}
									}
								}
							}
						}
					}
				}));
	});
var _elm_lang$core$Dict$isBBlack = function (dict) {
	var _p13 = dict;
	_v14_2:
	do {
		if (_p13.ctor === 'RBNode_elm_builtin') {
			if (_p13._0.ctor === 'BBlack') {
				return true;
			} else {
				break _v14_2;
			}
		} else {
			if (_p13._0.ctor === 'LBBlack') {
				return true;
			} else {
				break _v14_2;
			}
		}
	} while(false);
	return false;
};
var _elm_lang$core$Dict$sizeHelp = F2(
	function (n, dict) {
		sizeHelp:
		while (true) {
			var _p14 = dict;
			if (_p14.ctor === 'RBEmpty_elm_builtin') {
				return n;
			} else {
				var _v16 = A2(_elm_lang$core$Dict$sizeHelp, n + 1, _p14._4),
					_v17 = _p14._3;
				n = _v16;
				dict = _v17;
				continue sizeHelp;
			}
		}
	});
var _elm_lang$core$Dict$size = function (dict) {
	return A2(_elm_lang$core$Dict$sizeHelp, 0, dict);
};
var _elm_lang$core$Dict$get = F2(
	function (targetKey, dict) {
		get:
		while (true) {
			var _p15 = dict;
			if (_p15.ctor === 'RBEmpty_elm_builtin') {
				return _elm_lang$core$Maybe$Nothing;
			} else {
				var _p16 = A2(_elm_lang$core$Basics$compare, targetKey, _p15._1);
				switch (_p16.ctor) {
					case 'LT':
						var _v20 = targetKey,
							_v21 = _p15._3;
						targetKey = _v20;
						dict = _v21;
						continue get;
					case 'EQ':
						return _elm_lang$core$Maybe$Just(_p15._2);
					default:
						var _v22 = targetKey,
							_v23 = _p15._4;
						targetKey = _v22;
						dict = _v23;
						continue get;
				}
			}
		}
	});
var _elm_lang$core$Dict$member = F2(
	function (key, dict) {
		var _p17 = A2(_elm_lang$core$Dict$get, key, dict);
		if (_p17.ctor === 'Just') {
			return true;
		} else {
			return false;
		}
	});
var _elm_lang$core$Dict$maxWithDefault = F3(
	function (k, v, r) {
		maxWithDefault:
		while (true) {
			var _p18 = r;
			if (_p18.ctor === 'RBEmpty_elm_builtin') {
				return {ctor: '_Tuple2', _0: k, _1: v};
			} else {
				var _v26 = _p18._1,
					_v27 = _p18._2,
					_v28 = _p18._4;
				k = _v26;
				v = _v27;
				r = _v28;
				continue maxWithDefault;
			}
		}
	});
var _elm_lang$core$Dict$NBlack = {ctor: 'NBlack'};
var _elm_lang$core$Dict$BBlack = {ctor: 'BBlack'};
var _elm_lang$core$Dict$Black = {ctor: 'Black'};
var _elm_lang$core$Dict$blackish = function (t) {
	var _p19 = t;
	if (_p19.ctor === 'RBNode_elm_builtin') {
		var _p20 = _p19._0;
		return _elm_lang$core$Native_Utils.eq(_p20, _elm_lang$core$Dict$Black) || _elm_lang$core$Native_Utils.eq(_p20, _elm_lang$core$Dict$BBlack);
	} else {
		return true;
	}
};
var _elm_lang$core$Dict$Red = {ctor: 'Red'};
var _elm_lang$core$Dict$moreBlack = function (color) {
	var _p21 = color;
	switch (_p21.ctor) {
		case 'Black':
			return _elm_lang$core$Dict$BBlack;
		case 'Red':
			return _elm_lang$core$Dict$Black;
		case 'NBlack':
			return _elm_lang$core$Dict$Red;
		default:
			return _elm_lang$core$Native_Debug.crash('Can\'t make a double black node more black!');
	}
};
var _elm_lang$core$Dict$lessBlack = function (color) {
	var _p22 = color;
	switch (_p22.ctor) {
		case 'BBlack':
			return _elm_lang$core$Dict$Black;
		case 'Black':
			return _elm_lang$core$Dict$Red;
		case 'Red':
			return _elm_lang$core$Dict$NBlack;
		default:
			return _elm_lang$core$Native_Debug.crash('Can\'t make a negative black node less black!');
	}
};
var _elm_lang$core$Dict$LBBlack = {ctor: 'LBBlack'};
var _elm_lang$core$Dict$LBlack = {ctor: 'LBlack'};
var _elm_lang$core$Dict$RBEmpty_elm_builtin = function (a) {
	return {ctor: 'RBEmpty_elm_builtin', _0: a};
};
var _elm_lang$core$Dict$empty = _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);
var _elm_lang$core$Dict$isEmpty = function (dict) {
	return _elm_lang$core$Native_Utils.eq(dict, _elm_lang$core$Dict$empty);
};
var _elm_lang$core$Dict$RBNode_elm_builtin = F5(
	function (a, b, c, d, e) {
		return {ctor: 'RBNode_elm_builtin', _0: a, _1: b, _2: c, _3: d, _4: e};
	});
var _elm_lang$core$Dict$ensureBlackRoot = function (dict) {
	var _p23 = dict;
	if ((_p23.ctor === 'RBNode_elm_builtin') && (_p23._0.ctor === 'Red')) {
		return A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p23._1, _p23._2, _p23._3, _p23._4);
	} else {
		return dict;
	}
};
var _elm_lang$core$Dict$lessBlackTree = function (dict) {
	var _p24 = dict;
	if (_p24.ctor === 'RBNode_elm_builtin') {
		return A5(
			_elm_lang$core$Dict$RBNode_elm_builtin,
			_elm_lang$core$Dict$lessBlack(_p24._0),
			_p24._1,
			_p24._2,
			_p24._3,
			_p24._4);
	} else {
		return _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);
	}
};
var _elm_lang$core$Dict$balancedTree = function (col) {
	return function (xk) {
		return function (xv) {
			return function (yk) {
				return function (yv) {
					return function (zk) {
						return function (zv) {
							return function (a) {
								return function (b) {
									return function (c) {
										return function (d) {
											return A5(
												_elm_lang$core$Dict$RBNode_elm_builtin,
												_elm_lang$core$Dict$lessBlack(col),
												yk,
												yv,
												A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, xk, xv, a, b),
												A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, zk, zv, c, d));
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _elm_lang$core$Dict$blacken = function (t) {
	var _p25 = t;
	if (_p25.ctor === 'RBEmpty_elm_builtin') {
		return _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);
	} else {
		return A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p25._1, _p25._2, _p25._3, _p25._4);
	}
};
var _elm_lang$core$Dict$redden = function (t) {
	var _p26 = t;
	if (_p26.ctor === 'RBEmpty_elm_builtin') {
		return _elm_lang$core$Native_Debug.crash('can\'t make a Leaf red');
	} else {
		return A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Red, _p26._1, _p26._2, _p26._3, _p26._4);
	}
};
var _elm_lang$core$Dict$balanceHelp = function (tree) {
	var _p27 = tree;
	_v36_6:
	do {
		_v36_5:
		do {
			_v36_4:
			do {
				_v36_3:
				do {
					_v36_2:
					do {
						_v36_1:
						do {
							_v36_0:
							do {
								if (_p27.ctor === 'RBNode_elm_builtin') {
									if (_p27._3.ctor === 'RBNode_elm_builtin') {
										if (_p27._4.ctor === 'RBNode_elm_builtin') {
											switch (_p27._3._0.ctor) {
												case 'Red':
													switch (_p27._4._0.ctor) {
														case 'Red':
															if ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {
																break _v36_0;
															} else {
																if ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {
																	break _v36_1;
																} else {
																	if ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {
																		break _v36_2;
																	} else {
																		if ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {
																			break _v36_3;
																		} else {
																			break _v36_6;
																		}
																	}
																}
															}
														case 'NBlack':
															if ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {
																break _v36_0;
															} else {
																if ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {
																	break _v36_1;
																} else {
																	if (((((_p27._0.ctor === 'BBlack') && (_p27._4._3.ctor === 'RBNode_elm_builtin')) && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {
																		break _v36_4;
																	} else {
																		break _v36_6;
																	}
																}
															}
														default:
															if ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {
																break _v36_0;
															} else {
																if ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {
																	break _v36_1;
																} else {
																	break _v36_6;
																}
															}
													}
												case 'NBlack':
													switch (_p27._4._0.ctor) {
														case 'Red':
															if ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {
																break _v36_2;
															} else {
																if ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {
																	break _v36_3;
																} else {
																	if (((((_p27._0.ctor === 'BBlack') && (_p27._3._3.ctor === 'RBNode_elm_builtin')) && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {
																		break _v36_5;
																	} else {
																		break _v36_6;
																	}
																}
															}
														case 'NBlack':
															if (_p27._0.ctor === 'BBlack') {
																if ((((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {
																	break _v36_4;
																} else {
																	if ((((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {
																		break _v36_5;
																	} else {
																		break _v36_6;
																	}
																}
															} else {
																break _v36_6;
															}
														default:
															if (((((_p27._0.ctor === 'BBlack') && (_p27._3._3.ctor === 'RBNode_elm_builtin')) && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {
																break _v36_5;
															} else {
																break _v36_6;
															}
													}
												default:
													switch (_p27._4._0.ctor) {
														case 'Red':
															if ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {
																break _v36_2;
															} else {
																if ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {
																	break _v36_3;
																} else {
																	break _v36_6;
																}
															}
														case 'NBlack':
															if (((((_p27._0.ctor === 'BBlack') && (_p27._4._3.ctor === 'RBNode_elm_builtin')) && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {
																break _v36_4;
															} else {
																break _v36_6;
															}
														default:
															break _v36_6;
													}
											}
										} else {
											switch (_p27._3._0.ctor) {
												case 'Red':
													if ((_p27._3._3.ctor === 'RBNode_elm_builtin') && (_p27._3._3._0.ctor === 'Red')) {
														break _v36_0;
													} else {
														if ((_p27._3._4.ctor === 'RBNode_elm_builtin') && (_p27._3._4._0.ctor === 'Red')) {
															break _v36_1;
														} else {
															break _v36_6;
														}
													}
												case 'NBlack':
													if (((((_p27._0.ctor === 'BBlack') && (_p27._3._3.ctor === 'RBNode_elm_builtin')) && (_p27._3._3._0.ctor === 'Black')) && (_p27._3._4.ctor === 'RBNode_elm_builtin')) && (_p27._3._4._0.ctor === 'Black')) {
														break _v36_5;
													} else {
														break _v36_6;
													}
												default:
													break _v36_6;
											}
										}
									} else {
										if (_p27._4.ctor === 'RBNode_elm_builtin') {
											switch (_p27._4._0.ctor) {
												case 'Red':
													if ((_p27._4._3.ctor === 'RBNode_elm_builtin') && (_p27._4._3._0.ctor === 'Red')) {
														break _v36_2;
													} else {
														if ((_p27._4._4.ctor === 'RBNode_elm_builtin') && (_p27._4._4._0.ctor === 'Red')) {
															break _v36_3;
														} else {
															break _v36_6;
														}
													}
												case 'NBlack':
													if (((((_p27._0.ctor === 'BBlack') && (_p27._4._3.ctor === 'RBNode_elm_builtin')) && (_p27._4._3._0.ctor === 'Black')) && (_p27._4._4.ctor === 'RBNode_elm_builtin')) && (_p27._4._4._0.ctor === 'Black')) {
														break _v36_4;
													} else {
														break _v36_6;
													}
												default:
													break _v36_6;
											}
										} else {
											break _v36_6;
										}
									}
								} else {
									break _v36_6;
								}
							} while(false);
							return _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._3._3._1)(_p27._3._3._2)(_p27._3._1)(_p27._3._2)(_p27._1)(_p27._2)(_p27._3._3._3)(_p27._3._3._4)(_p27._3._4)(_p27._4);
						} while(false);
						return _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._3._1)(_p27._3._2)(_p27._3._4._1)(_p27._3._4._2)(_p27._1)(_p27._2)(_p27._3._3)(_p27._3._4._3)(_p27._3._4._4)(_p27._4);
					} while(false);
					return _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._1)(_p27._2)(_p27._4._3._1)(_p27._4._3._2)(_p27._4._1)(_p27._4._2)(_p27._3)(_p27._4._3._3)(_p27._4._3._4)(_p27._4._4);
				} while(false);
				return _elm_lang$core$Dict$balancedTree(_p27._0)(_p27._1)(_p27._2)(_p27._4._1)(_p27._4._2)(_p27._4._4._1)(_p27._4._4._2)(_p27._3)(_p27._4._3)(_p27._4._4._3)(_p27._4._4._4);
			} while(false);
			return A5(
				_elm_lang$core$Dict$RBNode_elm_builtin,
				_elm_lang$core$Dict$Black,
				_p27._4._3._1,
				_p27._4._3._2,
				A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p27._1, _p27._2, _p27._3, _p27._4._3._3),
				A5(
					_elm_lang$core$Dict$balance,
					_elm_lang$core$Dict$Black,
					_p27._4._1,
					_p27._4._2,
					_p27._4._3._4,
					_elm_lang$core$Dict$redden(_p27._4._4)));
		} while(false);
		return A5(
			_elm_lang$core$Dict$RBNode_elm_builtin,
			_elm_lang$core$Dict$Black,
			_p27._3._4._1,
			_p27._3._4._2,
			A5(
				_elm_lang$core$Dict$balance,
				_elm_lang$core$Dict$Black,
				_p27._3._1,
				_p27._3._2,
				_elm_lang$core$Dict$redden(_p27._3._3),
				_p27._3._4._3),
			A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p27._1, _p27._2, _p27._3._4._4, _p27._4));
	} while(false);
	return tree;
};
var _elm_lang$core$Dict$balance = F5(
	function (c, k, v, l, r) {
		var tree = A5(_elm_lang$core$Dict$RBNode_elm_builtin, c, k, v, l, r);
		return _elm_lang$core$Dict$blackish(tree) ? _elm_lang$core$Dict$balanceHelp(tree) : tree;
	});
var _elm_lang$core$Dict$bubble = F5(
	function (c, k, v, l, r) {
		return (_elm_lang$core$Dict$isBBlack(l) || _elm_lang$core$Dict$isBBlack(r)) ? A5(
			_elm_lang$core$Dict$balance,
			_elm_lang$core$Dict$moreBlack(c),
			k,
			v,
			_elm_lang$core$Dict$lessBlackTree(l),
			_elm_lang$core$Dict$lessBlackTree(r)) : A5(_elm_lang$core$Dict$RBNode_elm_builtin, c, k, v, l, r);
	});
var _elm_lang$core$Dict$removeMax = F5(
	function (c, k, v, l, r) {
		var _p28 = r;
		if (_p28.ctor === 'RBEmpty_elm_builtin') {
			return A3(_elm_lang$core$Dict$rem, c, l, r);
		} else {
			return A5(
				_elm_lang$core$Dict$bubble,
				c,
				k,
				v,
				l,
				A5(_elm_lang$core$Dict$removeMax, _p28._0, _p28._1, _p28._2, _p28._3, _p28._4));
		}
	});
var _elm_lang$core$Dict$rem = F3(
	function (color, left, right) {
		var _p29 = {ctor: '_Tuple2', _0: left, _1: right};
		if (_p29._0.ctor === 'RBEmpty_elm_builtin') {
			if (_p29._1.ctor === 'RBEmpty_elm_builtin') {
				var _p30 = color;
				switch (_p30.ctor) {
					case 'Red':
						return _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);
					case 'Black':
						return _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBBlack);
					default:
						return _elm_lang$core$Native_Debug.crash('cannot have bblack or nblack nodes at this point');
				}
			} else {
				var _p33 = _p29._1._0;
				var _p32 = _p29._0._0;
				var _p31 = {ctor: '_Tuple3', _0: color, _1: _p32, _2: _p33};
				if ((((_p31.ctor === '_Tuple3') && (_p31._0.ctor === 'Black')) && (_p31._1.ctor === 'LBlack')) && (_p31._2.ctor === 'Red')) {
					return A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p29._1._1, _p29._1._2, _p29._1._3, _p29._1._4);
				} else {
					return A4(
						_elm_lang$core$Dict$reportRemBug,
						'Black/LBlack/Red',
						color,
						_elm_lang$core$Basics$toString(_p32),
						_elm_lang$core$Basics$toString(_p33));
				}
			}
		} else {
			if (_p29._1.ctor === 'RBEmpty_elm_builtin') {
				var _p36 = _p29._1._0;
				var _p35 = _p29._0._0;
				var _p34 = {ctor: '_Tuple3', _0: color, _1: _p35, _2: _p36};
				if ((((_p34.ctor === '_Tuple3') && (_p34._0.ctor === 'Black')) && (_p34._1.ctor === 'Red')) && (_p34._2.ctor === 'LBlack')) {
					return A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Black, _p29._0._1, _p29._0._2, _p29._0._3, _p29._0._4);
				} else {
					return A4(
						_elm_lang$core$Dict$reportRemBug,
						'Black/Red/LBlack',
						color,
						_elm_lang$core$Basics$toString(_p35),
						_elm_lang$core$Basics$toString(_p36));
				}
			} else {
				var _p40 = _p29._0._2;
				var _p39 = _p29._0._4;
				var _p38 = _p29._0._1;
				var newLeft = A5(_elm_lang$core$Dict$removeMax, _p29._0._0, _p38, _p40, _p29._0._3, _p39);
				var _p37 = A3(_elm_lang$core$Dict$maxWithDefault, _p38, _p40, _p39);
				var k = _p37._0;
				var v = _p37._1;
				return A5(_elm_lang$core$Dict$bubble, color, k, v, newLeft, right);
			}
		}
	});
var _elm_lang$core$Dict$map = F2(
	function (f, dict) {
		var _p41 = dict;
		if (_p41.ctor === 'RBEmpty_elm_builtin') {
			return _elm_lang$core$Dict$RBEmpty_elm_builtin(_elm_lang$core$Dict$LBlack);
		} else {
			var _p42 = _p41._1;
			return A5(
				_elm_lang$core$Dict$RBNode_elm_builtin,
				_p41._0,
				_p42,
				A2(f, _p42, _p41._2),
				A2(_elm_lang$core$Dict$map, f, _p41._3),
				A2(_elm_lang$core$Dict$map, f, _p41._4));
		}
	});
var _elm_lang$core$Dict$Same = {ctor: 'Same'};
var _elm_lang$core$Dict$Remove = {ctor: 'Remove'};
var _elm_lang$core$Dict$Insert = {ctor: 'Insert'};
var _elm_lang$core$Dict$update = F3(
	function (k, alter, dict) {
		var up = function (dict) {
			var _p43 = dict;
			if (_p43.ctor === 'RBEmpty_elm_builtin') {
				var _p44 = alter(_elm_lang$core$Maybe$Nothing);
				if (_p44.ctor === 'Nothing') {
					return {ctor: '_Tuple2', _0: _elm_lang$core$Dict$Same, _1: _elm_lang$core$Dict$empty};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Dict$Insert,
						_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _elm_lang$core$Dict$Red, k, _p44._0, _elm_lang$core$Dict$empty, _elm_lang$core$Dict$empty)
					};
				}
			} else {
				var _p55 = _p43._2;
				var _p54 = _p43._4;
				var _p53 = _p43._3;
				var _p52 = _p43._1;
				var _p51 = _p43._0;
				var _p45 = A2(_elm_lang$core$Basics$compare, k, _p52);
				switch (_p45.ctor) {
					case 'EQ':
						var _p46 = alter(
							_elm_lang$core$Maybe$Just(_p55));
						if (_p46.ctor === 'Nothing') {
							return {
								ctor: '_Tuple2',
								_0: _elm_lang$core$Dict$Remove,
								_1: A3(_elm_lang$core$Dict$rem, _p51, _p53, _p54)
							};
						} else {
							return {
								ctor: '_Tuple2',
								_0: _elm_lang$core$Dict$Same,
								_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _p51, _p52, _p46._0, _p53, _p54)
							};
						}
					case 'LT':
						var _p47 = up(_p53);
						var flag = _p47._0;
						var newLeft = _p47._1;
						var _p48 = flag;
						switch (_p48.ctor) {
							case 'Same':
								return {
									ctor: '_Tuple2',
									_0: _elm_lang$core$Dict$Same,
									_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _p51, _p52, _p55, newLeft, _p54)
								};
							case 'Insert':
								return {
									ctor: '_Tuple2',
									_0: _elm_lang$core$Dict$Insert,
									_1: A5(_elm_lang$core$Dict$balance, _p51, _p52, _p55, newLeft, _p54)
								};
							default:
								return {
									ctor: '_Tuple2',
									_0: _elm_lang$core$Dict$Remove,
									_1: A5(_elm_lang$core$Dict$bubble, _p51, _p52, _p55, newLeft, _p54)
								};
						}
					default:
						var _p49 = up(_p54);
						var flag = _p49._0;
						var newRight = _p49._1;
						var _p50 = flag;
						switch (_p50.ctor) {
							case 'Same':
								return {
									ctor: '_Tuple2',
									_0: _elm_lang$core$Dict$Same,
									_1: A5(_elm_lang$core$Dict$RBNode_elm_builtin, _p51, _p52, _p55, _p53, newRight)
								};
							case 'Insert':
								return {
									ctor: '_Tuple2',
									_0: _elm_lang$core$Dict$Insert,
									_1: A5(_elm_lang$core$Dict$balance, _p51, _p52, _p55, _p53, newRight)
								};
							default:
								return {
									ctor: '_Tuple2',
									_0: _elm_lang$core$Dict$Remove,
									_1: A5(_elm_lang$core$Dict$bubble, _p51, _p52, _p55, _p53, newRight)
								};
						}
				}
			}
		};
		var _p56 = up(dict);
		var flag = _p56._0;
		var updatedDict = _p56._1;
		var _p57 = flag;
		switch (_p57.ctor) {
			case 'Same':
				return updatedDict;
			case 'Insert':
				return _elm_lang$core$Dict$ensureBlackRoot(updatedDict);
			default:
				return _elm_lang$core$Dict$blacken(updatedDict);
		}
	});
var _elm_lang$core$Dict$insert = F3(
	function (key, value, dict) {
		return A3(
			_elm_lang$core$Dict$update,
			key,
			_elm_lang$core$Basics$always(
				_elm_lang$core$Maybe$Just(value)),
			dict);
	});
var _elm_lang$core$Dict$singleton = F2(
	function (key, value) {
		return A3(_elm_lang$core$Dict$insert, key, value, _elm_lang$core$Dict$empty);
	});
var _elm_lang$core$Dict$union = F2(
	function (t1, t2) {
		return A3(_elm_lang$core$Dict$foldl, _elm_lang$core$Dict$insert, t2, t1);
	});
var _elm_lang$core$Dict$filter = F2(
	function (predicate, dictionary) {
		var add = F3(
			function (key, value, dict) {
				return A2(predicate, key, value) ? A3(_elm_lang$core$Dict$insert, key, value, dict) : dict;
			});
		return A3(_elm_lang$core$Dict$foldl, add, _elm_lang$core$Dict$empty, dictionary);
	});
var _elm_lang$core$Dict$intersect = F2(
	function (t1, t2) {
		return A2(
			_elm_lang$core$Dict$filter,
			F2(
				function (k, _p58) {
					return A2(_elm_lang$core$Dict$member, k, t2);
				}),
			t1);
	});
var _elm_lang$core$Dict$partition = F2(
	function (predicate, dict) {
		var add = F3(
			function (key, value, _p59) {
				var _p60 = _p59;
				var _p62 = _p60._1;
				var _p61 = _p60._0;
				return A2(predicate, key, value) ? {
					ctor: '_Tuple2',
					_0: A3(_elm_lang$core$Dict$insert, key, value, _p61),
					_1: _p62
				} : {
					ctor: '_Tuple2',
					_0: _p61,
					_1: A3(_elm_lang$core$Dict$insert, key, value, _p62)
				};
			});
		return A3(
			_elm_lang$core$Dict$foldl,
			add,
			{ctor: '_Tuple2', _0: _elm_lang$core$Dict$empty, _1: _elm_lang$core$Dict$empty},
			dict);
	});
var _elm_lang$core$Dict$fromList = function (assocs) {
	return A3(
		_elm_lang$core$List$foldl,
		F2(
			function (_p63, dict) {
				var _p64 = _p63;
				return A3(_elm_lang$core$Dict$insert, _p64._0, _p64._1, dict);
			}),
		_elm_lang$core$Dict$empty,
		assocs);
};
var _elm_lang$core$Dict$remove = F2(
	function (key, dict) {
		return A3(
			_elm_lang$core$Dict$update,
			key,
			_elm_lang$core$Basics$always(_elm_lang$core$Maybe$Nothing),
			dict);
	});
var _elm_lang$core$Dict$diff = F2(
	function (t1, t2) {
		return A3(
			_elm_lang$core$Dict$foldl,
			F3(
				function (k, v, t) {
					return A2(_elm_lang$core$Dict$remove, k, t);
				}),
			t1,
			t2);
	});

//import Native.Scheduler //

var _elm_lang$core$Native_Time = function() {

var now = _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
{
	callback(_elm_lang$core$Native_Scheduler.succeed(Date.now()));
});

function setInterval_(interval, task)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		var id = setInterval(function() {
			_elm_lang$core$Native_Scheduler.rawSpawn(task);
		}, interval);

		return function() { clearInterval(id); };
	});
}

return {
	now: now,
	setInterval_: F2(setInterval_)
};

}();
var _elm_lang$core$Time$setInterval = _elm_lang$core$Native_Time.setInterval_;
var _elm_lang$core$Time$spawnHelp = F3(
	function (router, intervals, processes) {
		var _p0 = intervals;
		if (_p0.ctor === '[]') {
			return _elm_lang$core$Task$succeed(processes);
		} else {
			var _p1 = _p0._0;
			var spawnRest = function (id) {
				return A3(
					_elm_lang$core$Time$spawnHelp,
					router,
					_p0._1,
					A3(_elm_lang$core$Dict$insert, _p1, id, processes));
			};
			var spawnTimer = _elm_lang$core$Native_Scheduler.spawn(
				A2(
					_elm_lang$core$Time$setInterval,
					_p1,
					A2(_elm_lang$core$Platform$sendToSelf, router, _p1)));
			return A2(_elm_lang$core$Task$andThen, spawnRest, spawnTimer);
		}
	});
var _elm_lang$core$Time$addMySub = F2(
	function (_p2, state) {
		var _p3 = _p2;
		var _p6 = _p3._1;
		var _p5 = _p3._0;
		var _p4 = A2(_elm_lang$core$Dict$get, _p5, state);
		if (_p4.ctor === 'Nothing') {
			return A3(
				_elm_lang$core$Dict$insert,
				_p5,
				{
					ctor: '::',
					_0: _p6,
					_1: {ctor: '[]'}
				},
				state);
		} else {
			return A3(
				_elm_lang$core$Dict$insert,
				_p5,
				{ctor: '::', _0: _p6, _1: _p4._0},
				state);
		}
	});
var _elm_lang$core$Time$inMilliseconds = function (t) {
	return t;
};
var _elm_lang$core$Time$millisecond = 1;
var _elm_lang$core$Time$second = 1000 * _elm_lang$core$Time$millisecond;
var _elm_lang$core$Time$minute = 60 * _elm_lang$core$Time$second;
var _elm_lang$core$Time$hour = 60 * _elm_lang$core$Time$minute;
var _elm_lang$core$Time$inHours = function (t) {
	return t / _elm_lang$core$Time$hour;
};
var _elm_lang$core$Time$inMinutes = function (t) {
	return t / _elm_lang$core$Time$minute;
};
var _elm_lang$core$Time$inSeconds = function (t) {
	return t / _elm_lang$core$Time$second;
};
var _elm_lang$core$Time$now = _elm_lang$core$Native_Time.now;
var _elm_lang$core$Time$onSelfMsg = F3(
	function (router, interval, state) {
		var _p7 = A2(_elm_lang$core$Dict$get, interval, state.taggers);
		if (_p7.ctor === 'Nothing') {
			return _elm_lang$core$Task$succeed(state);
		} else {
			var tellTaggers = function (time) {
				return _elm_lang$core$Task$sequence(
					A2(
						_elm_lang$core$List$map,
						function (tagger) {
							return A2(
								_elm_lang$core$Platform$sendToApp,
								router,
								tagger(time));
						},
						_p7._0));
			};
			return A2(
				_elm_lang$core$Task$andThen,
				function (_p8) {
					return _elm_lang$core$Task$succeed(state);
				},
				A2(_elm_lang$core$Task$andThen, tellTaggers, _elm_lang$core$Time$now));
		}
	});
var _elm_lang$core$Time$subscription = _elm_lang$core$Native_Platform.leaf('Time');
var _elm_lang$core$Time$State = F2(
	function (a, b) {
		return {taggers: a, processes: b};
	});
var _elm_lang$core$Time$init = _elm_lang$core$Task$succeed(
	A2(_elm_lang$core$Time$State, _elm_lang$core$Dict$empty, _elm_lang$core$Dict$empty));
var _elm_lang$core$Time$onEffects = F3(
	function (router, subs, _p9) {
		var _p10 = _p9;
		var rightStep = F3(
			function (_p12, id, _p11) {
				var _p13 = _p11;
				return {
					ctor: '_Tuple3',
					_0: _p13._0,
					_1: _p13._1,
					_2: A2(
						_elm_lang$core$Task$andThen,
						function (_p14) {
							return _p13._2;
						},
						_elm_lang$core$Native_Scheduler.kill(id))
				};
			});
		var bothStep = F4(
			function (interval, taggers, id, _p15) {
				var _p16 = _p15;
				return {
					ctor: '_Tuple3',
					_0: _p16._0,
					_1: A3(_elm_lang$core$Dict$insert, interval, id, _p16._1),
					_2: _p16._2
				};
			});
		var leftStep = F3(
			function (interval, taggers, _p17) {
				var _p18 = _p17;
				return {
					ctor: '_Tuple3',
					_0: {ctor: '::', _0: interval, _1: _p18._0},
					_1: _p18._1,
					_2: _p18._2
				};
			});
		var newTaggers = A3(_elm_lang$core$List$foldl, _elm_lang$core$Time$addMySub, _elm_lang$core$Dict$empty, subs);
		var _p19 = A6(
			_elm_lang$core$Dict$merge,
			leftStep,
			bothStep,
			rightStep,
			newTaggers,
			_p10.processes,
			{
				ctor: '_Tuple3',
				_0: {ctor: '[]'},
				_1: _elm_lang$core$Dict$empty,
				_2: _elm_lang$core$Task$succeed(
					{ctor: '_Tuple0'})
			});
		var spawnList = _p19._0;
		var existingDict = _p19._1;
		var killTask = _p19._2;
		return A2(
			_elm_lang$core$Task$andThen,
			function (newProcesses) {
				return _elm_lang$core$Task$succeed(
					A2(_elm_lang$core$Time$State, newTaggers, newProcesses));
			},
			A2(
				_elm_lang$core$Task$andThen,
				function (_p20) {
					return A3(_elm_lang$core$Time$spawnHelp, router, spawnList, existingDict);
				},
				killTask));
	});
var _elm_lang$core$Time$Every = F2(
	function (a, b) {
		return {ctor: 'Every', _0: a, _1: b};
	});
var _elm_lang$core$Time$every = F2(
	function (interval, tagger) {
		return _elm_lang$core$Time$subscription(
			A2(_elm_lang$core$Time$Every, interval, tagger));
	});
var _elm_lang$core$Time$subMap = F2(
	function (f, _p21) {
		var _p22 = _p21;
		return A2(
			_elm_lang$core$Time$Every,
			_p22._0,
			function (_p23) {
				return f(
					_p22._1(_p23));
			});
	});
_elm_lang$core$Native_Platform.effectManagers['Time'] = {pkg: 'elm-lang/core', init: _elm_lang$core$Time$init, onEffects: _elm_lang$core$Time$onEffects, onSelfMsg: _elm_lang$core$Time$onSelfMsg, tag: 'sub', subMap: _elm_lang$core$Time$subMap};

var _elm_lang$core$Date$millisecond = _elm_lang$core$Native_Date.millisecond;
var _elm_lang$core$Date$second = _elm_lang$core$Native_Date.second;
var _elm_lang$core$Date$minute = _elm_lang$core$Native_Date.minute;
var _elm_lang$core$Date$hour = _elm_lang$core$Native_Date.hour;
var _elm_lang$core$Date$dayOfWeek = _elm_lang$core$Native_Date.dayOfWeek;
var _elm_lang$core$Date$day = _elm_lang$core$Native_Date.day;
var _elm_lang$core$Date$month = _elm_lang$core$Native_Date.month;
var _elm_lang$core$Date$year = _elm_lang$core$Native_Date.year;
var _elm_lang$core$Date$fromTime = _elm_lang$core$Native_Date.fromTime;
var _elm_lang$core$Date$toTime = _elm_lang$core$Native_Date.toTime;
var _elm_lang$core$Date$fromString = _elm_lang$core$Native_Date.fromString;
var _elm_lang$core$Date$now = A2(_elm_lang$core$Task$map, _elm_lang$core$Date$fromTime, _elm_lang$core$Time$now);
var _elm_lang$core$Date$Date = {ctor: 'Date'};
var _elm_lang$core$Date$Sun = {ctor: 'Sun'};
var _elm_lang$core$Date$Sat = {ctor: 'Sat'};
var _elm_lang$core$Date$Fri = {ctor: 'Fri'};
var _elm_lang$core$Date$Thu = {ctor: 'Thu'};
var _elm_lang$core$Date$Wed = {ctor: 'Wed'};
var _elm_lang$core$Date$Tue = {ctor: 'Tue'};
var _elm_lang$core$Date$Mon = {ctor: 'Mon'};
var _elm_lang$core$Date$Dec = {ctor: 'Dec'};
var _elm_lang$core$Date$Nov = {ctor: 'Nov'};
var _elm_lang$core$Date$Oct = {ctor: 'Oct'};
var _elm_lang$core$Date$Sep = {ctor: 'Sep'};
var _elm_lang$core$Date$Aug = {ctor: 'Aug'};
var _elm_lang$core$Date$Jul = {ctor: 'Jul'};
var _elm_lang$core$Date$Jun = {ctor: 'Jun'};
var _elm_lang$core$Date$May = {ctor: 'May'};
var _elm_lang$core$Date$Apr = {ctor: 'Apr'};
var _elm_lang$core$Date$Mar = {ctor: 'Mar'};
var _elm_lang$core$Date$Feb = {ctor: 'Feb'};
var _elm_lang$core$Date$Jan = {ctor: 'Jan'};

//import Native.List //

var _elm_lang$core$Native_Array = function() {

// A RRB-Tree has two distinct data types.
// Leaf -> "height"  is always 0
//         "table"   is an array of elements
// Node -> "height"  is always greater than 0
//         "table"   is an array of child nodes
//         "lengths" is an array of accumulated lengths of the child nodes

// M is the maximal table size. 32 seems fast. E is the allowed increase
// of search steps when concatting to find an index. Lower values will
// decrease balancing, but will increase search steps.
var M = 32;
var E = 2;

// An empty array.
var empty = {
	ctor: '_Array',
	height: 0,
	table: []
};


function get(i, array)
{
	if (i < 0 || i >= length(array))
	{
		throw new Error(
			'Index ' + i + ' is out of range. Check the length of ' +
			'your array first or use getMaybe or getWithDefault.');
	}
	return unsafeGet(i, array);
}


function unsafeGet(i, array)
{
	for (var x = array.height; x > 0; x--)
	{
		var slot = i >> (x * 5);
		while (array.lengths[slot] <= i)
		{
			slot++;
		}
		if (slot > 0)
		{
			i -= array.lengths[slot - 1];
		}
		array = array.table[slot];
	}
	return array.table[i];
}


// Sets the value at the index i. Only the nodes leading to i will get
// copied and updated.
function set(i, item, array)
{
	if (i < 0 || length(array) <= i)
	{
		return array;
	}
	return unsafeSet(i, item, array);
}


function unsafeSet(i, item, array)
{
	array = nodeCopy(array);

	if (array.height === 0)
	{
		array.table[i] = item;
	}
	else
	{
		var slot = getSlot(i, array);
		if (slot > 0)
		{
			i -= array.lengths[slot - 1];
		}
		array.table[slot] = unsafeSet(i, item, array.table[slot]);
	}
	return array;
}


function initialize(len, f)
{
	if (len <= 0)
	{
		return empty;
	}
	var h = Math.floor( Math.log(len) / Math.log(M) );
	return initialize_(f, h, 0, len);
}

function initialize_(f, h, from, to)
{
	if (h === 0)
	{
		var table = new Array((to - from) % (M + 1));
		for (var i = 0; i < table.length; i++)
		{
		  table[i] = f(from + i);
		}
		return {
			ctor: '_Array',
			height: 0,
			table: table
		};
	}

	var step = Math.pow(M, h);
	var table = new Array(Math.ceil((to - from) / step));
	var lengths = new Array(table.length);
	for (var i = 0; i < table.length; i++)
	{
		table[i] = initialize_(f, h - 1, from + (i * step), Math.min(from + ((i + 1) * step), to));
		lengths[i] = length(table[i]) + (i > 0 ? lengths[i-1] : 0);
	}
	return {
		ctor: '_Array',
		height: h,
		table: table,
		lengths: lengths
	};
}

function fromList(list)
{
	if (list.ctor === '[]')
	{
		return empty;
	}

	// Allocate M sized blocks (table) and write list elements to it.
	var table = new Array(M);
	var nodes = [];
	var i = 0;

	while (list.ctor !== '[]')
	{
		table[i] = list._0;
		list = list._1;
		i++;

		// table is full, so we can push a leaf containing it into the
		// next node.
		if (i === M)
		{
			var leaf = {
				ctor: '_Array',
				height: 0,
				table: table
			};
			fromListPush(leaf, nodes);
			table = new Array(M);
			i = 0;
		}
	}

	// Maybe there is something left on the table.
	if (i > 0)
	{
		var leaf = {
			ctor: '_Array',
			height: 0,
			table: table.splice(0, i)
		};
		fromListPush(leaf, nodes);
	}

	// Go through all of the nodes and eventually push them into higher nodes.
	for (var h = 0; h < nodes.length - 1; h++)
	{
		if (nodes[h].table.length > 0)
		{
			fromListPush(nodes[h], nodes);
		}
	}

	var head = nodes[nodes.length - 1];
	if (head.height > 0 && head.table.length === 1)
	{
		return head.table[0];
	}
	else
	{
		return head;
	}
}

// Push a node into a higher node as a child.
function fromListPush(toPush, nodes)
{
	var h = toPush.height;

	// Maybe the node on this height does not exist.
	if (nodes.length === h)
	{
		var node = {
			ctor: '_Array',
			height: h + 1,
			table: [],
			lengths: []
		};
		nodes.push(node);
	}

	nodes[h].table.push(toPush);
	var len = length(toPush);
	if (nodes[h].lengths.length > 0)
	{
		len += nodes[h].lengths[nodes[h].lengths.length - 1];
	}
	nodes[h].lengths.push(len);

	if (nodes[h].table.length === M)
	{
		fromListPush(nodes[h], nodes);
		nodes[h] = {
			ctor: '_Array',
			height: h + 1,
			table: [],
			lengths: []
		};
	}
}

// Pushes an item via push_ to the bottom right of a tree.
function push(item, a)
{
	var pushed = push_(item, a);
	if (pushed !== null)
	{
		return pushed;
	}

	var newTree = create(item, a.height);
	return siblise(a, newTree);
}

// Recursively tries to push an item to the bottom-right most
// tree possible. If there is no space left for the item,
// null will be returned.
function push_(item, a)
{
	// Handle resursion stop at leaf level.
	if (a.height === 0)
	{
		if (a.table.length < M)
		{
			var newA = {
				ctor: '_Array',
				height: 0,
				table: a.table.slice()
			};
			newA.table.push(item);
			return newA;
		}
		else
		{
		  return null;
		}
	}

	// Recursively push
	var pushed = push_(item, botRight(a));

	// There was space in the bottom right tree, so the slot will
	// be updated.
	if (pushed !== null)
	{
		var newA = nodeCopy(a);
		newA.table[newA.table.length - 1] = pushed;
		newA.lengths[newA.lengths.length - 1]++;
		return newA;
	}

	// When there was no space left, check if there is space left
	// for a new slot with a tree which contains only the item
	// at the bottom.
	if (a.table.length < M)
	{
		var newSlot = create(item, a.height - 1);
		var newA = nodeCopy(a);
		newA.table.push(newSlot);
		newA.lengths.push(newA.lengths[newA.lengths.length - 1] + length(newSlot));
		return newA;
	}
	else
	{
		return null;
	}
}

// Converts an array into a list of elements.
function toList(a)
{
	return toList_(_elm_lang$core$Native_List.Nil, a);
}

function toList_(list, a)
{
	for (var i = a.table.length - 1; i >= 0; i--)
	{
		list =
			a.height === 0
				? _elm_lang$core$Native_List.Cons(a.table[i], list)
				: toList_(list, a.table[i]);
	}
	return list;
}

// Maps a function over the elements of an array.
function map(f, a)
{
	var newA = {
		ctor: '_Array',
		height: a.height,
		table: new Array(a.table.length)
	};
	if (a.height > 0)
	{
		newA.lengths = a.lengths;
	}
	for (var i = 0; i < a.table.length; i++)
	{
		newA.table[i] =
			a.height === 0
				? f(a.table[i])
				: map(f, a.table[i]);
	}
	return newA;
}

// Maps a function over the elements with their index as first argument.
function indexedMap(f, a)
{
	return indexedMap_(f, a, 0);
}

function indexedMap_(f, a, from)
{
	var newA = {
		ctor: '_Array',
		height: a.height,
		table: new Array(a.table.length)
	};
	if (a.height > 0)
	{
		newA.lengths = a.lengths;
	}
	for (var i = 0; i < a.table.length; i++)
	{
		newA.table[i] =
			a.height === 0
				? A2(f, from + i, a.table[i])
				: indexedMap_(f, a.table[i], i == 0 ? from : from + a.lengths[i - 1]);
	}
	return newA;
}

function foldl(f, b, a)
{
	if (a.height === 0)
	{
		for (var i = 0; i < a.table.length; i++)
		{
			b = A2(f, a.table[i], b);
		}
	}
	else
	{
		for (var i = 0; i < a.table.length; i++)
		{
			b = foldl(f, b, a.table[i]);
		}
	}
	return b;
}

function foldr(f, b, a)
{
	if (a.height === 0)
	{
		for (var i = a.table.length; i--; )
		{
			b = A2(f, a.table[i], b);
		}
	}
	else
	{
		for (var i = a.table.length; i--; )
		{
			b = foldr(f, b, a.table[i]);
		}
	}
	return b;
}

// TODO: currently, it slices the right, then the left. This can be
// optimized.
function slice(from, to, a)
{
	if (from < 0)
	{
		from += length(a);
	}
	if (to < 0)
	{
		to += length(a);
	}
	return sliceLeft(from, sliceRight(to, a));
}

function sliceRight(to, a)
{
	if (to === length(a))
	{
		return a;
	}

	// Handle leaf level.
	if (a.height === 0)
	{
		var newA = { ctor:'_Array', height:0 };
		newA.table = a.table.slice(0, to);
		return newA;
	}

	// Slice the right recursively.
	var right = getSlot(to, a);
	var sliced = sliceRight(to - (right > 0 ? a.lengths[right - 1] : 0), a.table[right]);

	// Maybe the a node is not even needed, as sliced contains the whole slice.
	if (right === 0)
	{
		return sliced;
	}

	// Create new node.
	var newA = {
		ctor: '_Array',
		height: a.height,
		table: a.table.slice(0, right),
		lengths: a.lengths.slice(0, right)
	};
	if (sliced.table.length > 0)
	{
		newA.table[right] = sliced;
		newA.lengths[right] = length(sliced) + (right > 0 ? newA.lengths[right - 1] : 0);
	}
	return newA;
}

function sliceLeft(from, a)
{
	if (from === 0)
	{
		return a;
	}

	// Handle leaf level.
	if (a.height === 0)
	{
		var newA = { ctor:'_Array', height:0 };
		newA.table = a.table.slice(from, a.table.length + 1);
		return newA;
	}

	// Slice the left recursively.
	var left = getSlot(from, a);
	var sliced = sliceLeft(from - (left > 0 ? a.lengths[left - 1] : 0), a.table[left]);

	// Maybe the a node is not even needed, as sliced contains the whole slice.
	if (left === a.table.length - 1)
	{
		return sliced;
	}

	// Create new node.
	var newA = {
		ctor: '_Array',
		height: a.height,
		table: a.table.slice(left, a.table.length + 1),
		lengths: new Array(a.table.length - left)
	};
	newA.table[0] = sliced;
	var len = 0;
	for (var i = 0; i < newA.table.length; i++)
	{
		len += length(newA.table[i]);
		newA.lengths[i] = len;
	}

	return newA;
}

// Appends two trees.
function append(a,b)
{
	if (a.table.length === 0)
	{
		return b;
	}
	if (b.table.length === 0)
	{
		return a;
	}

	var c = append_(a, b);

	// Check if both nodes can be crunshed together.
	if (c[0].table.length + c[1].table.length <= M)
	{
		if (c[0].table.length === 0)
		{
			return c[1];
		}
		if (c[1].table.length === 0)
		{
			return c[0];
		}

		// Adjust .table and .lengths
		c[0].table = c[0].table.concat(c[1].table);
		if (c[0].height > 0)
		{
			var len = length(c[0]);
			for (var i = 0; i < c[1].lengths.length; i++)
			{
				c[1].lengths[i] += len;
			}
			c[0].lengths = c[0].lengths.concat(c[1].lengths);
		}

		return c[0];
	}

	if (c[0].height > 0)
	{
		var toRemove = calcToRemove(a, b);
		if (toRemove > E)
		{
			c = shuffle(c[0], c[1], toRemove);
		}
	}

	return siblise(c[0], c[1]);
}

// Returns an array of two nodes; right and left. One node _may_ be empty.
function append_(a, b)
{
	if (a.height === 0 && b.height === 0)
	{
		return [a, b];
	}

	if (a.height !== 1 || b.height !== 1)
	{
		if (a.height === b.height)
		{
			a = nodeCopy(a);
			b = nodeCopy(b);
			var appended = append_(botRight(a), botLeft(b));

			insertRight(a, appended[1]);
			insertLeft(b, appended[0]);
		}
		else if (a.height > b.height)
		{
			a = nodeCopy(a);
			var appended = append_(botRight(a), b);

			insertRight(a, appended[0]);
			b = parentise(appended[1], appended[1].height + 1);
		}
		else
		{
			b = nodeCopy(b);
			var appended = append_(a, botLeft(b));

			var left = appended[0].table.length === 0 ? 0 : 1;
			var right = left === 0 ? 1 : 0;
			insertLeft(b, appended[left]);
			a = parentise(appended[right], appended[right].height + 1);
		}
	}

	// Check if balancing is needed and return based on that.
	if (a.table.length === 0 || b.table.length === 0)
	{
		return [a, b];
	}

	var toRemove = calcToRemove(a, b);
	if (toRemove <= E)
	{
		return [a, b];
	}
	return shuffle(a, b, toRemove);
}

// Helperfunctions for append_. Replaces a child node at the side of the parent.
function insertRight(parent, node)
{
	var index = parent.table.length - 1;
	parent.table[index] = node;
	parent.lengths[index] = length(node);
	parent.lengths[index] += index > 0 ? parent.lengths[index - 1] : 0;
}

function insertLeft(parent, node)
{
	if (node.table.length > 0)
	{
		parent.table[0] = node;
		parent.lengths[0] = length(node);

		var len = length(parent.table[0]);
		for (var i = 1; i < parent.lengths.length; i++)
		{
			len += length(parent.table[i]);
			parent.lengths[i] = len;
		}
	}
	else
	{
		parent.table.shift();
		for (var i = 1; i < parent.lengths.length; i++)
		{
			parent.lengths[i] = parent.lengths[i] - parent.lengths[0];
		}
		parent.lengths.shift();
	}
}

// Returns the extra search steps for E. Refer to the paper.
function calcToRemove(a, b)
{
	var subLengths = 0;
	for (var i = 0; i < a.table.length; i++)
	{
		subLengths += a.table[i].table.length;
	}
	for (var i = 0; i < b.table.length; i++)
	{
		subLengths += b.table[i].table.length;
	}

	var toRemove = a.table.length + b.table.length;
	return toRemove - (Math.floor((subLengths - 1) / M) + 1);
}

// get2, set2 and saveSlot are helpers for accessing elements over two arrays.
function get2(a, b, index)
{
	return index < a.length
		? a[index]
		: b[index - a.length];
}

function set2(a, b, index, value)
{
	if (index < a.length)
	{
		a[index] = value;
	}
	else
	{
		b[index - a.length] = value;
	}
}

function saveSlot(a, b, index, slot)
{
	set2(a.table, b.table, index, slot);

	var l = (index === 0 || index === a.lengths.length)
		? 0
		: get2(a.lengths, a.lengths, index - 1);

	set2(a.lengths, b.lengths, index, l + length(slot));
}

// Creates a node or leaf with a given length at their arrays for perfomance.
// Is only used by shuffle.
function createNode(h, length)
{
	if (length < 0)
	{
		length = 0;
	}
	var a = {
		ctor: '_Array',
		height: h,
		table: new Array(length)
	};
	if (h > 0)
	{
		a.lengths = new Array(length);
	}
	return a;
}

// Returns an array of two balanced nodes.
function shuffle(a, b, toRemove)
{
	var newA = createNode(a.height, Math.min(M, a.table.length + b.table.length - toRemove));
	var newB = createNode(a.height, newA.table.length - (a.table.length + b.table.length - toRemove));

	// Skip the slots with size M. More precise: copy the slot references
	// to the new node
	var read = 0;
	while (get2(a.table, b.table, read).table.length % M === 0)
	{
		set2(newA.table, newB.table, read, get2(a.table, b.table, read));
		set2(newA.lengths, newB.lengths, read, get2(a.lengths, b.lengths, read));
		read++;
	}

	// Pulling items from left to right, caching in a slot before writing
	// it into the new nodes.
	var write = read;
	var slot = new createNode(a.height - 1, 0);
	var from = 0;

	// If the current slot is still containing data, then there will be at
	// least one more write, so we do not break this loop yet.
	while (read - write - (slot.table.length > 0 ? 1 : 0) < toRemove)
	{
		// Find out the max possible items for copying.
		var source = get2(a.table, b.table, read);
		var to = Math.min(M - slot.table.length, source.table.length);

		// Copy and adjust size table.
		slot.table = slot.table.concat(source.table.slice(from, to));
		if (slot.height > 0)
		{
			var len = slot.lengths.length;
			for (var i = len; i < len + to - from; i++)
			{
				slot.lengths[i] = length(slot.table[i]);
				slot.lengths[i] += (i > 0 ? slot.lengths[i - 1] : 0);
			}
		}

		from += to;

		// Only proceed to next slots[i] if the current one was
		// fully copied.
		if (source.table.length <= to)
		{
			read++; from = 0;
		}

		// Only create a new slot if the current one is filled up.
		if (slot.table.length === M)
		{
			saveSlot(newA, newB, write, slot);
			slot = createNode(a.height - 1, 0);
			write++;
		}
	}

	// Cleanup after the loop. Copy the last slot into the new nodes.
	if (slot.table.length > 0)
	{
		saveSlot(newA, newB, write, slot);
		write++;
	}

	// Shift the untouched slots to the left
	while (read < a.table.length + b.table.length )
	{
		saveSlot(newA, newB, write, get2(a.table, b.table, read));
		read++;
		write++;
	}

	return [newA, newB];
}

// Navigation functions
function botRight(a)
{
	return a.table[a.table.length - 1];
}
function botLeft(a)
{
	return a.table[0];
}

// Copies a node for updating. Note that you should not use this if
// only updating only one of "table" or "lengths" for performance reasons.
function nodeCopy(a)
{
	var newA = {
		ctor: '_Array',
		height: a.height,
		table: a.table.slice()
	};
	if (a.height > 0)
	{
		newA.lengths = a.lengths.slice();
	}
	return newA;
}

// Returns how many items are in the tree.
function length(array)
{
	if (array.height === 0)
	{
		return array.table.length;
	}
	else
	{
		return array.lengths[array.lengths.length - 1];
	}
}

// Calculates in which slot of "table" the item probably is, then
// find the exact slot via forward searching in  "lengths". Returns the index.
function getSlot(i, a)
{
	var slot = i >> (5 * a.height);
	while (a.lengths[slot] <= i)
	{
		slot++;
	}
	return slot;
}

// Recursively creates a tree with a given height containing
// only the given item.
function create(item, h)
{
	if (h === 0)
	{
		return {
			ctor: '_Array',
			height: 0,
			table: [item]
		};
	}
	return {
		ctor: '_Array',
		height: h,
		table: [create(item, h - 1)],
		lengths: [1]
	};
}

// Recursively creates a tree that contains the given tree.
function parentise(tree, h)
{
	if (h === tree.height)
	{
		return tree;
	}

	return {
		ctor: '_Array',
		height: h,
		table: [parentise(tree, h - 1)],
		lengths: [length(tree)]
	};
}

// Emphasizes blood brotherhood beneath two trees.
function siblise(a, b)
{
	return {
		ctor: '_Array',
		height: a.height + 1,
		table: [a, b],
		lengths: [length(a), length(a) + length(b)]
	};
}

function toJSArray(a)
{
	var jsArray = new Array(length(a));
	toJSArray_(jsArray, 0, a);
	return jsArray;
}

function toJSArray_(jsArray, i, a)
{
	for (var t = 0; t < a.table.length; t++)
	{
		if (a.height === 0)
		{
			jsArray[i + t] = a.table[t];
		}
		else
		{
			var inc = t === 0 ? 0 : a.lengths[t - 1];
			toJSArray_(jsArray, i + inc, a.table[t]);
		}
	}
}

function fromJSArray(jsArray)
{
	if (jsArray.length === 0)
	{
		return empty;
	}
	var h = Math.floor(Math.log(jsArray.length) / Math.log(M));
	return fromJSArray_(jsArray, h, 0, jsArray.length);
}

function fromJSArray_(jsArray, h, from, to)
{
	if (h === 0)
	{
		return {
			ctor: '_Array',
			height: 0,
			table: jsArray.slice(from, to)
		};
	}

	var step = Math.pow(M, h);
	var table = new Array(Math.ceil((to - from) / step));
	var lengths = new Array(table.length);
	for (var i = 0; i < table.length; i++)
	{
		table[i] = fromJSArray_(jsArray, h - 1, from + (i * step), Math.min(from + ((i + 1) * step), to));
		lengths[i] = length(table[i]) + (i > 0 ? lengths[i - 1] : 0);
	}
	return {
		ctor: '_Array',
		height: h,
		table: table,
		lengths: lengths
	};
}

return {
	empty: empty,
	fromList: fromList,
	toList: toList,
	initialize: F2(initialize),
	append: F2(append),
	push: F2(push),
	slice: F3(slice),
	get: F2(get),
	set: F3(set),
	map: F2(map),
	indexedMap: F2(indexedMap),
	foldl: F3(foldl),
	foldr: F3(foldr),
	length: length,

	toJSArray: toJSArray,
	fromJSArray: fromJSArray
};

}();
var _elm_lang$core$Array$append = _elm_lang$core$Native_Array.append;
var _elm_lang$core$Array$length = _elm_lang$core$Native_Array.length;
var _elm_lang$core$Array$isEmpty = function (array) {
	return _elm_lang$core$Native_Utils.eq(
		_elm_lang$core$Array$length(array),
		0);
};
var _elm_lang$core$Array$slice = _elm_lang$core$Native_Array.slice;
var _elm_lang$core$Array$set = _elm_lang$core$Native_Array.set;
var _elm_lang$core$Array$get = F2(
	function (i, array) {
		return ((_elm_lang$core$Native_Utils.cmp(0, i) < 1) && (_elm_lang$core$Native_Utils.cmp(
			i,
			_elm_lang$core$Native_Array.length(array)) < 0)) ? _elm_lang$core$Maybe$Just(
			A2(_elm_lang$core$Native_Array.get, i, array)) : _elm_lang$core$Maybe$Nothing;
	});
var _elm_lang$core$Array$push = _elm_lang$core$Native_Array.push;
var _elm_lang$core$Array$empty = _elm_lang$core$Native_Array.empty;
var _elm_lang$core$Array$filter = F2(
	function (isOkay, arr) {
		var update = F2(
			function (x, xs) {
				return isOkay(x) ? A2(_elm_lang$core$Native_Array.push, x, xs) : xs;
			});
		return A3(_elm_lang$core$Native_Array.foldl, update, _elm_lang$core$Native_Array.empty, arr);
	});
var _elm_lang$core$Array$foldr = _elm_lang$core$Native_Array.foldr;
var _elm_lang$core$Array$foldl = _elm_lang$core$Native_Array.foldl;
var _elm_lang$core$Array$indexedMap = _elm_lang$core$Native_Array.indexedMap;
var _elm_lang$core$Array$map = _elm_lang$core$Native_Array.map;
var _elm_lang$core$Array$toIndexedList = function (array) {
	return A3(
		_elm_lang$core$List$map2,
		F2(
			function (v0, v1) {
				return {ctor: '_Tuple2', _0: v0, _1: v1};
			}),
		A2(
			_elm_lang$core$List$range,
			0,
			_elm_lang$core$Native_Array.length(array) - 1),
		_elm_lang$core$Native_Array.toList(array));
};
var _elm_lang$core$Array$toList = _elm_lang$core$Native_Array.toList;
var _elm_lang$core$Array$fromList = _elm_lang$core$Native_Array.fromList;
var _elm_lang$core$Array$initialize = _elm_lang$core$Native_Array.initialize;
var _elm_lang$core$Array$repeat = F2(
	function (n, e) {
		return A2(
			_elm_lang$core$Array$initialize,
			n,
			_elm_lang$core$Basics$always(e));
	});
var _elm_lang$core$Array$Array = {ctor: 'Array'};

//import Maybe, Native.Array, Native.List, Native.Utils, Result //

var _elm_lang$core$Native_Json = function() {


// CORE DECODERS

function succeed(msg)
{
	return {
		ctor: '<decoder>',
		tag: 'succeed',
		msg: msg
	};
}

function fail(msg)
{
	return {
		ctor: '<decoder>',
		tag: 'fail',
		msg: msg
	};
}

function decodePrimitive(tag)
{
	return {
		ctor: '<decoder>',
		tag: tag
	};
}

function decodeContainer(tag, decoder)
{
	return {
		ctor: '<decoder>',
		tag: tag,
		decoder: decoder
	};
}

function decodeNull(value)
{
	return {
		ctor: '<decoder>',
		tag: 'null',
		value: value
	};
}

function decodeField(field, decoder)
{
	return {
		ctor: '<decoder>',
		tag: 'field',
		field: field,
		decoder: decoder
	};
}

function decodeIndex(index, decoder)
{
	return {
		ctor: '<decoder>',
		tag: 'index',
		index: index,
		decoder: decoder
	};
}

function decodeKeyValuePairs(decoder)
{
	return {
		ctor: '<decoder>',
		tag: 'key-value',
		decoder: decoder
	};
}

function mapMany(f, decoders)
{
	return {
		ctor: '<decoder>',
		tag: 'map-many',
		func: f,
		decoders: decoders
	};
}

function andThen(callback, decoder)
{
	return {
		ctor: '<decoder>',
		tag: 'andThen',
		decoder: decoder,
		callback: callback
	};
}

function oneOf(decoders)
{
	return {
		ctor: '<decoder>',
		tag: 'oneOf',
		decoders: decoders
	};
}


// DECODING OBJECTS

function map1(f, d1)
{
	return mapMany(f, [d1]);
}

function map2(f, d1, d2)
{
	return mapMany(f, [d1, d2]);
}

function map3(f, d1, d2, d3)
{
	return mapMany(f, [d1, d2, d3]);
}

function map4(f, d1, d2, d3, d4)
{
	return mapMany(f, [d1, d2, d3, d4]);
}

function map5(f, d1, d2, d3, d4, d5)
{
	return mapMany(f, [d1, d2, d3, d4, d5]);
}

function map6(f, d1, d2, d3, d4, d5, d6)
{
	return mapMany(f, [d1, d2, d3, d4, d5, d6]);
}

function map7(f, d1, d2, d3, d4, d5, d6, d7)
{
	return mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);
}

function map8(f, d1, d2, d3, d4, d5, d6, d7, d8)
{
	return mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);
}


// DECODE HELPERS

function ok(value)
{
	return { tag: 'ok', value: value };
}

function badPrimitive(type, value)
{
	return { tag: 'primitive', type: type, value: value };
}

function badIndex(index, nestedProblems)
{
	return { tag: 'index', index: index, rest: nestedProblems };
}

function badField(field, nestedProblems)
{
	return { tag: 'field', field: field, rest: nestedProblems };
}

function badIndex(index, nestedProblems)
{
	return { tag: 'index', index: index, rest: nestedProblems };
}

function badOneOf(problems)
{
	return { tag: 'oneOf', problems: problems };
}

function bad(msg)
{
	return { tag: 'fail', msg: msg };
}

function badToString(problem)
{
	var context = '_';
	while (problem)
	{
		switch (problem.tag)
		{
			case 'primitive':
				return 'Expecting ' + problem.type
					+ (context === '_' ? '' : ' at ' + context)
					+ ' but instead got: ' + jsToString(problem.value);

			case 'index':
				context += '[' + problem.index + ']';
				problem = problem.rest;
				break;

			case 'field':
				context += '.' + problem.field;
				problem = problem.rest;
				break;

			case 'oneOf':
				var problems = problem.problems;
				for (var i = 0; i < problems.length; i++)
				{
					problems[i] = badToString(problems[i]);
				}
				return 'I ran into the following problems'
					+ (context === '_' ? '' : ' at ' + context)
					+ ':\n\n' + problems.join('\n');

			case 'fail':
				return 'I ran into a `fail` decoder'
					+ (context === '_' ? '' : ' at ' + context)
					+ ': ' + problem.msg;
		}
	}
}

function jsToString(value)
{
	return value === undefined
		? 'undefined'
		: JSON.stringify(value);
}


// DECODE

function runOnString(decoder, string)
{
	var json;
	try
	{
		json = JSON.parse(string);
	}
	catch (e)
	{
		return _elm_lang$core$Result$Err('Given an invalid JSON: ' + e.message);
	}
	return run(decoder, json);
}

function run(decoder, value)
{
	var result = runHelp(decoder, value);
	return (result.tag === 'ok')
		? _elm_lang$core$Result$Ok(result.value)
		: _elm_lang$core$Result$Err(badToString(result));
}

function runHelp(decoder, value)
{
	switch (decoder.tag)
	{
		case 'bool':
			return (typeof value === 'boolean')
				? ok(value)
				: badPrimitive('a Bool', value);

		case 'int':
			if (typeof value !== 'number') {
				return badPrimitive('an Int', value);
			}

			if (-2147483647 < value && value < 2147483647 && (value | 0) === value) {
				return ok(value);
			}

			if (isFinite(value) && !(value % 1)) {
				return ok(value);
			}

			return badPrimitive('an Int', value);

		case 'float':
			return (typeof value === 'number')
				? ok(value)
				: badPrimitive('a Float', value);

		case 'string':
			return (typeof value === 'string')
				? ok(value)
				: (value instanceof String)
					? ok(value + '')
					: badPrimitive('a String', value);

		case 'null':
			return (value === null)
				? ok(decoder.value)
				: badPrimitive('null', value);

		case 'value':
			return ok(value);

		case 'list':
			if (!(value instanceof Array))
			{
				return badPrimitive('a List', value);
			}

			var list = _elm_lang$core$Native_List.Nil;
			for (var i = value.length; i--; )
			{
				var result = runHelp(decoder.decoder, value[i]);
				if (result.tag !== 'ok')
				{
					return badIndex(i, result)
				}
				list = _elm_lang$core$Native_List.Cons(result.value, list);
			}
			return ok(list);

		case 'array':
			if (!(value instanceof Array))
			{
				return badPrimitive('an Array', value);
			}

			var len = value.length;
			var array = new Array(len);
			for (var i = len; i--; )
			{
				var result = runHelp(decoder.decoder, value[i]);
				if (result.tag !== 'ok')
				{
					return badIndex(i, result);
				}
				array[i] = result.value;
			}
			return ok(_elm_lang$core$Native_Array.fromJSArray(array));

		case 'maybe':
			var result = runHelp(decoder.decoder, value);
			return (result.tag === 'ok')
				? ok(_elm_lang$core$Maybe$Just(result.value))
				: ok(_elm_lang$core$Maybe$Nothing);

		case 'field':
			var field = decoder.field;
			if (typeof value !== 'object' || value === null || !(field in value))
			{
				return badPrimitive('an object with a field named `' + field + '`', value);
			}

			var result = runHelp(decoder.decoder, value[field]);
			return (result.tag === 'ok') ? result : badField(field, result);

		case 'index':
			var index = decoder.index;
			if (!(value instanceof Array))
			{
				return badPrimitive('an array', value);
			}
			if (index >= value.length)
			{
				return badPrimitive('a longer array. Need index ' + index + ' but there are only ' + value.length + ' entries', value);
			}

			var result = runHelp(decoder.decoder, value[index]);
			return (result.tag === 'ok') ? result : badIndex(index, result);

		case 'key-value':
			if (typeof value !== 'object' || value === null || value instanceof Array)
			{
				return badPrimitive('an object', value);
			}

			var keyValuePairs = _elm_lang$core$Native_List.Nil;
			for (var key in value)
			{
				var result = runHelp(decoder.decoder, value[key]);
				if (result.tag !== 'ok')
				{
					return badField(key, result);
				}
				var pair = _elm_lang$core$Native_Utils.Tuple2(key, result.value);
				keyValuePairs = _elm_lang$core$Native_List.Cons(pair, keyValuePairs);
			}
			return ok(keyValuePairs);

		case 'map-many':
			var answer = decoder.func;
			var decoders = decoder.decoders;
			for (var i = 0; i < decoders.length; i++)
			{
				var result = runHelp(decoders[i], value);
				if (result.tag !== 'ok')
				{
					return result;
				}
				answer = answer(result.value);
			}
			return ok(answer);

		case 'andThen':
			var result = runHelp(decoder.decoder, value);
			return (result.tag !== 'ok')
				? result
				: runHelp(decoder.callback(result.value), value);

		case 'oneOf':
			var errors = [];
			var temp = decoder.decoders;
			while (temp.ctor !== '[]')
			{
				var result = runHelp(temp._0, value);

				if (result.tag === 'ok')
				{
					return result;
				}

				errors.push(result);

				temp = temp._1;
			}
			return badOneOf(errors);

		case 'fail':
			return bad(decoder.msg);

		case 'succeed':
			return ok(decoder.msg);
	}
}


// EQUALITY

function equality(a, b)
{
	if (a === b)
	{
		return true;
	}

	if (a.tag !== b.tag)
	{
		return false;
	}

	switch (a.tag)
	{
		case 'succeed':
		case 'fail':
			return a.msg === b.msg;

		case 'bool':
		case 'int':
		case 'float':
		case 'string':
		case 'value':
			return true;

		case 'null':
			return a.value === b.value;

		case 'list':
		case 'array':
		case 'maybe':
		case 'key-value':
			return equality(a.decoder, b.decoder);

		case 'field':
			return a.field === b.field && equality(a.decoder, b.decoder);

		case 'index':
			return a.index === b.index && equality(a.decoder, b.decoder);

		case 'map-many':
			if (a.func !== b.func)
			{
				return false;
			}
			return listEquality(a.decoders, b.decoders);

		case 'andThen':
			return a.callback === b.callback && equality(a.decoder, b.decoder);

		case 'oneOf':
			return listEquality(a.decoders, b.decoders);
	}
}

function listEquality(aDecoders, bDecoders)
{
	var len = aDecoders.length;
	if (len !== bDecoders.length)
	{
		return false;
	}
	for (var i = 0; i < len; i++)
	{
		if (!equality(aDecoders[i], bDecoders[i]))
		{
			return false;
		}
	}
	return true;
}


// ENCODE

function encode(indentLevel, value)
{
	return JSON.stringify(value, null, indentLevel);
}

function identity(value)
{
	return value;
}

function encodeObject(keyValuePairs)
{
	var obj = {};
	while (keyValuePairs.ctor !== '[]')
	{
		var pair = keyValuePairs._0;
		obj[pair._0] = pair._1;
		keyValuePairs = keyValuePairs._1;
	}
	return obj;
}

return {
	encode: F2(encode),
	runOnString: F2(runOnString),
	run: F2(run),

	decodeNull: decodeNull,
	decodePrimitive: decodePrimitive,
	decodeContainer: F2(decodeContainer),

	decodeField: F2(decodeField),
	decodeIndex: F2(decodeIndex),

	map1: F2(map1),
	map2: F3(map2),
	map3: F4(map3),
	map4: F5(map4),
	map5: F6(map5),
	map6: F7(map6),
	map7: F8(map7),
	map8: F9(map8),
	decodeKeyValuePairs: decodeKeyValuePairs,

	andThen: F2(andThen),
	fail: fail,
	succeed: succeed,
	oneOf: oneOf,

	identity: identity,
	encodeNull: null,
	encodeArray: _elm_lang$core$Native_Array.toJSArray,
	encodeList: _elm_lang$core$Native_List.toArray,
	encodeObject: encodeObject,

	equality: equality
};

}();

var _elm_lang$core$Json_Encode$list = _elm_lang$core$Native_Json.encodeList;
var _elm_lang$core$Json_Encode$array = _elm_lang$core$Native_Json.encodeArray;
var _elm_lang$core$Json_Encode$object = _elm_lang$core$Native_Json.encodeObject;
var _elm_lang$core$Json_Encode$null = _elm_lang$core$Native_Json.encodeNull;
var _elm_lang$core$Json_Encode$bool = _elm_lang$core$Native_Json.identity;
var _elm_lang$core$Json_Encode$float = _elm_lang$core$Native_Json.identity;
var _elm_lang$core$Json_Encode$int = _elm_lang$core$Native_Json.identity;
var _elm_lang$core$Json_Encode$string = _elm_lang$core$Native_Json.identity;
var _elm_lang$core$Json_Encode$encode = _elm_lang$core$Native_Json.encode;
var _elm_lang$core$Json_Encode$Value = {ctor: 'Value'};

var _elm_lang$core$Json_Decode$null = _elm_lang$core$Native_Json.decodeNull;
var _elm_lang$core$Json_Decode$value = _elm_lang$core$Native_Json.decodePrimitive('value');
var _elm_lang$core$Json_Decode$andThen = _elm_lang$core$Native_Json.andThen;
var _elm_lang$core$Json_Decode$fail = _elm_lang$core$Native_Json.fail;
var _elm_lang$core$Json_Decode$succeed = _elm_lang$core$Native_Json.succeed;
var _elm_lang$core$Json_Decode$lazy = function (thunk) {
	return A2(
		_elm_lang$core$Json_Decode$andThen,
		thunk,
		_elm_lang$core$Json_Decode$succeed(
			{ctor: '_Tuple0'}));
};
var _elm_lang$core$Json_Decode$decodeValue = _elm_lang$core$Native_Json.run;
var _elm_lang$core$Json_Decode$decodeString = _elm_lang$core$Native_Json.runOnString;
var _elm_lang$core$Json_Decode$map8 = _elm_lang$core$Native_Json.map8;
var _elm_lang$core$Json_Decode$map7 = _elm_lang$core$Native_Json.map7;
var _elm_lang$core$Json_Decode$map6 = _elm_lang$core$Native_Json.map6;
var _elm_lang$core$Json_Decode$map5 = _elm_lang$core$Native_Json.map5;
var _elm_lang$core$Json_Decode$map4 = _elm_lang$core$Native_Json.map4;
var _elm_lang$core$Json_Decode$map3 = _elm_lang$core$Native_Json.map3;
var _elm_lang$core$Json_Decode$map2 = _elm_lang$core$Native_Json.map2;
var _elm_lang$core$Json_Decode$map = _elm_lang$core$Native_Json.map1;
var _elm_lang$core$Json_Decode$oneOf = _elm_lang$core$Native_Json.oneOf;
var _elm_lang$core$Json_Decode$maybe = function (decoder) {
	return A2(_elm_lang$core$Native_Json.decodeContainer, 'maybe', decoder);
};
var _elm_lang$core$Json_Decode$index = _elm_lang$core$Native_Json.decodeIndex;
var _elm_lang$core$Json_Decode$field = _elm_lang$core$Native_Json.decodeField;
var _elm_lang$core$Json_Decode$at = F2(
	function (fields, decoder) {
		return A3(_elm_lang$core$List$foldr, _elm_lang$core$Json_Decode$field, decoder, fields);
	});
var _elm_lang$core$Json_Decode$keyValuePairs = _elm_lang$core$Native_Json.decodeKeyValuePairs;
var _elm_lang$core$Json_Decode$dict = function (decoder) {
	return A2(
		_elm_lang$core$Json_Decode$map,
		_elm_lang$core$Dict$fromList,
		_elm_lang$core$Json_Decode$keyValuePairs(decoder));
};
var _elm_lang$core$Json_Decode$array = function (decoder) {
	return A2(_elm_lang$core$Native_Json.decodeContainer, 'array', decoder);
};
var _elm_lang$core$Json_Decode$list = function (decoder) {
	return A2(_elm_lang$core$Native_Json.decodeContainer, 'list', decoder);
};
var _elm_lang$core$Json_Decode$nullable = function (decoder) {
	return _elm_lang$core$Json_Decode$oneOf(
		{
			ctor: '::',
			_0: _elm_lang$core$Json_Decode$null(_elm_lang$core$Maybe$Nothing),
			_1: {
				ctor: '::',
				_0: A2(_elm_lang$core$Json_Decode$map, _elm_lang$core$Maybe$Just, decoder),
				_1: {ctor: '[]'}
			}
		});
};
var _elm_lang$core$Json_Decode$float = _elm_lang$core$Native_Json.decodePrimitive('float');
var _elm_lang$core$Json_Decode$int = _elm_lang$core$Native_Json.decodePrimitive('int');
var _elm_lang$core$Json_Decode$bool = _elm_lang$core$Native_Json.decodePrimitive('bool');
var _elm_lang$core$Json_Decode$string = _elm_lang$core$Native_Json.decodePrimitive('string');
var _elm_lang$core$Json_Decode$Decoder = {ctor: 'Decoder'};

var _elm_lang$core$Set$foldr = F3(
	function (f, b, _p0) {
		var _p1 = _p0;
		return A3(
			_elm_lang$core$Dict$foldr,
			F3(
				function (k, _p2, b) {
					return A2(f, k, b);
				}),
			b,
			_p1._0);
	});
var _elm_lang$core$Set$foldl = F3(
	function (f, b, _p3) {
		var _p4 = _p3;
		return A3(
			_elm_lang$core$Dict$foldl,
			F3(
				function (k, _p5, b) {
					return A2(f, k, b);
				}),
			b,
			_p4._0);
	});
var _elm_lang$core$Set$toList = function (_p6) {
	var _p7 = _p6;
	return _elm_lang$core$Dict$keys(_p7._0);
};
var _elm_lang$core$Set$size = function (_p8) {
	var _p9 = _p8;
	return _elm_lang$core$Dict$size(_p9._0);
};
var _elm_lang$core$Set$member = F2(
	function (k, _p10) {
		var _p11 = _p10;
		return A2(_elm_lang$core$Dict$member, k, _p11._0);
	});
var _elm_lang$core$Set$isEmpty = function (_p12) {
	var _p13 = _p12;
	return _elm_lang$core$Dict$isEmpty(_p13._0);
};
var _elm_lang$core$Set$Set_elm_builtin = function (a) {
	return {ctor: 'Set_elm_builtin', _0: a};
};
var _elm_lang$core$Set$empty = _elm_lang$core$Set$Set_elm_builtin(_elm_lang$core$Dict$empty);
var _elm_lang$core$Set$singleton = function (k) {
	return _elm_lang$core$Set$Set_elm_builtin(
		A2(
			_elm_lang$core$Dict$singleton,
			k,
			{ctor: '_Tuple0'}));
};
var _elm_lang$core$Set$insert = F2(
	function (k, _p14) {
		var _p15 = _p14;
		return _elm_lang$core$Set$Set_elm_builtin(
			A3(
				_elm_lang$core$Dict$insert,
				k,
				{ctor: '_Tuple0'},
				_p15._0));
	});
var _elm_lang$core$Set$fromList = function (xs) {
	return A3(_elm_lang$core$List$foldl, _elm_lang$core$Set$insert, _elm_lang$core$Set$empty, xs);
};
var _elm_lang$core$Set$map = F2(
	function (f, s) {
		return _elm_lang$core$Set$fromList(
			A2(
				_elm_lang$core$List$map,
				f,
				_elm_lang$core$Set$toList(s)));
	});
var _elm_lang$core$Set$remove = F2(
	function (k, _p16) {
		var _p17 = _p16;
		return _elm_lang$core$Set$Set_elm_builtin(
			A2(_elm_lang$core$Dict$remove, k, _p17._0));
	});
var _elm_lang$core$Set$union = F2(
	function (_p19, _p18) {
		var _p20 = _p19;
		var _p21 = _p18;
		return _elm_lang$core$Set$Set_elm_builtin(
			A2(_elm_lang$core$Dict$union, _p20._0, _p21._0));
	});
var _elm_lang$core$Set$intersect = F2(
	function (_p23, _p22) {
		var _p24 = _p23;
		var _p25 = _p22;
		return _elm_lang$core$Set$Set_elm_builtin(
			A2(_elm_lang$core$Dict$intersect, _p24._0, _p25._0));
	});
var _elm_lang$core$Set$diff = F2(
	function (_p27, _p26) {
		var _p28 = _p27;
		var _p29 = _p26;
		return _elm_lang$core$Set$Set_elm_builtin(
			A2(_elm_lang$core$Dict$diff, _p28._0, _p29._0));
	});
var _elm_lang$core$Set$filter = F2(
	function (p, _p30) {
		var _p31 = _p30;
		return _elm_lang$core$Set$Set_elm_builtin(
			A2(
				_elm_lang$core$Dict$filter,
				F2(
					function (k, _p32) {
						return p(k);
					}),
				_p31._0));
	});
var _elm_lang$core$Set$partition = F2(
	function (p, _p33) {
		var _p34 = _p33;
		var _p35 = A2(
			_elm_lang$core$Dict$partition,
			F2(
				function (k, _p36) {
					return p(k);
				}),
			_p34._0);
		var p1 = _p35._0;
		var p2 = _p35._1;
		return {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Set$Set_elm_builtin(p1),
			_1: _elm_lang$core$Set$Set_elm_builtin(p2)
		};
	});

var _elm_lang$core$Debug$crash = _elm_lang$core$Native_Debug.crash;
var _elm_lang$core$Debug$log = _elm_lang$core$Native_Debug.log;

var _elm_lang$core$Tuple$mapSecond = F2(
	function (func, _p0) {
		var _p1 = _p0;
		return {
			ctor: '_Tuple2',
			_0: _p1._0,
			_1: func(_p1._1)
		};
	});
var _elm_lang$core$Tuple$mapFirst = F2(
	function (func, _p2) {
		var _p3 = _p2;
		return {
			ctor: '_Tuple2',
			_0: func(_p3._0),
			_1: _p3._1
		};
	});
var _elm_lang$core$Tuple$second = function (_p4) {
	var _p5 = _p4;
	return _p5._1;
};
var _elm_lang$core$Tuple$first = function (_p6) {
	var _p7 = _p6;
	return _p7._0;
};

var _elm_community$json_extra$Json_Decode_Extra$combine = A2(
	_elm_lang$core$List$foldr,
	_elm_lang$core$Json_Decode$map2(
		F2(
			function (x, y) {
				return {ctor: '::', _0: x, _1: y};
			})),
	_elm_lang$core$Json_Decode$succeed(
		{ctor: '[]'}));
var _elm_community$json_extra$Json_Decode_Extra$collection = function (decoder) {
	return A2(
		_elm_lang$core$Json_Decode$andThen,
		function (length) {
			return _elm_community$json_extra$Json_Decode_Extra$combine(
				A2(
					_elm_lang$core$List$map,
					function (index) {
						return A2(
							_elm_lang$core$Json_Decode$field,
							_elm_lang$core$Basics$toString(index),
							decoder);
					},
					A2(_elm_lang$core$List$range, 0, length - 1)));
		},
		A2(_elm_lang$core$Json_Decode$field, 'length', _elm_lang$core$Json_Decode$int));
};
var _elm_community$json_extra$Json_Decode_Extra$fromResult = function (result) {
	var _p0 = result;
	if (_p0.ctor === 'Ok') {
		return _elm_lang$core$Json_Decode$succeed(_p0._0);
	} else {
		return _elm_lang$core$Json_Decode$fail(_p0._0);
	}
};
var _elm_community$json_extra$Json_Decode_Extra$parseInt = A2(
	_elm_lang$core$Json_Decode$andThen,
	function (_p1) {
		return _elm_community$json_extra$Json_Decode_Extra$fromResult(
			_elm_lang$core$String$toInt(_p1));
	},
	_elm_lang$core$Json_Decode$string);
var _elm_community$json_extra$Json_Decode_Extra$parseFloat = A2(
	_elm_lang$core$Json_Decode$andThen,
	function (_p2) {
		return _elm_community$json_extra$Json_Decode_Extra$fromResult(
			_elm_lang$core$String$toFloat(_p2));
	},
	_elm_lang$core$Json_Decode$string);
var _elm_community$json_extra$Json_Decode_Extra$doubleEncoded = function (decoder) {
	return A2(
		_elm_lang$core$Json_Decode$andThen,
		function (_p3) {
			return _elm_community$json_extra$Json_Decode_Extra$fromResult(
				A2(_elm_lang$core$Json_Decode$decodeString, decoder, _p3));
		},
		_elm_lang$core$Json_Decode$string);
};
var _elm_community$json_extra$Json_Decode_Extra$keys = A2(
	_elm_lang$core$Json_Decode$map,
	A2(
		_elm_lang$core$List$foldl,
		F2(
			function (_p4, acc) {
				var _p5 = _p4;
				return {ctor: '::', _0: _p5._0, _1: acc};
			}),
		{ctor: '[]'}),
	_elm_lang$core$Json_Decode$keyValuePairs(
		_elm_lang$core$Json_Decode$succeed(
			{ctor: '_Tuple0'})));
var _elm_community$json_extra$Json_Decode_Extra$sequenceHelp = F2(
	function (decoders, jsonValues) {
		return (!_elm_lang$core$Native_Utils.eq(
			_elm_lang$core$List$length(jsonValues),
			_elm_lang$core$List$length(decoders))) ? _elm_lang$core$Json_Decode$fail('Number of decoders does not match number of values') : _elm_community$json_extra$Json_Decode_Extra$fromResult(
			A3(
				_elm_lang$core$List$foldr,
				_elm_lang$core$Result$map2(
					F2(
						function (x, y) {
							return {ctor: '::', _0: x, _1: y};
						})),
				_elm_lang$core$Result$Ok(
					{ctor: '[]'}),
				A3(_elm_lang$core$List$map2, _elm_lang$core$Json_Decode$decodeValue, decoders, jsonValues)));
	});
var _elm_community$json_extra$Json_Decode_Extra$sequence = function (decoders) {
	return A2(
		_elm_lang$core$Json_Decode$andThen,
		_elm_community$json_extra$Json_Decode_Extra$sequenceHelp(decoders),
		_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$value));
};
var _elm_community$json_extra$Json_Decode_Extra$indexedList = function (indexedDecoder) {
	return A2(
		_elm_lang$core$Json_Decode$andThen,
		function (values) {
			return _elm_community$json_extra$Json_Decode_Extra$sequence(
				A2(
					_elm_lang$core$List$map,
					indexedDecoder,
					A2(
						_elm_lang$core$List$range,
						0,
						_elm_lang$core$List$length(values) - 1)));
		},
		_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$value));
};
var _elm_community$json_extra$Json_Decode_Extra$optionalField = F2(
	function (fieldName, decoder) {
		var finishDecoding = function (json) {
			var _p6 = A2(
				_elm_lang$core$Json_Decode$decodeValue,
				A2(_elm_lang$core$Json_Decode$field, fieldName, _elm_lang$core$Json_Decode$value),
				json);
			if (_p6.ctor === 'Ok') {
				return A2(
					_elm_lang$core$Json_Decode$map,
					_elm_lang$core$Maybe$Just,
					A2(_elm_lang$core$Json_Decode$field, fieldName, decoder));
			} else {
				return _elm_lang$core$Json_Decode$succeed(_elm_lang$core$Maybe$Nothing);
			}
		};
		return A2(_elm_lang$core$Json_Decode$andThen, finishDecoding, _elm_lang$core$Json_Decode$value);
	});
var _elm_community$json_extra$Json_Decode_Extra$withDefault = F2(
	function (fallback, decoder) {
		return A2(
			_elm_lang$core$Json_Decode$map,
			_elm_lang$core$Maybe$withDefault(fallback),
			_elm_lang$core$Json_Decode$maybe(decoder));
	});
var _elm_community$json_extra$Json_Decode_Extra$decodeDictFromTuples = F2(
	function (keyDecoder, tuples) {
		var _p7 = tuples;
		if (_p7.ctor === '[]') {
			return _elm_lang$core$Json_Decode$succeed(_elm_lang$core$Dict$empty);
		} else {
			var _p8 = A2(_elm_lang$core$Json_Decode$decodeString, keyDecoder, _p7._0._0);
			if (_p8.ctor === 'Ok') {
				return A2(
					_elm_lang$core$Json_Decode$andThen,
					function (_p9) {
						return _elm_lang$core$Json_Decode$succeed(
							A3(_elm_lang$core$Dict$insert, _p8._0, _p7._0._1, _p9));
					},
					A2(_elm_community$json_extra$Json_Decode_Extra$decodeDictFromTuples, keyDecoder, _p7._1));
			} else {
				return _elm_lang$core$Json_Decode$fail(_p8._0);
			}
		}
	});
var _elm_community$json_extra$Json_Decode_Extra$dict2 = F2(
	function (keyDecoder, valueDecoder) {
		return A2(
			_elm_lang$core$Json_Decode$andThen,
			_elm_community$json_extra$Json_Decode_Extra$decodeDictFromTuples(keyDecoder),
			_elm_lang$core$Json_Decode$keyValuePairs(valueDecoder));
	});
var _elm_community$json_extra$Json_Decode_Extra$set = function (decoder) {
	return A2(
		_elm_lang$core$Json_Decode$map,
		_elm_lang$core$Set$fromList,
		_elm_lang$core$Json_Decode$list(decoder));
};
var _elm_community$json_extra$Json_Decode_Extra$date = A2(
	_elm_lang$core$Json_Decode$andThen,
	function (_p10) {
		return _elm_community$json_extra$Json_Decode_Extra$fromResult(
			_elm_lang$core$Date$fromString(_p10));
	},
	_elm_lang$core$Json_Decode$string);
var _elm_community$json_extra$Json_Decode_Extra$andMap = _elm_lang$core$Json_Decode$map2(
	F2(
		function (x, y) {
			return y(x);
		}));
var _elm_community$json_extra$Json_Decode_Extra_ops = _elm_community$json_extra$Json_Decode_Extra_ops || {};
_elm_community$json_extra$Json_Decode_Extra_ops['|:'] = _elm_lang$core$Basics$flip(_elm_community$json_extra$Json_Decode_Extra$andMap);

//import Maybe, Native.List //

var _elm_lang$core$Native_Regex = function() {

function escape(str)
{
	return str.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
}
function caseInsensitive(re)
{
	return new RegExp(re.source, 'gi');
}
function regex(raw)
{
	return new RegExp(raw, 'g');
}

function contains(re, string)
{
	return string.match(re) !== null;
}

function find(n, re, str)
{
	n = n.ctor === 'All' ? Infinity : n._0;
	var out = [];
	var number = 0;
	var string = str;
	var lastIndex = re.lastIndex;
	var prevLastIndex = -1;
	var result;
	while (number++ < n && (result = re.exec(string)))
	{
		if (prevLastIndex === re.lastIndex) break;
		var i = result.length - 1;
		var subs = new Array(i);
		while (i > 0)
		{
			var submatch = result[i];
			subs[--i] = submatch === undefined
				? _elm_lang$core$Maybe$Nothing
				: _elm_lang$core$Maybe$Just(submatch);
		}
		out.push({
			match: result[0],
			submatches: _elm_lang$core$Native_List.fromArray(subs),
			index: result.index,
			number: number
		});
		prevLastIndex = re.lastIndex;
	}
	re.lastIndex = lastIndex;
	return _elm_lang$core$Native_List.fromArray(out);
}

function replace(n, re, replacer, string)
{
	n = n.ctor === 'All' ? Infinity : n._0;
	var count = 0;
	function jsReplacer(match)
	{
		if (count++ >= n)
		{
			return match;
		}
		var i = arguments.length - 3;
		var submatches = new Array(i);
		while (i > 0)
		{
			var submatch = arguments[i];
			submatches[--i] = submatch === undefined
				? _elm_lang$core$Maybe$Nothing
				: _elm_lang$core$Maybe$Just(submatch);
		}
		return replacer({
			match: match,
			submatches: _elm_lang$core$Native_List.fromArray(submatches),
			index: arguments[arguments.length - 2],
			number: count
		});
	}
	return string.replace(re, jsReplacer);
}

function split(n, re, str)
{
	n = n.ctor === 'All' ? Infinity : n._0;
	if (n === Infinity)
	{
		return _elm_lang$core$Native_List.fromArray(str.split(re));
	}
	var string = str;
	var result;
	var out = [];
	var start = re.lastIndex;
	var restoreLastIndex = re.lastIndex;
	while (n--)
	{
		if (!(result = re.exec(string))) break;
		out.push(string.slice(start, result.index));
		start = re.lastIndex;
	}
	out.push(string.slice(start));
	re.lastIndex = restoreLastIndex;
	return _elm_lang$core$Native_List.fromArray(out);
}

return {
	regex: regex,
	caseInsensitive: caseInsensitive,
	escape: escape,

	contains: F2(contains),
	find: F3(find),
	replace: F4(replace),
	split: F3(split)
};

}();

var _elm_lang$core$Process$kill = _elm_lang$core$Native_Scheduler.kill;
var _elm_lang$core$Process$sleep = _elm_lang$core$Native_Scheduler.sleep;
var _elm_lang$core$Process$spawn = _elm_lang$core$Native_Scheduler.spawn;

var _elm_lang$core$Regex$split = _elm_lang$core$Native_Regex.split;
var _elm_lang$core$Regex$replace = _elm_lang$core$Native_Regex.replace;
var _elm_lang$core$Regex$find = _elm_lang$core$Native_Regex.find;
var _elm_lang$core$Regex$contains = _elm_lang$core$Native_Regex.contains;
var _elm_lang$core$Regex$caseInsensitive = _elm_lang$core$Native_Regex.caseInsensitive;
var _elm_lang$core$Regex$regex = _elm_lang$core$Native_Regex.regex;
var _elm_lang$core$Regex$escape = _elm_lang$core$Native_Regex.escape;
var _elm_lang$core$Regex$Match = F4(
	function (a, b, c, d) {
		return {match: a, submatches: b, index: c, number: d};
	});
var _elm_lang$core$Regex$Regex = {ctor: 'Regex'};
var _elm_lang$core$Regex$AtMost = function (a) {
	return {ctor: 'AtMost', _0: a};
};
var _elm_lang$core$Regex$All = {ctor: 'All'};

var _elm_lang$dom$Native_Dom = function() {

var fakeNode = {
	addEventListener: function() {},
	removeEventListener: function() {}
};

var onDocument = on(typeof document !== 'undefined' ? document : fakeNode);
var onWindow = on(typeof window !== 'undefined' ? window : fakeNode);

function on(node)
{
	return function(eventName, decoder, toTask)
	{
		return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback) {

			function performTask(event)
			{
				var result = A2(_elm_lang$core$Json_Decode$decodeValue, decoder, event);
				if (result.ctor === 'Ok')
				{
					_elm_lang$core$Native_Scheduler.rawSpawn(toTask(result._0));
				}
			}

			node.addEventListener(eventName, performTask);

			return function()
			{
				node.removeEventListener(eventName, performTask);
			};
		});
	};
}

var rAF = typeof requestAnimationFrame !== 'undefined'
	? requestAnimationFrame
	: function(callback) { callback(); };

function withNode(id, doStuff)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		rAF(function()
		{
			var node = document.getElementById(id);
			if (node === null)
			{
				callback(_elm_lang$core$Native_Scheduler.fail({ ctor: 'NotFound', _0: id }));
				return;
			}
			callback(_elm_lang$core$Native_Scheduler.succeed(doStuff(node)));
		});
	});
}


// FOCUS

function focus(id)
{
	return withNode(id, function(node) {
		node.focus();
		return _elm_lang$core$Native_Utils.Tuple0;
	});
}

function blur(id)
{
	return withNode(id, function(node) {
		node.blur();
		return _elm_lang$core$Native_Utils.Tuple0;
	});
}


// SCROLLING

function getScrollTop(id)
{
	return withNode(id, function(node) {
		return node.scrollTop;
	});
}

function setScrollTop(id, desiredScrollTop)
{
	return withNode(id, function(node) {
		node.scrollTop = desiredScrollTop;
		return _elm_lang$core$Native_Utils.Tuple0;
	});
}

function toBottom(id)
{
	return withNode(id, function(node) {
		node.scrollTop = node.scrollHeight;
		return _elm_lang$core$Native_Utils.Tuple0;
	});
}

function getScrollLeft(id)
{
	return withNode(id, function(node) {
		return node.scrollLeft;
	});
}

function setScrollLeft(id, desiredScrollLeft)
{
	return withNode(id, function(node) {
		node.scrollLeft = desiredScrollLeft;
		return _elm_lang$core$Native_Utils.Tuple0;
	});
}

function toRight(id)
{
	return withNode(id, function(node) {
		node.scrollLeft = node.scrollWidth;
		return _elm_lang$core$Native_Utils.Tuple0;
	});
}


// SIZE

function width(options, id)
{
	return withNode(id, function(node) {
		switch (options.ctor)
		{
			case 'Content':
				return node.scrollWidth;
			case 'VisibleContent':
				return node.clientWidth;
			case 'VisibleContentWithBorders':
				return node.offsetWidth;
			case 'VisibleContentWithBordersAndMargins':
				var rect = node.getBoundingClientRect();
				return rect.right - rect.left;
		}
	});
}

function height(options, id)
{
	return withNode(id, function(node) {
		switch (options.ctor)
		{
			case 'Content':
				return node.scrollHeight;
			case 'VisibleContent':
				return node.clientHeight;
			case 'VisibleContentWithBorders':
				return node.offsetHeight;
			case 'VisibleContentWithBordersAndMargins':
				var rect = node.getBoundingClientRect();
				return rect.bottom - rect.top;
		}
	});
}

return {
	onDocument: F3(onDocument),
	onWindow: F3(onWindow),

	focus: focus,
	blur: blur,

	getScrollTop: getScrollTop,
	setScrollTop: F2(setScrollTop),
	getScrollLeft: getScrollLeft,
	setScrollLeft: F2(setScrollLeft),
	toBottom: toBottom,
	toRight: toRight,

	height: F2(height),
	width: F2(width)
};

}();

var _elm_lang$dom$Dom$blur = _elm_lang$dom$Native_Dom.blur;
var _elm_lang$dom$Dom$focus = _elm_lang$dom$Native_Dom.focus;
var _elm_lang$dom$Dom$NotFound = function (a) {
	return {ctor: 'NotFound', _0: a};
};

var _elm_lang$dom$Dom_LowLevel$onWindow = _elm_lang$dom$Native_Dom.onWindow;
var _elm_lang$dom$Dom_LowLevel$onDocument = _elm_lang$dom$Native_Dom.onDocument;

var _elm_lang$dom$Dom_Size$width = _elm_lang$dom$Native_Dom.width;
var _elm_lang$dom$Dom_Size$height = _elm_lang$dom$Native_Dom.height;
var _elm_lang$dom$Dom_Size$VisibleContentWithBordersAndMargins = {ctor: 'VisibleContentWithBordersAndMargins'};
var _elm_lang$dom$Dom_Size$VisibleContentWithBorders = {ctor: 'VisibleContentWithBorders'};
var _elm_lang$dom$Dom_Size$VisibleContent = {ctor: 'VisibleContent'};
var _elm_lang$dom$Dom_Size$Content = {ctor: 'Content'};

var _elm_lang$dom$Dom_Scroll$toX = _elm_lang$dom$Native_Dom.setScrollLeft;
var _elm_lang$dom$Dom_Scroll$x = _elm_lang$dom$Native_Dom.getScrollLeft;
var _elm_lang$dom$Dom_Scroll$toRight = _elm_lang$dom$Native_Dom.toRight;
var _elm_lang$dom$Dom_Scroll$toLeft = function (id) {
	return A2(_elm_lang$dom$Dom_Scroll$toX, id, 0);
};
var _elm_lang$dom$Dom_Scroll$toY = _elm_lang$dom$Native_Dom.setScrollTop;
var _elm_lang$dom$Dom_Scroll$y = _elm_lang$dom$Native_Dom.getScrollTop;
var _elm_lang$dom$Dom_Scroll$toBottom = _elm_lang$dom$Native_Dom.toBottom;
var _elm_lang$dom$Dom_Scroll$toTop = function (id) {
	return A2(_elm_lang$dom$Dom_Scroll$toY, id, 0);
};

var _elm_lang$virtual_dom$VirtualDom_Debug$wrap;
var _elm_lang$virtual_dom$VirtualDom_Debug$wrapWithFlags;

var _elm_lang$virtual_dom$Native_VirtualDom = function() {

var STYLE_KEY = 'STYLE';
var EVENT_KEY = 'EVENT';
var ATTR_KEY = 'ATTR';
var ATTR_NS_KEY = 'ATTR_NS';

var localDoc = typeof document !== 'undefined' ? document : {};


////////////  VIRTUAL DOM NODES  ////////////


function text(string)
{
	return {
		type: 'text',
		text: string
	};
}


function node(tag)
{
	return F2(function(factList, kidList) {
		return nodeHelp(tag, factList, kidList);
	});
}


function nodeHelp(tag, factList, kidList)
{
	var organized = organizeFacts(factList);
	var namespace = organized.namespace;
	var facts = organized.facts;

	var children = [];
	var descendantsCount = 0;
	while (kidList.ctor !== '[]')
	{
		var kid = kidList._0;
		descendantsCount += (kid.descendantsCount || 0);
		children.push(kid);
		kidList = kidList._1;
	}
	descendantsCount += children.length;

	return {
		type: 'node',
		tag: tag,
		facts: facts,
		children: children,
		namespace: namespace,
		descendantsCount: descendantsCount
	};
}


function keyedNode(tag, factList, kidList)
{
	var organized = organizeFacts(factList);
	var namespace = organized.namespace;
	var facts = organized.facts;

	var children = [];
	var descendantsCount = 0;
	while (kidList.ctor !== '[]')
	{
		var kid = kidList._0;
		descendantsCount += (kid._1.descendantsCount || 0);
		children.push(kid);
		kidList = kidList._1;
	}
	descendantsCount += children.length;

	return {
		type: 'keyed-node',
		tag: tag,
		facts: facts,
		children: children,
		namespace: namespace,
		descendantsCount: descendantsCount
	};
}


function custom(factList, model, impl)
{
	var facts = organizeFacts(factList).facts;

	return {
		type: 'custom',
		facts: facts,
		model: model,
		impl: impl
	};
}


function map(tagger, node)
{
	return {
		type: 'tagger',
		tagger: tagger,
		node: node,
		descendantsCount: 1 + (node.descendantsCount || 0)
	};
}


function thunk(func, args, thunk)
{
	return {
		type: 'thunk',
		func: func,
		args: args,
		thunk: thunk,
		node: undefined
	};
}

function lazy(fn, a)
{
	return thunk(fn, [a], function() {
		return fn(a);
	});
}

function lazy2(fn, a, b)
{
	return thunk(fn, [a,b], function() {
		return A2(fn, a, b);
	});
}

function lazy3(fn, a, b, c)
{
	return thunk(fn, [a,b,c], function() {
		return A3(fn, a, b, c);
	});
}



// FACTS


function organizeFacts(factList)
{
	var namespace, facts = {};

	while (factList.ctor !== '[]')
	{
		var entry = factList._0;
		var key = entry.key;

		if (key === ATTR_KEY || key === ATTR_NS_KEY || key === EVENT_KEY)
		{
			var subFacts = facts[key] || {};
			subFacts[entry.realKey] = entry.value;
			facts[key] = subFacts;
		}
		else if (key === STYLE_KEY)
		{
			var styles = facts[key] || {};
			var styleList = entry.value;
			while (styleList.ctor !== '[]')
			{
				var style = styleList._0;
				styles[style._0] = style._1;
				styleList = styleList._1;
			}
			facts[key] = styles;
		}
		else if (key === 'namespace')
		{
			namespace = entry.value;
		}
		else if (key === 'className')
		{
			var classes = facts[key];
			facts[key] = typeof classes === 'undefined'
				? entry.value
				: classes + ' ' + entry.value;
		}
 		else
		{
			facts[key] = entry.value;
		}
		factList = factList._1;
	}

	return {
		facts: facts,
		namespace: namespace
	};
}



////////////  PROPERTIES AND ATTRIBUTES  ////////////


function style(value)
{
	return {
		key: STYLE_KEY,
		value: value
	};
}


function property(key, value)
{
	return {
		key: key,
		value: value
	};
}


function attribute(key, value)
{
	return {
		key: ATTR_KEY,
		realKey: key,
		value: value
	};
}


function attributeNS(namespace, key, value)
{
	return {
		key: ATTR_NS_KEY,
		realKey: key,
		value: {
			value: value,
			namespace: namespace
		}
	};
}


function on(name, options, decoder)
{
	return {
		key: EVENT_KEY,
		realKey: name,
		value: {
			options: options,
			decoder: decoder
		}
	};
}


function equalEvents(a, b)
{
	if (a.options !== b.options)
	{
		if (a.options.stopPropagation !== b.options.stopPropagation || a.options.preventDefault !== b.options.preventDefault)
		{
			return false;
		}
	}
	return _elm_lang$core$Native_Json.equality(a.decoder, b.decoder);
}


function mapProperty(func, property)
{
	if (property.key !== EVENT_KEY)
	{
		return property;
	}
	return on(
		property.realKey,
		property.value.options,
		A2(_elm_lang$core$Json_Decode$map, func, property.value.decoder)
	);
}


////////////  RENDER  ////////////


function render(vNode, eventNode)
{
	switch (vNode.type)
	{
		case 'thunk':
			if (!vNode.node)
			{
				vNode.node = vNode.thunk();
			}
			return render(vNode.node, eventNode);

		case 'tagger':
			var subNode = vNode.node;
			var tagger = vNode.tagger;

			while (subNode.type === 'tagger')
			{
				typeof tagger !== 'object'
					? tagger = [tagger, subNode.tagger]
					: tagger.push(subNode.tagger);

				subNode = subNode.node;
			}

			var subEventRoot = { tagger: tagger, parent: eventNode };
			var domNode = render(subNode, subEventRoot);
			domNode.elm_event_node_ref = subEventRoot;
			return domNode;

		case 'text':
			return localDoc.createTextNode(vNode.text);

		case 'node':
			var domNode = vNode.namespace
				? localDoc.createElementNS(vNode.namespace, vNode.tag)
				: localDoc.createElement(vNode.tag);

			applyFacts(domNode, eventNode, vNode.facts);

			var children = vNode.children;

			for (var i = 0; i < children.length; i++)
			{
				domNode.appendChild(render(children[i], eventNode));
			}

			return domNode;

		case 'keyed-node':
			var domNode = vNode.namespace
				? localDoc.createElementNS(vNode.namespace, vNode.tag)
				: localDoc.createElement(vNode.tag);

			applyFacts(domNode, eventNode, vNode.facts);

			var children = vNode.children;

			for (var i = 0; i < children.length; i++)
			{
				domNode.appendChild(render(children[i]._1, eventNode));
			}

			return domNode;

		case 'custom':
			var domNode = vNode.impl.render(vNode.model);
			applyFacts(domNode, eventNode, vNode.facts);
			return domNode;
	}
}



////////////  APPLY FACTS  ////////////


function applyFacts(domNode, eventNode, facts)
{
	for (var key in facts)
	{
		var value = facts[key];

		switch (key)
		{
			case STYLE_KEY:
				applyStyles(domNode, value);
				break;

			case EVENT_KEY:
				applyEvents(domNode, eventNode, value);
				break;

			case ATTR_KEY:
				applyAttrs(domNode, value);
				break;

			case ATTR_NS_KEY:
				applyAttrsNS(domNode, value);
				break;

			case 'value':
				if (domNode[key] !== value)
				{
					domNode[key] = value;
				}
				break;

			default:
				domNode[key] = value;
				break;
		}
	}
}

function applyStyles(domNode, styles)
{
	var domNodeStyle = domNode.style;

	for (var key in styles)
	{
		domNodeStyle[key] = styles[key];
	}
}

function applyEvents(domNode, eventNode, events)
{
	var allHandlers = domNode.elm_handlers || {};

	for (var key in events)
	{
		var handler = allHandlers[key];
		var value = events[key];

		if (typeof value === 'undefined')
		{
			domNode.removeEventListener(key, handler);
			allHandlers[key] = undefined;
		}
		else if (typeof handler === 'undefined')
		{
			var handler = makeEventHandler(eventNode, value);
			domNode.addEventListener(key, handler);
			allHandlers[key] = handler;
		}
		else
		{
			handler.info = value;
		}
	}

	domNode.elm_handlers = allHandlers;
}

function makeEventHandler(eventNode, info)
{
	function eventHandler(event)
	{
		var info = eventHandler.info;

		var value = A2(_elm_lang$core$Native_Json.run, info.decoder, event);

		if (value.ctor === 'Ok')
		{
			var options = info.options;
			if (options.stopPropagation)
			{
				event.stopPropagation();
			}
			if (options.preventDefault)
			{
				event.preventDefault();
			}

			var message = value._0;

			var currentEventNode = eventNode;
			while (currentEventNode)
			{
				var tagger = currentEventNode.tagger;
				if (typeof tagger === 'function')
				{
					message = tagger(message);
				}
				else
				{
					for (var i = tagger.length; i--; )
					{
						message = tagger[i](message);
					}
				}
				currentEventNode = currentEventNode.parent;
			}
		}
	};

	eventHandler.info = info;

	return eventHandler;
}

function applyAttrs(domNode, attrs)
{
	for (var key in attrs)
	{
		var value = attrs[key];
		if (typeof value === 'undefined')
		{
			domNode.removeAttribute(key);
		}
		else
		{
			domNode.setAttribute(key, value);
		}
	}
}

function applyAttrsNS(domNode, nsAttrs)
{
	for (var key in nsAttrs)
	{
		var pair = nsAttrs[key];
		var namespace = pair.namespace;
		var value = pair.value;

		if (typeof value === 'undefined')
		{
			domNode.removeAttributeNS(namespace, key);
		}
		else
		{
			domNode.setAttributeNS(namespace, key, value);
		}
	}
}



////////////  DIFF  ////////////


function diff(a, b)
{
	var patches = [];
	diffHelp(a, b, patches, 0);
	return patches;
}


function makePatch(type, index, data)
{
	return {
		index: index,
		type: type,
		data: data,
		domNode: undefined,
		eventNode: undefined
	};
}


function diffHelp(a, b, patches, index)
{
	if (a === b)
	{
		return;
	}

	var aType = a.type;
	var bType = b.type;

	// Bail if you run into different types of nodes. Implies that the
	// structure has changed significantly and it's not worth a diff.
	if (aType !== bType)
	{
		patches.push(makePatch('p-redraw', index, b));
		return;
	}

	// Now we know that both nodes are the same type.
	switch (bType)
	{
		case 'thunk':
			var aArgs = a.args;
			var bArgs = b.args;
			var i = aArgs.length;
			var same = a.func === b.func && i === bArgs.length;
			while (same && i--)
			{
				same = aArgs[i] === bArgs[i];
			}
			if (same)
			{
				b.node = a.node;
				return;
			}
			b.node = b.thunk();
			var subPatches = [];
			diffHelp(a.node, b.node, subPatches, 0);
			if (subPatches.length > 0)
			{
				patches.push(makePatch('p-thunk', index, subPatches));
			}
			return;

		case 'tagger':
			// gather nested taggers
			var aTaggers = a.tagger;
			var bTaggers = b.tagger;
			var nesting = false;

			var aSubNode = a.node;
			while (aSubNode.type === 'tagger')
			{
				nesting = true;

				typeof aTaggers !== 'object'
					? aTaggers = [aTaggers, aSubNode.tagger]
					: aTaggers.push(aSubNode.tagger);

				aSubNode = aSubNode.node;
			}

			var bSubNode = b.node;
			while (bSubNode.type === 'tagger')
			{
				nesting = true;

				typeof bTaggers !== 'object'
					? bTaggers = [bTaggers, bSubNode.tagger]
					: bTaggers.push(bSubNode.tagger);

				bSubNode = bSubNode.node;
			}

			// Just bail if different numbers of taggers. This implies the
			// structure of the virtual DOM has changed.
			if (nesting && aTaggers.length !== bTaggers.length)
			{
				patches.push(makePatch('p-redraw', index, b));
				return;
			}

			// check if taggers are "the same"
			if (nesting ? !pairwiseRefEqual(aTaggers, bTaggers) : aTaggers !== bTaggers)
			{
				patches.push(makePatch('p-tagger', index, bTaggers));
			}

			// diff everything below the taggers
			diffHelp(aSubNode, bSubNode, patches, index + 1);
			return;

		case 'text':
			if (a.text !== b.text)
			{
				patches.push(makePatch('p-text', index, b.text));
				return;
			}

			return;

		case 'node':
			// Bail if obvious indicators have changed. Implies more serious
			// structural changes such that it's not worth it to diff.
			if (a.tag !== b.tag || a.namespace !== b.namespace)
			{
				patches.push(makePatch('p-redraw', index, b));
				return;
			}

			var factsDiff = diffFacts(a.facts, b.facts);

			if (typeof factsDiff !== 'undefined')
			{
				patches.push(makePatch('p-facts', index, factsDiff));
			}

			diffChildren(a, b, patches, index);
			return;

		case 'keyed-node':
			// Bail if obvious indicators have changed. Implies more serious
			// structural changes such that it's not worth it to diff.
			if (a.tag !== b.tag || a.namespace !== b.namespace)
			{
				patches.push(makePatch('p-redraw', index, b));
				return;
			}

			var factsDiff = diffFacts(a.facts, b.facts);

			if (typeof factsDiff !== 'undefined')
			{
				patches.push(makePatch('p-facts', index, factsDiff));
			}

			diffKeyedChildren(a, b, patches, index);
			return;

		case 'custom':
			if (a.impl !== b.impl)
			{
				patches.push(makePatch('p-redraw', index, b));
				return;
			}

			var factsDiff = diffFacts(a.facts, b.facts);
			if (typeof factsDiff !== 'undefined')
			{
				patches.push(makePatch('p-facts', index, factsDiff));
			}

			var patch = b.impl.diff(a,b);
			if (patch)
			{
				patches.push(makePatch('p-custom', index, patch));
				return;
			}

			return;
	}
}


// assumes the incoming arrays are the same length
function pairwiseRefEqual(as, bs)
{
	for (var i = 0; i < as.length; i++)
	{
		if (as[i] !== bs[i])
		{
			return false;
		}
	}

	return true;
}


// TODO Instead of creating a new diff object, it's possible to just test if
// there *is* a diff. During the actual patch, do the diff again and make the
// modifications directly. This way, there's no new allocations. Worth it?
function diffFacts(a, b, category)
{
	var diff;

	// look for changes and removals
	for (var aKey in a)
	{
		if (aKey === STYLE_KEY || aKey === EVENT_KEY || aKey === ATTR_KEY || aKey === ATTR_NS_KEY)
		{
			var subDiff = diffFacts(a[aKey], b[aKey] || {}, aKey);
			if (subDiff)
			{
				diff = diff || {};
				diff[aKey] = subDiff;
			}
			continue;
		}

		// remove if not in the new facts
		if (!(aKey in b))
		{
			diff = diff || {};
			diff[aKey] =
				(typeof category === 'undefined')
					? (typeof a[aKey] === 'string' ? '' : null)
					:
				(category === STYLE_KEY)
					? ''
					:
				(category === EVENT_KEY || category === ATTR_KEY)
					? undefined
					:
				{ namespace: a[aKey].namespace, value: undefined };

			continue;
		}

		var aValue = a[aKey];
		var bValue = b[aKey];

		// reference equal, so don't worry about it
		if (aValue === bValue && aKey !== 'value'
			|| category === EVENT_KEY && equalEvents(aValue, bValue))
		{
			continue;
		}

		diff = diff || {};
		diff[aKey] = bValue;
	}

	// add new stuff
	for (var bKey in b)
	{
		if (!(bKey in a))
		{
			diff = diff || {};
			diff[bKey] = b[bKey];
		}
	}

	return diff;
}


function diffChildren(aParent, bParent, patches, rootIndex)
{
	var aChildren = aParent.children;
	var bChildren = bParent.children;

	var aLen = aChildren.length;
	var bLen = bChildren.length;

	// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS

	if (aLen > bLen)
	{
		patches.push(makePatch('p-remove-last', rootIndex, aLen - bLen));
	}
	else if (aLen < bLen)
	{
		patches.push(makePatch('p-append', rootIndex, bChildren.slice(aLen)));
	}

	// PAIRWISE DIFF EVERYTHING ELSE

	var index = rootIndex;
	var minLen = aLen < bLen ? aLen : bLen;
	for (var i = 0; i < minLen; i++)
	{
		index++;
		var aChild = aChildren[i];
		diffHelp(aChild, bChildren[i], patches, index);
		index += aChild.descendantsCount || 0;
	}
}



////////////  KEYED DIFF  ////////////


function diffKeyedChildren(aParent, bParent, patches, rootIndex)
{
	var localPatches = [];

	var changes = {}; // Dict String Entry
	var inserts = []; // Array { index : Int, entry : Entry }
	// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }

	var aChildren = aParent.children;
	var bChildren = bParent.children;
	var aLen = aChildren.length;
	var bLen = bChildren.length;
	var aIndex = 0;
	var bIndex = 0;

	var index = rootIndex;

	while (aIndex < aLen && bIndex < bLen)
	{
		var a = aChildren[aIndex];
		var b = bChildren[bIndex];

		var aKey = a._0;
		var bKey = b._0;
		var aNode = a._1;
		var bNode = b._1;

		// check if keys match

		if (aKey === bKey)
		{
			index++;
			diffHelp(aNode, bNode, localPatches, index);
			index += aNode.descendantsCount || 0;

			aIndex++;
			bIndex++;
			continue;
		}

		// look ahead 1 to detect insertions and removals.

		var aLookAhead = aIndex + 1 < aLen;
		var bLookAhead = bIndex + 1 < bLen;

		if (aLookAhead)
		{
			var aNext = aChildren[aIndex + 1];
			var aNextKey = aNext._0;
			var aNextNode = aNext._1;
			var oldMatch = bKey === aNextKey;
		}

		if (bLookAhead)
		{
			var bNext = bChildren[bIndex + 1];
			var bNextKey = bNext._0;
			var bNextNode = bNext._1;
			var newMatch = aKey === bNextKey;
		}


		// swap a and b
		if (aLookAhead && bLookAhead && newMatch && oldMatch)
		{
			index++;
			diffHelp(aNode, bNextNode, localPatches, index);
			insertNode(changes, localPatches, aKey, bNode, bIndex, inserts);
			index += aNode.descendantsCount || 0;

			index++;
			removeNode(changes, localPatches, aKey, aNextNode, index);
			index += aNextNode.descendantsCount || 0;

			aIndex += 2;
			bIndex += 2;
			continue;
		}

		// insert b
		if (bLookAhead && newMatch)
		{
			index++;
			insertNode(changes, localPatches, bKey, bNode, bIndex, inserts);
			diffHelp(aNode, bNextNode, localPatches, index);
			index += aNode.descendantsCount || 0;

			aIndex += 1;
			bIndex += 2;
			continue;
		}

		// remove a
		if (aLookAhead && oldMatch)
		{
			index++;
			removeNode(changes, localPatches, aKey, aNode, index);
			index += aNode.descendantsCount || 0;

			index++;
			diffHelp(aNextNode, bNode, localPatches, index);
			index += aNextNode.descendantsCount || 0;

			aIndex += 2;
			bIndex += 1;
			continue;
		}

		// remove a, insert b
		if (aLookAhead && bLookAhead && aNextKey === bNextKey)
		{
			index++;
			removeNode(changes, localPatches, aKey, aNode, index);
			insertNode(changes, localPatches, bKey, bNode, bIndex, inserts);
			index += aNode.descendantsCount || 0;

			index++;
			diffHelp(aNextNode, bNextNode, localPatches, index);
			index += aNextNode.descendantsCount || 0;

			aIndex += 2;
			bIndex += 2;
			continue;
		}

		break;
	}

	// eat up any remaining nodes with removeNode and insertNode

	while (aIndex < aLen)
	{
		index++;
		var a = aChildren[aIndex];
		var aNode = a._1;
		removeNode(changes, localPatches, a._0, aNode, index);
		index += aNode.descendantsCount || 0;
		aIndex++;
	}

	var endInserts;
	while (bIndex < bLen)
	{
		endInserts = endInserts || [];
		var b = bChildren[bIndex];
		insertNode(changes, localPatches, b._0, b._1, undefined, endInserts);
		bIndex++;
	}

	if (localPatches.length > 0 || inserts.length > 0 || typeof endInserts !== 'undefined')
	{
		patches.push(makePatch('p-reorder', rootIndex, {
			patches: localPatches,
			inserts: inserts,
			endInserts: endInserts
		}));
	}
}



////////////  CHANGES FROM KEYED DIFF  ////////////


var POSTFIX = '_elmW6BL';


function insertNode(changes, localPatches, key, vnode, bIndex, inserts)
{
	var entry = changes[key];

	// never seen this key before
	if (typeof entry === 'undefined')
	{
		entry = {
			tag: 'insert',
			vnode: vnode,
			index: bIndex,
			data: undefined
		};

		inserts.push({ index: bIndex, entry: entry });
		changes[key] = entry;

		return;
	}

	// this key was removed earlier, a match!
	if (entry.tag === 'remove')
	{
		inserts.push({ index: bIndex, entry: entry });

		entry.tag = 'move';
		var subPatches = [];
		diffHelp(entry.vnode, vnode, subPatches, entry.index);
		entry.index = bIndex;
		entry.data.data = {
			patches: subPatches,
			entry: entry
		};

		return;
	}

	// this key has already been inserted or moved, a duplicate!
	insertNode(changes, localPatches, key + POSTFIX, vnode, bIndex, inserts);
}


function removeNode(changes, localPatches, key, vnode, index)
{
	var entry = changes[key];

	// never seen this key before
	if (typeof entry === 'undefined')
	{
		var patch = makePatch('p-remove', index, undefined);
		localPatches.push(patch);

		changes[key] = {
			tag: 'remove',
			vnode: vnode,
			index: index,
			data: patch
		};

		return;
	}

	// this key was inserted earlier, a match!
	if (entry.tag === 'insert')
	{
		entry.tag = 'move';
		var subPatches = [];
		diffHelp(vnode, entry.vnode, subPatches, index);

		var patch = makePatch('p-remove', index, {
			patches: subPatches,
			entry: entry
		});
		localPatches.push(patch);

		return;
	}

	// this key has already been removed or moved, a duplicate!
	removeNode(changes, localPatches, key + POSTFIX, vnode, index);
}



////////////  ADD DOM NODES  ////////////
//
// Each DOM node has an "index" assigned in order of traversal. It is important
// to minimize our crawl over the actual DOM, so these indexes (along with the
// descendantsCount of virtual nodes) let us skip touching entire subtrees of
// the DOM if we know there are no patches there.


function addDomNodes(domNode, vNode, patches, eventNode)
{
	addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.descendantsCount, eventNode);
}


// assumes `patches` is non-empty and indexes increase monotonically.
function addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)
{
	var patch = patches[i];
	var index = patch.index;

	while (index === low)
	{
		var patchType = patch.type;

		if (patchType === 'p-thunk')
		{
			addDomNodes(domNode, vNode.node, patch.data, eventNode);
		}
		else if (patchType === 'p-reorder')
		{
			patch.domNode = domNode;
			patch.eventNode = eventNode;

			var subPatches = patch.data.patches;
			if (subPatches.length > 0)
			{
				addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
			}
		}
		else if (patchType === 'p-remove')
		{
			patch.domNode = domNode;
			patch.eventNode = eventNode;

			var data = patch.data;
			if (typeof data !== 'undefined')
			{
				data.entry.data = domNode;
				var subPatches = data.patches;
				if (subPatches.length > 0)
				{
					addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
				}
			}
		}
		else
		{
			patch.domNode = domNode;
			patch.eventNode = eventNode;
		}

		i++;

		if (!(patch = patches[i]) || (index = patch.index) > high)
		{
			return i;
		}
	}

	switch (vNode.type)
	{
		case 'tagger':
			var subNode = vNode.node;

			while (subNode.type === "tagger")
			{
				subNode = subNode.node;
			}

			return addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);

		case 'node':
			var vChildren = vNode.children;
			var childNodes = domNode.childNodes;
			for (var j = 0; j < vChildren.length; j++)
			{
				low++;
				var vChild = vChildren[j];
				var nextLow = low + (vChild.descendantsCount || 0);
				if (low <= index && index <= nextLow)
				{
					i = addDomNodesHelp(childNodes[j], vChild, patches, i, low, nextLow, eventNode);
					if (!(patch = patches[i]) || (index = patch.index) > high)
					{
						return i;
					}
				}
				low = nextLow;
			}
			return i;

		case 'keyed-node':
			var vChildren = vNode.children;
			var childNodes = domNode.childNodes;
			for (var j = 0; j < vChildren.length; j++)
			{
				low++;
				var vChild = vChildren[j]._1;
				var nextLow = low + (vChild.descendantsCount || 0);
				if (low <= index && index <= nextLow)
				{
					i = addDomNodesHelp(childNodes[j], vChild, patches, i, low, nextLow, eventNode);
					if (!(patch = patches[i]) || (index = patch.index) > high)
					{
						return i;
					}
				}
				low = nextLow;
			}
			return i;

		case 'text':
		case 'thunk':
			throw new Error('should never traverse `text` or `thunk` nodes like this');
	}
}



////////////  APPLY PATCHES  ////////////


function applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)
{
	if (patches.length === 0)
	{
		return rootDomNode;
	}

	addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);
	return applyPatchesHelp(rootDomNode, patches);
}

function applyPatchesHelp(rootDomNode, patches)
{
	for (var i = 0; i < patches.length; i++)
	{
		var patch = patches[i];
		var localDomNode = patch.domNode
		var newNode = applyPatch(localDomNode, patch);
		if (localDomNode === rootDomNode)
		{
			rootDomNode = newNode;
		}
	}
	return rootDomNode;
}

function applyPatch(domNode, patch)
{
	switch (patch.type)
	{
		case 'p-redraw':
			return applyPatchRedraw(domNode, patch.data, patch.eventNode);

		case 'p-facts':
			applyFacts(domNode, patch.eventNode, patch.data);
			return domNode;

		case 'p-text':
			domNode.replaceData(0, domNode.length, patch.data);
			return domNode;

		case 'p-thunk':
			return applyPatchesHelp(domNode, patch.data);

		case 'p-tagger':
			if (typeof domNode.elm_event_node_ref !== 'undefined')
			{
				domNode.elm_event_node_ref.tagger = patch.data;
			}
			else
			{
				domNode.elm_event_node_ref = { tagger: patch.data, parent: patch.eventNode };
			}
			return domNode;

		case 'p-remove-last':
			var i = patch.data;
			while (i--)
			{
				domNode.removeChild(domNode.lastChild);
			}
			return domNode;

		case 'p-append':
			var newNodes = patch.data;
			for (var i = 0; i < newNodes.length; i++)
			{
				domNode.appendChild(render(newNodes[i], patch.eventNode));
			}
			return domNode;

		case 'p-remove':
			var data = patch.data;
			if (typeof data === 'undefined')
			{
				domNode.parentNode.removeChild(domNode);
				return domNode;
			}
			var entry = data.entry;
			if (typeof entry.index !== 'undefined')
			{
				domNode.parentNode.removeChild(domNode);
			}
			entry.data = applyPatchesHelp(domNode, data.patches);
			return domNode;

		case 'p-reorder':
			return applyPatchReorder(domNode, patch);

		case 'p-custom':
			var impl = patch.data;
			return impl.applyPatch(domNode, impl.data);

		default:
			throw new Error('Ran into an unknown patch!');
	}
}


function applyPatchRedraw(domNode, vNode, eventNode)
{
	var parentNode = domNode.parentNode;
	var newNode = render(vNode, eventNode);

	if (typeof newNode.elm_event_node_ref === 'undefined')
	{
		newNode.elm_event_node_ref = domNode.elm_event_node_ref;
	}

	if (parentNode && newNode !== domNode)
	{
		parentNode.replaceChild(newNode, domNode);
	}
	return newNode;
}


function applyPatchReorder(domNode, patch)
{
	var data = patch.data;

	// remove end inserts
	var frag = applyPatchReorderEndInsertsHelp(data.endInserts, patch);

	// removals
	domNode = applyPatchesHelp(domNode, data.patches);

	// inserts
	var inserts = data.inserts;
	for (var i = 0; i < inserts.length; i++)
	{
		var insert = inserts[i];
		var entry = insert.entry;
		var node = entry.tag === 'move'
			? entry.data
			: render(entry.vnode, patch.eventNode);
		domNode.insertBefore(node, domNode.childNodes[insert.index]);
	}

	// add end inserts
	if (typeof frag !== 'undefined')
	{
		domNode.appendChild(frag);
	}

	return domNode;
}


function applyPatchReorderEndInsertsHelp(endInserts, patch)
{
	if (typeof endInserts === 'undefined')
	{
		return;
	}

	var frag = localDoc.createDocumentFragment();
	for (var i = 0; i < endInserts.length; i++)
	{
		var insert = endInserts[i];
		var entry = insert.entry;
		frag.appendChild(entry.tag === 'move'
			? entry.data
			: render(entry.vnode, patch.eventNode)
		);
	}
	return frag;
}


// PROGRAMS

var program = makeProgram(checkNoFlags);
var programWithFlags = makeProgram(checkYesFlags);

function makeProgram(flagChecker)
{
	return F2(function(debugWrap, impl)
	{
		return function(flagDecoder)
		{
			return function(object, moduleName, debugMetadata)
			{
				var checker = flagChecker(flagDecoder, moduleName);
				if (typeof debugMetadata === 'undefined')
				{
					normalSetup(impl, object, moduleName, checker);
				}
				else
				{
					debugSetup(A2(debugWrap, debugMetadata, impl), object, moduleName, checker);
				}
			};
		};
	});
}

function staticProgram(vNode)
{
	var nothing = _elm_lang$core$Native_Utils.Tuple2(
		_elm_lang$core$Native_Utils.Tuple0,
		_elm_lang$core$Platform_Cmd$none
	);
	return A2(program, _elm_lang$virtual_dom$VirtualDom_Debug$wrap, {
		init: nothing,
		view: function() { return vNode; },
		update: F2(function() { return nothing; }),
		subscriptions: function() { return _elm_lang$core$Platform_Sub$none; }
	})();
}


// FLAG CHECKERS

function checkNoFlags(flagDecoder, moduleName)
{
	return function(init, flags, domNode)
	{
		if (typeof flags === 'undefined')
		{
			return init;
		}

		var errorMessage =
			'The `' + moduleName + '` module does not need flags.\n'
			+ 'Initialize it with no arguments and you should be all set!';

		crash(errorMessage, domNode);
	};
}

function checkYesFlags(flagDecoder, moduleName)
{
	return function(init, flags, domNode)
	{
		if (typeof flagDecoder === 'undefined')
		{
			var errorMessage =
				'Are you trying to sneak a Never value into Elm? Trickster!\n'
				+ 'It looks like ' + moduleName + '.main is defined with `programWithFlags` but has type `Program Never`.\n'
				+ 'Use `program` instead if you do not want flags.'

			crash(errorMessage, domNode);
		}

		var result = A2(_elm_lang$core$Native_Json.run, flagDecoder, flags);
		if (result.ctor === 'Ok')
		{
			return init(result._0);
		}

		var errorMessage =
			'Trying to initialize the `' + moduleName + '` module with an unexpected flag.\n'
			+ 'I tried to convert it to an Elm value, but ran into this problem:\n\n'
			+ result._0;

		crash(errorMessage, domNode);
	};
}

function crash(errorMessage, domNode)
{
	if (domNode)
	{
		domNode.innerHTML =
			'<div style="padding-left:1em;">'
			+ '<h2 style="font-weight:normal;"><b>Oops!</b> Something went wrong when starting your Elm program.</h2>'
			+ '<pre style="padding-left:1em;">' + errorMessage + '</pre>'
			+ '</div>';
	}

	throw new Error(errorMessage);
}


//  NORMAL SETUP

function normalSetup(impl, object, moduleName, flagChecker)
{
	object['embed'] = function embed(node, flags)
	{
		while (node.lastChild)
		{
			node.removeChild(node.lastChild);
		}

		return _elm_lang$core$Native_Platform.initialize(
			flagChecker(impl.init, flags, node),
			impl.update,
			impl.subscriptions,
			normalRenderer(node, impl.view)
		);
	};

	object['fullscreen'] = function fullscreen(flags)
	{
		return _elm_lang$core$Native_Platform.initialize(
			flagChecker(impl.init, flags, document.body),
			impl.update,
			impl.subscriptions,
			normalRenderer(document.body, impl.view)
		);
	};
}

function normalRenderer(parentNode, view)
{
	return function(tagger, initialModel)
	{
		var eventNode = { tagger: tagger, parent: undefined };
		var initialVirtualNode = view(initialModel);
		var domNode = render(initialVirtualNode, eventNode);
		parentNode.appendChild(domNode);
		return makeStepper(domNode, view, initialVirtualNode, eventNode);
	};
}


// STEPPER

var rAF =
	typeof requestAnimationFrame !== 'undefined'
		? requestAnimationFrame
		: function(callback) { setTimeout(callback, 1000 / 60); };

function makeStepper(domNode, view, initialVirtualNode, eventNode)
{
	var state = 'NO_REQUEST';
	var currNode = initialVirtualNode;
	var nextModel;

	function updateIfNeeded()
	{
		switch (state)
		{
			case 'NO_REQUEST':
				throw new Error(
					'Unexpected draw callback.\n' +
					'Please report this to <https://github.com/elm-lang/virtual-dom/issues>.'
				);

			case 'PENDING_REQUEST':
				rAF(updateIfNeeded);
				state = 'EXTRA_REQUEST';

				var nextNode = view(nextModel);
				var patches = diff(currNode, nextNode);
				domNode = applyPatches(domNode, currNode, patches, eventNode);
				currNode = nextNode;

				return;

			case 'EXTRA_REQUEST':
				state = 'NO_REQUEST';
				return;
		}
	}

	return function stepper(model)
	{
		if (state === 'NO_REQUEST')
		{
			rAF(updateIfNeeded);
		}
		state = 'PENDING_REQUEST';
		nextModel = model;
	};
}


// DEBUG SETUP

function debugSetup(impl, object, moduleName, flagChecker)
{
	object['fullscreen'] = function fullscreen(flags)
	{
		var popoutRef = { doc: undefined };
		return _elm_lang$core$Native_Platform.initialize(
			flagChecker(impl.init, flags, document.body),
			impl.update(scrollTask(popoutRef)),
			impl.subscriptions,
			debugRenderer(moduleName, document.body, popoutRef, impl.view, impl.viewIn, impl.viewOut)
		);
	};

	object['embed'] = function fullscreen(node, flags)
	{
		var popoutRef = { doc: undefined };
		return _elm_lang$core$Native_Platform.initialize(
			flagChecker(impl.init, flags, node),
			impl.update(scrollTask(popoutRef)),
			impl.subscriptions,
			debugRenderer(moduleName, node, popoutRef, impl.view, impl.viewIn, impl.viewOut)
		);
	};
}

function scrollTask(popoutRef)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		var doc = popoutRef.doc;
		if (doc)
		{
			var msgs = doc.getElementsByClassName('debugger-sidebar-messages')[0];
			if (msgs)
			{
				msgs.scrollTop = msgs.scrollHeight;
			}
		}
		callback(_elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Native_Utils.Tuple0));
	});
}


function debugRenderer(moduleName, parentNode, popoutRef, view, viewIn, viewOut)
{
	return function(tagger, initialModel)
	{
		var appEventNode = { tagger: tagger, parent: undefined };
		var eventNode = { tagger: tagger, parent: undefined };

		// make normal stepper
		var appVirtualNode = view(initialModel);
		var appNode = render(appVirtualNode, appEventNode);
		parentNode.appendChild(appNode);
		var appStepper = makeStepper(appNode, view, appVirtualNode, appEventNode);

		// make overlay stepper
		var overVirtualNode = viewIn(initialModel)._1;
		var overNode = render(overVirtualNode, eventNode);
		parentNode.appendChild(overNode);
		var wrappedViewIn = wrapViewIn(appEventNode, overNode, viewIn);
		var overStepper = makeStepper(overNode, wrappedViewIn, overVirtualNode, eventNode);

		// make debugger stepper
		var debugStepper = makeDebugStepper(initialModel, viewOut, eventNode, parentNode, moduleName, popoutRef);

		return function stepper(model)
		{
			appStepper(model);
			overStepper(model);
			debugStepper(model);
		}
	};
}

function makeDebugStepper(initialModel, view, eventNode, parentNode, moduleName, popoutRef)
{
	var curr;
	var domNode;

	return function stepper(model)
	{
		if (!model.isDebuggerOpen)
		{
			return;
		}

		if (!popoutRef.doc)
		{
			curr = view(model);
			domNode = openDebugWindow(moduleName, popoutRef, curr, eventNode);
			return;
		}

		// switch to document of popout
		localDoc = popoutRef.doc;

		var next = view(model);
		var patches = diff(curr, next);
		domNode = applyPatches(domNode, curr, patches, eventNode);
		curr = next;

		// switch back to normal document
		localDoc = document;
	};
}

function openDebugWindow(moduleName, popoutRef, virtualNode, eventNode)
{
	var w = 900;
	var h = 360;
	var x = screen.width - w;
	var y = screen.height - h;
	var debugWindow = window.open('', '', 'width=' + w + ',height=' + h + ',left=' + x + ',top=' + y);

	// switch to window document
	localDoc = debugWindow.document;

	popoutRef.doc = localDoc;
	localDoc.title = 'Debugger - ' + moduleName;
	localDoc.body.style.margin = '0';
	localDoc.body.style.padding = '0';
	var domNode = render(virtualNode, eventNode);
	localDoc.body.appendChild(domNode);

	localDoc.addEventListener('keydown', function(event) {
		if (event.metaKey && event.which === 82)
		{
			window.location.reload();
		}
		if (event.which === 38)
		{
			eventNode.tagger({ ctor: 'Up' });
			event.preventDefault();
		}
		if (event.which === 40)
		{
			eventNode.tagger({ ctor: 'Down' });
			event.preventDefault();
		}
	});

	function close()
	{
		popoutRef.doc = undefined;
		debugWindow.close();
	}
	window.addEventListener('unload', close);
	debugWindow.addEventListener('unload', function() {
		popoutRef.doc = undefined;
		window.removeEventListener('unload', close);
		eventNode.tagger({ ctor: 'Close' });
	});

	// switch back to the normal document
	localDoc = document;

	return domNode;
}


// BLOCK EVENTS

function wrapViewIn(appEventNode, overlayNode, viewIn)
{
	var ignorer = makeIgnorer(overlayNode);
	var blocking = 'Normal';
	var overflow;

	var normalTagger = appEventNode.tagger;
	var blockTagger = function() {};

	return function(model)
	{
		var tuple = viewIn(model);
		var newBlocking = tuple._0.ctor;
		appEventNode.tagger = newBlocking === 'Normal' ? normalTagger : blockTagger;
		if (blocking !== newBlocking)
		{
			traverse('removeEventListener', ignorer, blocking);
			traverse('addEventListener', ignorer, newBlocking);

			if (blocking === 'Normal')
			{
				overflow = document.body.style.overflow;
				document.body.style.overflow = 'hidden';
			}

			if (newBlocking === 'Normal')
			{
				document.body.style.overflow = overflow;
			}

			blocking = newBlocking;
		}
		return tuple._1;
	}
}

function traverse(verbEventListener, ignorer, blocking)
{
	switch(blocking)
	{
		case 'Normal':
			return;

		case 'Pause':
			return traverseHelp(verbEventListener, ignorer, mostEvents);

		case 'Message':
			return traverseHelp(verbEventListener, ignorer, allEvents);
	}
}

function traverseHelp(verbEventListener, handler, eventNames)
{
	for (var i = 0; i < eventNames.length; i++)
	{
		document.body[verbEventListener](eventNames[i], handler, true);
	}
}

function makeIgnorer(overlayNode)
{
	return function(event)
	{
		if (event.type === 'keydown' && event.metaKey && event.which === 82)
		{
			return;
		}

		var isScroll = event.type === 'scroll' || event.type === 'wheel';

		var node = event.target;
		while (node !== null)
		{
			if (node.className === 'elm-overlay-message-details' && isScroll)
			{
				return;
			}

			if (node === overlayNode && !isScroll)
			{
				return;
			}
			node = node.parentNode;
		}

		event.stopPropagation();
		event.preventDefault();
	}
}

var mostEvents = [
	'click', 'dblclick', 'mousemove',
	'mouseup', 'mousedown', 'mouseenter', 'mouseleave',
	'touchstart', 'touchend', 'touchcancel', 'touchmove',
	'pointerdown', 'pointerup', 'pointerover', 'pointerout',
	'pointerenter', 'pointerleave', 'pointermove', 'pointercancel',
	'dragstart', 'drag', 'dragend', 'dragenter', 'dragover', 'dragleave', 'drop',
	'keyup', 'keydown', 'keypress',
	'input', 'change',
	'focus', 'blur'
];

var allEvents = mostEvents.concat('wheel', 'scroll');


return {
	node: node,
	text: text,
	custom: custom,
	map: F2(map),

	on: F3(on),
	style: style,
	property: F2(property),
	attribute: F2(attribute),
	attributeNS: F3(attributeNS),
	mapProperty: F2(mapProperty),

	lazy: F2(lazy),
	lazy2: F3(lazy2),
	lazy3: F4(lazy3),
	keyedNode: F3(keyedNode),

	program: program,
	programWithFlags: programWithFlags,
	staticProgram: staticProgram
};

}();

var _elm_lang$virtual_dom$VirtualDom$programWithFlags = function (impl) {
	return A2(_elm_lang$virtual_dom$Native_VirtualDom.programWithFlags, _elm_lang$virtual_dom$VirtualDom_Debug$wrapWithFlags, impl);
};
var _elm_lang$virtual_dom$VirtualDom$program = function (impl) {
	return A2(_elm_lang$virtual_dom$Native_VirtualDom.program, _elm_lang$virtual_dom$VirtualDom_Debug$wrap, impl);
};
var _elm_lang$virtual_dom$VirtualDom$keyedNode = _elm_lang$virtual_dom$Native_VirtualDom.keyedNode;
var _elm_lang$virtual_dom$VirtualDom$lazy3 = _elm_lang$virtual_dom$Native_VirtualDom.lazy3;
var _elm_lang$virtual_dom$VirtualDom$lazy2 = _elm_lang$virtual_dom$Native_VirtualDom.lazy2;
var _elm_lang$virtual_dom$VirtualDom$lazy = _elm_lang$virtual_dom$Native_VirtualDom.lazy;
var _elm_lang$virtual_dom$VirtualDom$defaultOptions = {stopPropagation: false, preventDefault: false};
var _elm_lang$virtual_dom$VirtualDom$onWithOptions = _elm_lang$virtual_dom$Native_VirtualDom.on;
var _elm_lang$virtual_dom$VirtualDom$on = F2(
	function (eventName, decoder) {
		return A3(_elm_lang$virtual_dom$VirtualDom$onWithOptions, eventName, _elm_lang$virtual_dom$VirtualDom$defaultOptions, decoder);
	});
var _elm_lang$virtual_dom$VirtualDom$style = _elm_lang$virtual_dom$Native_VirtualDom.style;
var _elm_lang$virtual_dom$VirtualDom$mapProperty = _elm_lang$virtual_dom$Native_VirtualDom.mapProperty;
var _elm_lang$virtual_dom$VirtualDom$attributeNS = _elm_lang$virtual_dom$Native_VirtualDom.attributeNS;
var _elm_lang$virtual_dom$VirtualDom$attribute = _elm_lang$virtual_dom$Native_VirtualDom.attribute;
var _elm_lang$virtual_dom$VirtualDom$property = _elm_lang$virtual_dom$Native_VirtualDom.property;
var _elm_lang$virtual_dom$VirtualDom$map = _elm_lang$virtual_dom$Native_VirtualDom.map;
var _elm_lang$virtual_dom$VirtualDom$text = _elm_lang$virtual_dom$Native_VirtualDom.text;
var _elm_lang$virtual_dom$VirtualDom$node = _elm_lang$virtual_dom$Native_VirtualDom.node;
var _elm_lang$virtual_dom$VirtualDom$Options = F2(
	function (a, b) {
		return {stopPropagation: a, preventDefault: b};
	});
var _elm_lang$virtual_dom$VirtualDom$Node = {ctor: 'Node'};
var _elm_lang$virtual_dom$VirtualDom$Property = {ctor: 'Property'};

var _elm_lang$html$Html$programWithFlags = _elm_lang$virtual_dom$VirtualDom$programWithFlags;
var _elm_lang$html$Html$program = _elm_lang$virtual_dom$VirtualDom$program;
var _elm_lang$html$Html$beginnerProgram = function (_p0) {
	var _p1 = _p0;
	return _elm_lang$html$Html$program(
		{
			init: A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_p1.model,
				{ctor: '[]'}),
			update: F2(
				function (msg, model) {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						A2(_p1.update, msg, model),
						{ctor: '[]'});
				}),
			view: _p1.view,
			subscriptions: function (_p2) {
				return _elm_lang$core$Platform_Sub$none;
			}
		});
};
var _elm_lang$html$Html$map = _elm_lang$virtual_dom$VirtualDom$map;
var _elm_lang$html$Html$text = _elm_lang$virtual_dom$VirtualDom$text;
var _elm_lang$html$Html$node = _elm_lang$virtual_dom$VirtualDom$node;
var _elm_lang$html$Html$body = _elm_lang$html$Html$node('body');
var _elm_lang$html$Html$section = _elm_lang$html$Html$node('section');
var _elm_lang$html$Html$nav = _elm_lang$html$Html$node('nav');
var _elm_lang$html$Html$article = _elm_lang$html$Html$node('article');
var _elm_lang$html$Html$aside = _elm_lang$html$Html$node('aside');
var _elm_lang$html$Html$h1 = _elm_lang$html$Html$node('h1');
var _elm_lang$html$Html$h2 = _elm_lang$html$Html$node('h2');
var _elm_lang$html$Html$h3 = _elm_lang$html$Html$node('h3');
var _elm_lang$html$Html$h4 = _elm_lang$html$Html$node('h4');
var _elm_lang$html$Html$h5 = _elm_lang$html$Html$node('h5');
var _elm_lang$html$Html$h6 = _elm_lang$html$Html$node('h6');
var _elm_lang$html$Html$header = _elm_lang$html$Html$node('header');
var _elm_lang$html$Html$footer = _elm_lang$html$Html$node('footer');
var _elm_lang$html$Html$address = _elm_lang$html$Html$node('address');
var _elm_lang$html$Html$main_ = _elm_lang$html$Html$node('main');
var _elm_lang$html$Html$p = _elm_lang$html$Html$node('p');
var _elm_lang$html$Html$hr = _elm_lang$html$Html$node('hr');
var _elm_lang$html$Html$pre = _elm_lang$html$Html$node('pre');
var _elm_lang$html$Html$blockquote = _elm_lang$html$Html$node('blockquote');
var _elm_lang$html$Html$ol = _elm_lang$html$Html$node('ol');
var _elm_lang$html$Html$ul = _elm_lang$html$Html$node('ul');
var _elm_lang$html$Html$li = _elm_lang$html$Html$node('li');
var _elm_lang$html$Html$dl = _elm_lang$html$Html$node('dl');
var _elm_lang$html$Html$dt = _elm_lang$html$Html$node('dt');
var _elm_lang$html$Html$dd = _elm_lang$html$Html$node('dd');
var _elm_lang$html$Html$figure = _elm_lang$html$Html$node('figure');
var _elm_lang$html$Html$figcaption = _elm_lang$html$Html$node('figcaption');
var _elm_lang$html$Html$div = _elm_lang$html$Html$node('div');
var _elm_lang$html$Html$a = _elm_lang$html$Html$node('a');
var _elm_lang$html$Html$em = _elm_lang$html$Html$node('em');
var _elm_lang$html$Html$strong = _elm_lang$html$Html$node('strong');
var _elm_lang$html$Html$small = _elm_lang$html$Html$node('small');
var _elm_lang$html$Html$s = _elm_lang$html$Html$node('s');
var _elm_lang$html$Html$cite = _elm_lang$html$Html$node('cite');
var _elm_lang$html$Html$q = _elm_lang$html$Html$node('q');
var _elm_lang$html$Html$dfn = _elm_lang$html$Html$node('dfn');
var _elm_lang$html$Html$abbr = _elm_lang$html$Html$node('abbr');
var _elm_lang$html$Html$time = _elm_lang$html$Html$node('time');
var _elm_lang$html$Html$code = _elm_lang$html$Html$node('code');
var _elm_lang$html$Html$var = _elm_lang$html$Html$node('var');
var _elm_lang$html$Html$samp = _elm_lang$html$Html$node('samp');
var _elm_lang$html$Html$kbd = _elm_lang$html$Html$node('kbd');
var _elm_lang$html$Html$sub = _elm_lang$html$Html$node('sub');
var _elm_lang$html$Html$sup = _elm_lang$html$Html$node('sup');
var _elm_lang$html$Html$i = _elm_lang$html$Html$node('i');
var _elm_lang$html$Html$b = _elm_lang$html$Html$node('b');
var _elm_lang$html$Html$u = _elm_lang$html$Html$node('u');
var _elm_lang$html$Html$mark = _elm_lang$html$Html$node('mark');
var _elm_lang$html$Html$ruby = _elm_lang$html$Html$node('ruby');
var _elm_lang$html$Html$rt = _elm_lang$html$Html$node('rt');
var _elm_lang$html$Html$rp = _elm_lang$html$Html$node('rp');
var _elm_lang$html$Html$bdi = _elm_lang$html$Html$node('bdi');
var _elm_lang$html$Html$bdo = _elm_lang$html$Html$node('bdo');
var _elm_lang$html$Html$span = _elm_lang$html$Html$node('span');
var _elm_lang$html$Html$br = _elm_lang$html$Html$node('br');
var _elm_lang$html$Html$wbr = _elm_lang$html$Html$node('wbr');
var _elm_lang$html$Html$ins = _elm_lang$html$Html$node('ins');
var _elm_lang$html$Html$del = _elm_lang$html$Html$node('del');
var _elm_lang$html$Html$img = _elm_lang$html$Html$node('img');
var _elm_lang$html$Html$iframe = _elm_lang$html$Html$node('iframe');
var _elm_lang$html$Html$embed = _elm_lang$html$Html$node('embed');
var _elm_lang$html$Html$object = _elm_lang$html$Html$node('object');
var _elm_lang$html$Html$param = _elm_lang$html$Html$node('param');
var _elm_lang$html$Html$video = _elm_lang$html$Html$node('video');
var _elm_lang$html$Html$audio = _elm_lang$html$Html$node('audio');
var _elm_lang$html$Html$source = _elm_lang$html$Html$node('source');
var _elm_lang$html$Html$track = _elm_lang$html$Html$node('track');
var _elm_lang$html$Html$canvas = _elm_lang$html$Html$node('canvas');
var _elm_lang$html$Html$math = _elm_lang$html$Html$node('math');
var _elm_lang$html$Html$table = _elm_lang$html$Html$node('table');
var _elm_lang$html$Html$caption = _elm_lang$html$Html$node('caption');
var _elm_lang$html$Html$colgroup = _elm_lang$html$Html$node('colgroup');
var _elm_lang$html$Html$col = _elm_lang$html$Html$node('col');
var _elm_lang$html$Html$tbody = _elm_lang$html$Html$node('tbody');
var _elm_lang$html$Html$thead = _elm_lang$html$Html$node('thead');
var _elm_lang$html$Html$tfoot = _elm_lang$html$Html$node('tfoot');
var _elm_lang$html$Html$tr = _elm_lang$html$Html$node('tr');
var _elm_lang$html$Html$td = _elm_lang$html$Html$node('td');
var _elm_lang$html$Html$th = _elm_lang$html$Html$node('th');
var _elm_lang$html$Html$form = _elm_lang$html$Html$node('form');
var _elm_lang$html$Html$fieldset = _elm_lang$html$Html$node('fieldset');
var _elm_lang$html$Html$legend = _elm_lang$html$Html$node('legend');
var _elm_lang$html$Html$label = _elm_lang$html$Html$node('label');
var _elm_lang$html$Html$input = _elm_lang$html$Html$node('input');
var _elm_lang$html$Html$button = _elm_lang$html$Html$node('button');
var _elm_lang$html$Html$select = _elm_lang$html$Html$node('select');
var _elm_lang$html$Html$datalist = _elm_lang$html$Html$node('datalist');
var _elm_lang$html$Html$optgroup = _elm_lang$html$Html$node('optgroup');
var _elm_lang$html$Html$option = _elm_lang$html$Html$node('option');
var _elm_lang$html$Html$textarea = _elm_lang$html$Html$node('textarea');
var _elm_lang$html$Html$keygen = _elm_lang$html$Html$node('keygen');
var _elm_lang$html$Html$output = _elm_lang$html$Html$node('output');
var _elm_lang$html$Html$progress = _elm_lang$html$Html$node('progress');
var _elm_lang$html$Html$meter = _elm_lang$html$Html$node('meter');
var _elm_lang$html$Html$details = _elm_lang$html$Html$node('details');
var _elm_lang$html$Html$summary = _elm_lang$html$Html$node('summary');
var _elm_lang$html$Html$menuitem = _elm_lang$html$Html$node('menuitem');
var _elm_lang$html$Html$menu = _elm_lang$html$Html$node('menu');

var _elm_lang$html$Html_Attributes$map = _elm_lang$virtual_dom$VirtualDom$mapProperty;
var _elm_lang$html$Html_Attributes$attribute = _elm_lang$virtual_dom$VirtualDom$attribute;
var _elm_lang$html$Html_Attributes$contextmenu = function (value) {
	return A2(_elm_lang$html$Html_Attributes$attribute, 'contextmenu', value);
};
var _elm_lang$html$Html_Attributes$draggable = function (value) {
	return A2(_elm_lang$html$Html_Attributes$attribute, 'draggable', value);
};
var _elm_lang$html$Html_Attributes$itemprop = function (value) {
	return A2(_elm_lang$html$Html_Attributes$attribute, 'itemprop', value);
};
var _elm_lang$html$Html_Attributes$tabindex = function (n) {
	return A2(
		_elm_lang$html$Html_Attributes$attribute,
		'tabIndex',
		_elm_lang$core$Basics$toString(n));
};
var _elm_lang$html$Html_Attributes$charset = function (value) {
	return A2(_elm_lang$html$Html_Attributes$attribute, 'charset', value);
};
var _elm_lang$html$Html_Attributes$height = function (value) {
	return A2(
		_elm_lang$html$Html_Attributes$attribute,
		'height',
		_elm_lang$core$Basics$toString(value));
};
var _elm_lang$html$Html_Attributes$width = function (value) {
	return A2(
		_elm_lang$html$Html_Attributes$attribute,
		'width',
		_elm_lang$core$Basics$toString(value));
};
var _elm_lang$html$Html_Attributes$formaction = function (value) {
	return A2(_elm_lang$html$Html_Attributes$attribute, 'formAction', value);
};
var _elm_lang$html$Html_Attributes$list = function (value) {
	return A2(_elm_lang$html$Html_Attributes$attribute, 'list', value);
};
var _elm_lang$html$Html_Attributes$minlength = function (n) {
	return A2(
		_elm_lang$html$Html_Attributes$attribute,
		'minLength',
		_elm_lang$core$Basics$toString(n));
};
var _elm_lang$html$Html_Attributes$maxlength = function (n) {
	return A2(
		_elm_lang$html$Html_Attributes$attribute,
		'maxlength',
		_elm_lang$core$Basics$toString(n));
};
var _elm_lang$html$Html_Attributes$size = function (n) {
	return A2(
		_elm_lang$html$Html_Attributes$attribute,
		'size',
		_elm_lang$core$Basics$toString(n));
};
var _elm_lang$html$Html_Attributes$form = function (value) {
	return A2(_elm_lang$html$Html_Attributes$attribute, 'form', value);
};
var _elm_lang$html$Html_Attributes$cols = function (n) {
	return A2(
		_elm_lang$html$Html_Attributes$attribute,
		'cols',
		_elm_lang$core$Basics$toString(n));
};
var _elm_lang$html$Html_Attributes$rows = function (n) {
	return A2(
		_elm_lang$html$Html_Attributes$attribute,
		'rows',
		_elm_lang$core$Basics$toString(n));
};
var _elm_lang$html$Html_Attributes$challenge = function (value) {
	return A2(_elm_lang$html$Html_Attributes$attribute, 'challenge', value);
};
var _elm_lang$html$Html_Attributes$media = function (value) {
	return A2(_elm_lang$html$Html_Attributes$attribute, 'media', value);
};
var _elm_lang$html$Html_Attributes$rel = function (value) {
	return A2(_elm_lang$html$Html_Attributes$attribute, 'rel', value);
};
var _elm_lang$html$Html_Attributes$datetime = function (value) {
	return A2(_elm_lang$html$Html_Attributes$attribute, 'datetime', value);
};
var _elm_lang$html$Html_Attributes$pubdate = function (value) {
	return A2(_elm_lang$html$Html_Attributes$attribute, 'pubdate', value);
};
var _elm_lang$html$Html_Attributes$colspan = function (n) {
	return A2(
		_elm_lang$html$Html_Attributes$attribute,
		'colspan',
		_elm_lang$core$Basics$toString(n));
};
var _elm_lang$html$Html_Attributes$rowspan = function (n) {
	return A2(
		_elm_lang$html$Html_Attributes$attribute,
		'rowspan',
		_elm_lang$core$Basics$toString(n));
};
var _elm_lang$html$Html_Attributes$manifest = function (value) {
	return A2(_elm_lang$html$Html_Attributes$attribute, 'manifest', value);
};
var _elm_lang$html$Html_Attributes$property = _elm_lang$virtual_dom$VirtualDom$property;
var _elm_lang$html$Html_Attributes$stringProperty = F2(
	function (name, string) {
		return A2(
			_elm_lang$html$Html_Attributes$property,
			name,
			_elm_lang$core$Json_Encode$string(string));
	});
var _elm_lang$html$Html_Attributes$class = function (name) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'className', name);
};
var _elm_lang$html$Html_Attributes$id = function (name) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'id', name);
};
var _elm_lang$html$Html_Attributes$title = function (name) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'title', name);
};
var _elm_lang$html$Html_Attributes$accesskey = function ($char) {
	return A2(
		_elm_lang$html$Html_Attributes$stringProperty,
		'accessKey',
		_elm_lang$core$String$fromChar($char));
};
var _elm_lang$html$Html_Attributes$dir = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'dir', value);
};
var _elm_lang$html$Html_Attributes$dropzone = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'dropzone', value);
};
var _elm_lang$html$Html_Attributes$lang = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'lang', value);
};
var _elm_lang$html$Html_Attributes$content = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'content', value);
};
var _elm_lang$html$Html_Attributes$httpEquiv = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'httpEquiv', value);
};
var _elm_lang$html$Html_Attributes$language = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'language', value);
};
var _elm_lang$html$Html_Attributes$src = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'src', value);
};
var _elm_lang$html$Html_Attributes$alt = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'alt', value);
};
var _elm_lang$html$Html_Attributes$preload = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'preload', value);
};
var _elm_lang$html$Html_Attributes$poster = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'poster', value);
};
var _elm_lang$html$Html_Attributes$kind = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'kind', value);
};
var _elm_lang$html$Html_Attributes$srclang = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'srclang', value);
};
var _elm_lang$html$Html_Attributes$sandbox = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'sandbox', value);
};
var _elm_lang$html$Html_Attributes$srcdoc = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'srcdoc', value);
};
var _elm_lang$html$Html_Attributes$type_ = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'type', value);
};
var _elm_lang$html$Html_Attributes$value = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'value', value);
};
var _elm_lang$html$Html_Attributes$defaultValue = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'defaultValue', value);
};
var _elm_lang$html$Html_Attributes$placeholder = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'placeholder', value);
};
var _elm_lang$html$Html_Attributes$accept = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'accept', value);
};
var _elm_lang$html$Html_Attributes$acceptCharset = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'acceptCharset', value);
};
var _elm_lang$html$Html_Attributes$action = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'action', value);
};
var _elm_lang$html$Html_Attributes$autocomplete = function (bool) {
	return A2(
		_elm_lang$html$Html_Attributes$stringProperty,
		'autocomplete',
		bool ? 'on' : 'off');
};
var _elm_lang$html$Html_Attributes$enctype = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'enctype', value);
};
var _elm_lang$html$Html_Attributes$method = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'method', value);
};
var _elm_lang$html$Html_Attributes$name = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'name', value);
};
var _elm_lang$html$Html_Attributes$pattern = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'pattern', value);
};
var _elm_lang$html$Html_Attributes$for = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'htmlFor', value);
};
var _elm_lang$html$Html_Attributes$max = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'max', value);
};
var _elm_lang$html$Html_Attributes$min = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'min', value);
};
var _elm_lang$html$Html_Attributes$step = function (n) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'step', n);
};
var _elm_lang$html$Html_Attributes$wrap = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'wrap', value);
};
var _elm_lang$html$Html_Attributes$usemap = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'useMap', value);
};
var _elm_lang$html$Html_Attributes$shape = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'shape', value);
};
var _elm_lang$html$Html_Attributes$coords = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'coords', value);
};
var _elm_lang$html$Html_Attributes$keytype = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'keytype', value);
};
var _elm_lang$html$Html_Attributes$align = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'align', value);
};
var _elm_lang$html$Html_Attributes$cite = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'cite', value);
};
var _elm_lang$html$Html_Attributes$href = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'href', value);
};
var _elm_lang$html$Html_Attributes$target = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'target', value);
};
var _elm_lang$html$Html_Attributes$downloadAs = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'download', value);
};
var _elm_lang$html$Html_Attributes$hreflang = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'hreflang', value);
};
var _elm_lang$html$Html_Attributes$ping = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'ping', value);
};
var _elm_lang$html$Html_Attributes$start = function (n) {
	return A2(
		_elm_lang$html$Html_Attributes$stringProperty,
		'start',
		_elm_lang$core$Basics$toString(n));
};
var _elm_lang$html$Html_Attributes$headers = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'headers', value);
};
var _elm_lang$html$Html_Attributes$scope = function (value) {
	return A2(_elm_lang$html$Html_Attributes$stringProperty, 'scope', value);
};
var _elm_lang$html$Html_Attributes$boolProperty = F2(
	function (name, bool) {
		return A2(
			_elm_lang$html$Html_Attributes$property,
			name,
			_elm_lang$core$Json_Encode$bool(bool));
	});
var _elm_lang$html$Html_Attributes$hidden = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'hidden', bool);
};
var _elm_lang$html$Html_Attributes$contenteditable = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'contentEditable', bool);
};
var _elm_lang$html$Html_Attributes$spellcheck = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'spellcheck', bool);
};
var _elm_lang$html$Html_Attributes$async = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'async', bool);
};
var _elm_lang$html$Html_Attributes$defer = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'defer', bool);
};
var _elm_lang$html$Html_Attributes$scoped = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'scoped', bool);
};
var _elm_lang$html$Html_Attributes$autoplay = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'autoplay', bool);
};
var _elm_lang$html$Html_Attributes$controls = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'controls', bool);
};
var _elm_lang$html$Html_Attributes$loop = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'loop', bool);
};
var _elm_lang$html$Html_Attributes$default = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'default', bool);
};
var _elm_lang$html$Html_Attributes$seamless = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'seamless', bool);
};
var _elm_lang$html$Html_Attributes$checked = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'checked', bool);
};
var _elm_lang$html$Html_Attributes$selected = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'selected', bool);
};
var _elm_lang$html$Html_Attributes$autofocus = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'autofocus', bool);
};
var _elm_lang$html$Html_Attributes$disabled = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'disabled', bool);
};
var _elm_lang$html$Html_Attributes$multiple = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'multiple', bool);
};
var _elm_lang$html$Html_Attributes$novalidate = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'noValidate', bool);
};
var _elm_lang$html$Html_Attributes$readonly = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'readOnly', bool);
};
var _elm_lang$html$Html_Attributes$required = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'required', bool);
};
var _elm_lang$html$Html_Attributes$ismap = function (value) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'isMap', value);
};
var _elm_lang$html$Html_Attributes$download = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'download', bool);
};
var _elm_lang$html$Html_Attributes$reversed = function (bool) {
	return A2(_elm_lang$html$Html_Attributes$boolProperty, 'reversed', bool);
};
var _elm_lang$html$Html_Attributes$classList = function (list) {
	return _elm_lang$html$Html_Attributes$class(
		A2(
			_elm_lang$core$String$join,
			' ',
			A2(
				_elm_lang$core$List$map,
				_elm_lang$core$Tuple$first,
				A2(_elm_lang$core$List$filter, _elm_lang$core$Tuple$second, list))));
};
var _elm_lang$html$Html_Attributes$style = _elm_lang$virtual_dom$VirtualDom$style;

var _elm_lang$html$Html_Events$keyCode = A2(_elm_lang$core$Json_Decode$field, 'keyCode', _elm_lang$core$Json_Decode$int);
var _elm_lang$html$Html_Events$targetChecked = A2(
	_elm_lang$core$Json_Decode$at,
	{
		ctor: '::',
		_0: 'target',
		_1: {
			ctor: '::',
			_0: 'checked',
			_1: {ctor: '[]'}
		}
	},
	_elm_lang$core$Json_Decode$bool);
var _elm_lang$html$Html_Events$targetValue = A2(
	_elm_lang$core$Json_Decode$at,
	{
		ctor: '::',
		_0: 'target',
		_1: {
			ctor: '::',
			_0: 'value',
			_1: {ctor: '[]'}
		}
	},
	_elm_lang$core$Json_Decode$string);
var _elm_lang$html$Html_Events$defaultOptions = _elm_lang$virtual_dom$VirtualDom$defaultOptions;
var _elm_lang$html$Html_Events$onWithOptions = _elm_lang$virtual_dom$VirtualDom$onWithOptions;
var _elm_lang$html$Html_Events$on = _elm_lang$virtual_dom$VirtualDom$on;
var _elm_lang$html$Html_Events$onFocus = function (msg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'focus',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _elm_lang$html$Html_Events$onBlur = function (msg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'blur',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _elm_lang$html$Html_Events$onSubmitOptions = _elm_lang$core$Native_Utils.update(
	_elm_lang$html$Html_Events$defaultOptions,
	{preventDefault: true});
var _elm_lang$html$Html_Events$onSubmit = function (msg) {
	return A3(
		_elm_lang$html$Html_Events$onWithOptions,
		'submit',
		_elm_lang$html$Html_Events$onSubmitOptions,
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _elm_lang$html$Html_Events$onCheck = function (tagger) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'change',
		A2(_elm_lang$core$Json_Decode$map, tagger, _elm_lang$html$Html_Events$targetChecked));
};
var _elm_lang$html$Html_Events$onInput = function (tagger) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'input',
		A2(_elm_lang$core$Json_Decode$map, tagger, _elm_lang$html$Html_Events$targetValue));
};
var _elm_lang$html$Html_Events$onMouseOut = function (msg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'mouseout',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _elm_lang$html$Html_Events$onMouseOver = function (msg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'mouseover',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _elm_lang$html$Html_Events$onMouseLeave = function (msg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'mouseleave',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _elm_lang$html$Html_Events$onMouseEnter = function (msg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'mouseenter',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _elm_lang$html$Html_Events$onMouseUp = function (msg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'mouseup',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _elm_lang$html$Html_Events$onMouseDown = function (msg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'mousedown',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _elm_lang$html$Html_Events$onDoubleClick = function (msg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'dblclick',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _elm_lang$html$Html_Events$onClick = function (msg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'click',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _elm_lang$html$Html_Events$Options = F2(
	function (a, b) {
		return {stopPropagation: a, preventDefault: b};
	});

var _elm_lang$html$Html_Keyed$node = _elm_lang$virtual_dom$VirtualDom$keyedNode;
var _elm_lang$html$Html_Keyed$ol = _elm_lang$html$Html_Keyed$node('ol');
var _elm_lang$html$Html_Keyed$ul = _elm_lang$html$Html_Keyed$node('ul');

var _elm_lang$http$Native_Http = function() {


// ENCODING AND DECODING

function encodeUri(string)
{
	return encodeURIComponent(string);
}

function decodeUri(string)
{
	try
	{
		return _elm_lang$core$Maybe$Just(decodeURIComponent(string));
	}
	catch(e)
	{
		return _elm_lang$core$Maybe$Nothing;
	}
}


// SEND REQUEST

function toTask(request, maybeProgress)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		var xhr = new XMLHttpRequest();

		configureProgress(xhr, maybeProgress);

		xhr.addEventListener('error', function() {
			callback(_elm_lang$core$Native_Scheduler.fail({ ctor: 'NetworkError' }));
		});
		xhr.addEventListener('timeout', function() {
			callback(_elm_lang$core$Native_Scheduler.fail({ ctor: 'Timeout' }));
		});
		xhr.addEventListener('load', function() {
			callback(handleResponse(xhr, request.expect.responseToResult));
		});

		try
		{
			xhr.open(request.method, request.url, true);
		}
		catch (e)
		{
			return callback(_elm_lang$core$Native_Scheduler.fail({ ctor: 'BadUrl', _0: request.url }));
		}

		configureRequest(xhr, request);
		send(xhr, request.body);

		return function() { xhr.abort(); };
	});
}

function configureProgress(xhr, maybeProgress)
{
	if (maybeProgress.ctor === 'Nothing')
	{
		return;
	}

	xhr.addEventListener('progress', function(event) {
		if (!event.lengthComputable)
		{
			return;
		}
		_elm_lang$core$Native_Scheduler.rawSpawn(maybeProgress._0({
			bytes: event.loaded,
			bytesExpected: event.total
		}));
	});
}

function configureRequest(xhr, request)
{
	function setHeader(pair)
	{
		xhr.setRequestHeader(pair._0, pair._1);
	}

	A2(_elm_lang$core$List$map, setHeader, request.headers);
	xhr.responseType = request.expect.responseType;
	xhr.withCredentials = request.withCredentials;

	if (request.timeout.ctor === 'Just')
	{
		xhr.timeout = request.timeout._0;
	}
}

function send(xhr, body)
{
	switch (body.ctor)
	{
		case 'EmptyBody':
			xhr.send();
			return;

		case 'StringBody':
			xhr.setRequestHeader('Content-Type', body._0);
			xhr.send(body._1);
			return;

		case 'FormDataBody':
			xhr.send(body._0);
			return;
	}
}


// RESPONSES

function handleResponse(xhr, responseToResult)
{
	var response = toResponse(xhr);

	if (xhr.status < 200 || 300 <= xhr.status)
	{
		response.body = xhr.responseText;
		return _elm_lang$core$Native_Scheduler.fail({
			ctor: 'BadStatus',
			_0: response
		});
	}

	var result = responseToResult(response);

	if (result.ctor === 'Ok')
	{
		return _elm_lang$core$Native_Scheduler.succeed(result._0);
	}
	else
	{
		response.body = xhr.responseText;
		return _elm_lang$core$Native_Scheduler.fail({
			ctor: 'BadPayload',
			_0: result._0,
			_1: response
		});
	}
}

function toResponse(xhr)
{
	return {
		status: { code: xhr.status, message: xhr.statusText },
		headers: parseHeaders(xhr.getAllResponseHeaders()),
		url: xhr.responseURL,
		body: xhr.response
	};
}

function parseHeaders(rawHeaders)
{
	var headers = _elm_lang$core$Dict$empty;

	if (!rawHeaders)
	{
		return headers;
	}

	var headerPairs = rawHeaders.split('\u000d\u000a');
	for (var i = headerPairs.length; i--; )
	{
		var headerPair = headerPairs[i];
		var index = headerPair.indexOf('\u003a\u0020');
		if (index > 0)
		{
			var key = headerPair.substring(0, index);
			var value = headerPair.substring(index + 2);

			headers = A3(_elm_lang$core$Dict$update, key, function(oldValue) {
				if (oldValue.ctor === 'Just')
				{
					return _elm_lang$core$Maybe$Just(value + ', ' + oldValue._0);
				}
				return _elm_lang$core$Maybe$Just(value);
			}, headers);
		}
	}

	return headers;
}


// EXPECTORS

function expectStringResponse(responseToResult)
{
	return {
		responseType: 'text',
		responseToResult: responseToResult
	};
}

function mapExpect(func, expect)
{
	return {
		responseType: expect.responseType,
		responseToResult: function(response) {
			var convertedResponse = expect.responseToResult(response);
			return A2(_elm_lang$core$Result$map, func, convertedResponse);
		}
	};
}


// BODY

function multipart(parts)
{
	var formData = new FormData();

	while (parts.ctor !== '[]')
	{
		var part = parts._0;
		formData.append(part._0, part._1);
		parts = parts._1;
	}

	return { ctor: 'FormDataBody', _0: formData };
}

return {
	toTask: F2(toTask),
	expectStringResponse: expectStringResponse,
	mapExpect: F2(mapExpect),
	multipart: multipart,
	encodeUri: encodeUri,
	decodeUri: decodeUri
};

}();

var _elm_lang$http$Http_Internal$map = F2(
	function (func, request) {
		return _elm_lang$core$Native_Utils.update(
			request,
			{
				expect: A2(_elm_lang$http$Native_Http.mapExpect, func, request.expect)
			});
	});
var _elm_lang$http$Http_Internal$RawRequest = F7(
	function (a, b, c, d, e, f, g) {
		return {method: a, headers: b, url: c, body: d, expect: e, timeout: f, withCredentials: g};
	});
var _elm_lang$http$Http_Internal$Request = function (a) {
	return {ctor: 'Request', _0: a};
};
var _elm_lang$http$Http_Internal$Expect = {ctor: 'Expect'};
var _elm_lang$http$Http_Internal$FormDataBody = {ctor: 'FormDataBody'};
var _elm_lang$http$Http_Internal$StringBody = F2(
	function (a, b) {
		return {ctor: 'StringBody', _0: a, _1: b};
	});
var _elm_lang$http$Http_Internal$EmptyBody = {ctor: 'EmptyBody'};
var _elm_lang$http$Http_Internal$Header = F2(
	function (a, b) {
		return {ctor: 'Header', _0: a, _1: b};
	});

var _elm_lang$http$Http$decodeUri = _elm_lang$http$Native_Http.decodeUri;
var _elm_lang$http$Http$encodeUri = _elm_lang$http$Native_Http.encodeUri;
var _elm_lang$http$Http$expectStringResponse = _elm_lang$http$Native_Http.expectStringResponse;
var _elm_lang$http$Http$expectJson = function (decoder) {
	return _elm_lang$http$Http$expectStringResponse(
		function (response) {
			return A2(_elm_lang$core$Json_Decode$decodeString, decoder, response.body);
		});
};
var _elm_lang$http$Http$expectString = _elm_lang$http$Http$expectStringResponse(
	function (response) {
		return _elm_lang$core$Result$Ok(response.body);
	});
var _elm_lang$http$Http$multipartBody = _elm_lang$http$Native_Http.multipart;
var _elm_lang$http$Http$stringBody = _elm_lang$http$Http_Internal$StringBody;
var _elm_lang$http$Http$jsonBody = function (value) {
	return A2(
		_elm_lang$http$Http_Internal$StringBody,
		'application/json',
		A2(_elm_lang$core$Json_Encode$encode, 0, value));
};
var _elm_lang$http$Http$emptyBody = _elm_lang$http$Http_Internal$EmptyBody;
var _elm_lang$http$Http$header = _elm_lang$http$Http_Internal$Header;
var _elm_lang$http$Http$request = _elm_lang$http$Http_Internal$Request;
var _elm_lang$http$Http$post = F3(
	function (url, body, decoder) {
		return _elm_lang$http$Http$request(
			{
				method: 'POST',
				headers: {ctor: '[]'},
				url: url,
				body: body,
				expect: _elm_lang$http$Http$expectJson(decoder),
				timeout: _elm_lang$core$Maybe$Nothing,
				withCredentials: false
			});
	});
var _elm_lang$http$Http$get = F2(
	function (url, decoder) {
		return _elm_lang$http$Http$request(
			{
				method: 'GET',
				headers: {ctor: '[]'},
				url: url,
				body: _elm_lang$http$Http$emptyBody,
				expect: _elm_lang$http$Http$expectJson(decoder),
				timeout: _elm_lang$core$Maybe$Nothing,
				withCredentials: false
			});
	});
var _elm_lang$http$Http$getString = function (url) {
	return _elm_lang$http$Http$request(
		{
			method: 'GET',
			headers: {ctor: '[]'},
			url: url,
			body: _elm_lang$http$Http$emptyBody,
			expect: _elm_lang$http$Http$expectString,
			timeout: _elm_lang$core$Maybe$Nothing,
			withCredentials: false
		});
};
var _elm_lang$http$Http$toTask = function (_p0) {
	var _p1 = _p0;
	return A2(_elm_lang$http$Native_Http.toTask, _p1._0, _elm_lang$core$Maybe$Nothing);
};
var _elm_lang$http$Http$send = F2(
	function (resultToMessage, request) {
		return A2(
			_elm_lang$core$Task$attempt,
			resultToMessage,
			_elm_lang$http$Http$toTask(request));
	});
var _elm_lang$http$Http$Response = F4(
	function (a, b, c, d) {
		return {url: a, status: b, headers: c, body: d};
	});
var _elm_lang$http$Http$BadPayload = F2(
	function (a, b) {
		return {ctor: 'BadPayload', _0: a, _1: b};
	});
var _elm_lang$http$Http$BadStatus = function (a) {
	return {ctor: 'BadStatus', _0: a};
};
var _elm_lang$http$Http$NetworkError = {ctor: 'NetworkError'};
var _elm_lang$http$Http$Timeout = {ctor: 'Timeout'};
var _elm_lang$http$Http$BadUrl = function (a) {
	return {ctor: 'BadUrl', _0: a};
};
var _elm_lang$http$Http$StringPart = F2(
	function (a, b) {
		return {ctor: 'StringPart', _0: a, _1: b};
	});
var _elm_lang$http$Http$stringPart = _elm_lang$http$Http$StringPart;

var _elm_lang$navigation$Native_Navigation = function() {


// FAKE NAVIGATION

function go(n)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		if (n !== 0)
		{
			history.go(n);
		}
		callback(_elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Native_Utils.Tuple0));
	});
}

function pushState(url)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		history.pushState({}, '', url);
		callback(_elm_lang$core$Native_Scheduler.succeed(getLocation()));
	});
}

function replaceState(url)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		history.replaceState({}, '', url);
		callback(_elm_lang$core$Native_Scheduler.succeed(getLocation()));
	});
}


// REAL NAVIGATION

function reloadPage(skipCache)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		document.location.reload(skipCache);
		callback(_elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Native_Utils.Tuple0));
	});
}

function setLocation(url)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		try
		{
			window.location = url;
		}
		catch(err)
		{
			// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.
			// Other browsers reload the page, so let's be consistent about that.
			document.location.reload(false);
		}
		callback(_elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Native_Utils.Tuple0));
	});
}


// GET LOCATION

function getLocation()
{
	var location = document.location;

	return {
		href: location.href,
		host: location.host,
		hostname: location.hostname,
		protocol: location.protocol,
		origin: location.origin,
		port_: location.port,
		pathname: location.pathname,
		search: location.search,
		hash: location.hash,
		username: location.username,
		password: location.password
	};
}


// DETECT IE11 PROBLEMS

function isInternetExplorer11()
{
	return window.navigator.userAgent.indexOf('Trident') !== -1;
}


return {
	go: go,
	setLocation: setLocation,
	reloadPage: reloadPage,
	pushState: pushState,
	replaceState: replaceState,
	getLocation: getLocation,
	isInternetExplorer11: isInternetExplorer11
};

}();

var _elm_lang$navigation$Navigation$replaceState = _elm_lang$navigation$Native_Navigation.replaceState;
var _elm_lang$navigation$Navigation$pushState = _elm_lang$navigation$Native_Navigation.pushState;
var _elm_lang$navigation$Navigation$go = _elm_lang$navigation$Native_Navigation.go;
var _elm_lang$navigation$Navigation$reloadPage = _elm_lang$navigation$Native_Navigation.reloadPage;
var _elm_lang$navigation$Navigation$setLocation = _elm_lang$navigation$Native_Navigation.setLocation;
var _elm_lang$navigation$Navigation_ops = _elm_lang$navigation$Navigation_ops || {};
_elm_lang$navigation$Navigation_ops['&>'] = F2(
	function (task1, task2) {
		return A2(
			_elm_lang$core$Task$andThen,
			function (_p0) {
				return task2;
			},
			task1);
	});
var _elm_lang$navigation$Navigation$notify = F3(
	function (router, subs, location) {
		var send = function (_p1) {
			var _p2 = _p1;
			return A2(
				_elm_lang$core$Platform$sendToApp,
				router,
				_p2._0(location));
		};
		return A2(
			_elm_lang$navigation$Navigation_ops['&>'],
			_elm_lang$core$Task$sequence(
				A2(_elm_lang$core$List$map, send, subs)),
			_elm_lang$core$Task$succeed(
				{ctor: '_Tuple0'}));
	});
var _elm_lang$navigation$Navigation$cmdHelp = F3(
	function (router, subs, cmd) {
		var _p3 = cmd;
		switch (_p3.ctor) {
			case 'Jump':
				return _elm_lang$navigation$Navigation$go(_p3._0);
			case 'New':
				return A2(
					_elm_lang$core$Task$andThen,
					A2(_elm_lang$navigation$Navigation$notify, router, subs),
					_elm_lang$navigation$Navigation$pushState(_p3._0));
			case 'Modify':
				return A2(
					_elm_lang$core$Task$andThen,
					A2(_elm_lang$navigation$Navigation$notify, router, subs),
					_elm_lang$navigation$Navigation$replaceState(_p3._0));
			case 'Visit':
				return _elm_lang$navigation$Navigation$setLocation(_p3._0);
			default:
				return _elm_lang$navigation$Navigation$reloadPage(_p3._0);
		}
	});
var _elm_lang$navigation$Navigation$killPopWatcher = function (popWatcher) {
	var _p4 = popWatcher;
	if (_p4.ctor === 'Normal') {
		return _elm_lang$core$Process$kill(_p4._0);
	} else {
		return A2(
			_elm_lang$navigation$Navigation_ops['&>'],
			_elm_lang$core$Process$kill(_p4._0),
			_elm_lang$core$Process$kill(_p4._1));
	}
};
var _elm_lang$navigation$Navigation$onSelfMsg = F3(
	function (router, location, state) {
		return A2(
			_elm_lang$navigation$Navigation_ops['&>'],
			A3(_elm_lang$navigation$Navigation$notify, router, state.subs, location),
			_elm_lang$core$Task$succeed(state));
	});
var _elm_lang$navigation$Navigation$subscription = _elm_lang$core$Native_Platform.leaf('Navigation');
var _elm_lang$navigation$Navigation$command = _elm_lang$core$Native_Platform.leaf('Navigation');
var _elm_lang$navigation$Navigation$Location = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return {href: a, host: b, hostname: c, protocol: d, origin: e, port_: f, pathname: g, search: h, hash: i, username: j, password: k};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _elm_lang$navigation$Navigation$State = F2(
	function (a, b) {
		return {subs: a, popWatcher: b};
	});
var _elm_lang$navigation$Navigation$init = _elm_lang$core$Task$succeed(
	A2(
		_elm_lang$navigation$Navigation$State,
		{ctor: '[]'},
		_elm_lang$core$Maybe$Nothing));
var _elm_lang$navigation$Navigation$Reload = function (a) {
	return {ctor: 'Reload', _0: a};
};
var _elm_lang$navigation$Navigation$reload = _elm_lang$navigation$Navigation$command(
	_elm_lang$navigation$Navigation$Reload(false));
var _elm_lang$navigation$Navigation$reloadAndSkipCache = _elm_lang$navigation$Navigation$command(
	_elm_lang$navigation$Navigation$Reload(true));
var _elm_lang$navigation$Navigation$Visit = function (a) {
	return {ctor: 'Visit', _0: a};
};
var _elm_lang$navigation$Navigation$load = function (url) {
	return _elm_lang$navigation$Navigation$command(
		_elm_lang$navigation$Navigation$Visit(url));
};
var _elm_lang$navigation$Navigation$Modify = function (a) {
	return {ctor: 'Modify', _0: a};
};
var _elm_lang$navigation$Navigation$modifyUrl = function (url) {
	return _elm_lang$navigation$Navigation$command(
		_elm_lang$navigation$Navigation$Modify(url));
};
var _elm_lang$navigation$Navigation$New = function (a) {
	return {ctor: 'New', _0: a};
};
var _elm_lang$navigation$Navigation$newUrl = function (url) {
	return _elm_lang$navigation$Navigation$command(
		_elm_lang$navigation$Navigation$New(url));
};
var _elm_lang$navigation$Navigation$Jump = function (a) {
	return {ctor: 'Jump', _0: a};
};
var _elm_lang$navigation$Navigation$back = function (n) {
	return _elm_lang$navigation$Navigation$command(
		_elm_lang$navigation$Navigation$Jump(0 - n));
};
var _elm_lang$navigation$Navigation$forward = function (n) {
	return _elm_lang$navigation$Navigation$command(
		_elm_lang$navigation$Navigation$Jump(n));
};
var _elm_lang$navigation$Navigation$cmdMap = F2(
	function (_p5, myCmd) {
		var _p6 = myCmd;
		switch (_p6.ctor) {
			case 'Jump':
				return _elm_lang$navigation$Navigation$Jump(_p6._0);
			case 'New':
				return _elm_lang$navigation$Navigation$New(_p6._0);
			case 'Modify':
				return _elm_lang$navigation$Navigation$Modify(_p6._0);
			case 'Visit':
				return _elm_lang$navigation$Navigation$Visit(_p6._0);
			default:
				return _elm_lang$navigation$Navigation$Reload(_p6._0);
		}
	});
var _elm_lang$navigation$Navigation$Monitor = function (a) {
	return {ctor: 'Monitor', _0: a};
};
var _elm_lang$navigation$Navigation$program = F2(
	function (locationToMessage, stuff) {
		var init = stuff.init(
			_elm_lang$navigation$Native_Navigation.getLocation(
				{ctor: '_Tuple0'}));
		var subs = function (model) {
			return _elm_lang$core$Platform_Sub$batch(
				{
					ctor: '::',
					_0: _elm_lang$navigation$Navigation$subscription(
						_elm_lang$navigation$Navigation$Monitor(locationToMessage)),
					_1: {
						ctor: '::',
						_0: stuff.subscriptions(model),
						_1: {ctor: '[]'}
					}
				});
		};
		return _elm_lang$html$Html$program(
			{init: init, view: stuff.view, update: stuff.update, subscriptions: subs});
	});
var _elm_lang$navigation$Navigation$programWithFlags = F2(
	function (locationToMessage, stuff) {
		var init = function (flags) {
			return A2(
				stuff.init,
				flags,
				_elm_lang$navigation$Native_Navigation.getLocation(
					{ctor: '_Tuple0'}));
		};
		var subs = function (model) {
			return _elm_lang$core$Platform_Sub$batch(
				{
					ctor: '::',
					_0: _elm_lang$navigation$Navigation$subscription(
						_elm_lang$navigation$Navigation$Monitor(locationToMessage)),
					_1: {
						ctor: '::',
						_0: stuff.subscriptions(model),
						_1: {ctor: '[]'}
					}
				});
		};
		return _elm_lang$html$Html$programWithFlags(
			{init: init, view: stuff.view, update: stuff.update, subscriptions: subs});
	});
var _elm_lang$navigation$Navigation$subMap = F2(
	function (func, _p7) {
		var _p8 = _p7;
		return _elm_lang$navigation$Navigation$Monitor(
			function (_p9) {
				return func(
					_p8._0(_p9));
			});
	});
var _elm_lang$navigation$Navigation$InternetExplorer = F2(
	function (a, b) {
		return {ctor: 'InternetExplorer', _0: a, _1: b};
	});
var _elm_lang$navigation$Navigation$Normal = function (a) {
	return {ctor: 'Normal', _0: a};
};
var _elm_lang$navigation$Navigation$spawnPopWatcher = function (router) {
	var reportLocation = function (_p10) {
		return A2(
			_elm_lang$core$Platform$sendToSelf,
			router,
			_elm_lang$navigation$Native_Navigation.getLocation(
				{ctor: '_Tuple0'}));
	};
	return _elm_lang$navigation$Native_Navigation.isInternetExplorer11(
		{ctor: '_Tuple0'}) ? A3(
		_elm_lang$core$Task$map2,
		_elm_lang$navigation$Navigation$InternetExplorer,
		_elm_lang$core$Process$spawn(
			A3(_elm_lang$dom$Dom_LowLevel$onWindow, 'popstate', _elm_lang$core$Json_Decode$value, reportLocation)),
		_elm_lang$core$Process$spawn(
			A3(_elm_lang$dom$Dom_LowLevel$onWindow, 'hashchange', _elm_lang$core$Json_Decode$value, reportLocation))) : A2(
		_elm_lang$core$Task$map,
		_elm_lang$navigation$Navigation$Normal,
		_elm_lang$core$Process$spawn(
			A3(_elm_lang$dom$Dom_LowLevel$onWindow, 'popstate', _elm_lang$core$Json_Decode$value, reportLocation)));
};
var _elm_lang$navigation$Navigation$onEffects = F4(
	function (router, cmds, subs, _p11) {
		var _p12 = _p11;
		var _p15 = _p12.popWatcher;
		var stepState = function () {
			var _p13 = {ctor: '_Tuple2', _0: subs, _1: _p15};
			_v6_2:
			do {
				if (_p13._0.ctor === '[]') {
					if (_p13._1.ctor === 'Just') {
						return A2(
							_elm_lang$navigation$Navigation_ops['&>'],
							_elm_lang$navigation$Navigation$killPopWatcher(_p13._1._0),
							_elm_lang$core$Task$succeed(
								A2(_elm_lang$navigation$Navigation$State, subs, _elm_lang$core$Maybe$Nothing)));
					} else {
						break _v6_2;
					}
				} else {
					if (_p13._1.ctor === 'Nothing') {
						return A2(
							_elm_lang$core$Task$map,
							function (_p14) {
								return A2(
									_elm_lang$navigation$Navigation$State,
									subs,
									_elm_lang$core$Maybe$Just(_p14));
							},
							_elm_lang$navigation$Navigation$spawnPopWatcher(router));
					} else {
						break _v6_2;
					}
				}
			} while(false);
			return _elm_lang$core$Task$succeed(
				A2(_elm_lang$navigation$Navigation$State, subs, _p15));
		}();
		return A2(
			_elm_lang$navigation$Navigation_ops['&>'],
			_elm_lang$core$Task$sequence(
				A2(
					_elm_lang$core$List$map,
					A2(_elm_lang$navigation$Navigation$cmdHelp, router, subs),
					cmds)),
			stepState);
	});
_elm_lang$core$Native_Platform.effectManagers['Navigation'] = {pkg: 'elm-lang/navigation', init: _elm_lang$navigation$Navigation$init, onEffects: _elm_lang$navigation$Navigation$onEffects, onSelfMsg: _elm_lang$navigation$Navigation$onSelfMsg, tag: 'fx', cmdMap: _elm_lang$navigation$Navigation$cmdMap, subMap: _elm_lang$navigation$Navigation$subMap};

var _elm_lang$websocket$Native_WebSocket = function() {

function open(url, settings)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		try
		{
			var socket = new WebSocket(url);
			socket.elm_web_socket = true;
		}
		catch(err)
		{
			return callback(_elm_lang$core$Native_Scheduler.fail({
				ctor: err.name === 'SecurityError' ? 'BadSecurity' : 'BadArgs',
				_0: err.message
			}));
		}

		socket.addEventListener("open", function(event) {
			callback(_elm_lang$core$Native_Scheduler.succeed(socket));
		});

		socket.addEventListener("message", function(event) {
			_elm_lang$core$Native_Scheduler.rawSpawn(A2(settings.onMessage, socket, event.data));
		});

		socket.addEventListener("close", function(event) {
			_elm_lang$core$Native_Scheduler.rawSpawn(settings.onClose({
				code: event.code,
				reason: event.reason,
				wasClean: event.wasClean
			}));
		});

		return function()
		{
			if (socket && socket.close)
			{
				socket.close();
			}
		};
	});
}

function send(socket, string)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback)
	{
		var result =
			socket.readyState === WebSocket.OPEN
				? _elm_lang$core$Maybe$Nothing
				: _elm_lang$core$Maybe$Just({ ctor: 'NotOpen' });

		try
		{
			socket.send(string);
		}
		catch(err)
		{
			result = _elm_lang$core$Maybe$Just({ ctor: 'BadString' });
		}

		callback(_elm_lang$core$Native_Scheduler.succeed(result));
	});
}

function close(code, reason, socket)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback) {
		try
		{
			socket.close(code, reason);
		}
		catch(err)
		{
			return callback(_elm_lang$core$Native_Scheduler.fail(_elm_lang$core$Maybe$Just({
				ctor: err.name === 'SyntaxError' ? 'BadReason' : 'BadCode'
			})));
		}
		callback(_elm_lang$core$Native_Scheduler.succeed(_elm_lang$core$Maybe$Nothing));
	});
}

function bytesQueued(socket)
{
	return _elm_lang$core$Native_Scheduler.nativeBinding(function(callback) {
		callback(_elm_lang$core$Native_Scheduler.succeed(socket.bufferedAmount));
	});
}

return {
	open: F2(open),
	send: F2(send),
	close: F3(close),
	bytesQueued: bytesQueued
};

}();

var _elm_lang$websocket$WebSocket_LowLevel$bytesQueued = _elm_lang$websocket$Native_WebSocket.bytesQueued;
var _elm_lang$websocket$WebSocket_LowLevel$send = _elm_lang$websocket$Native_WebSocket.send;
var _elm_lang$websocket$WebSocket_LowLevel$closeWith = _elm_lang$websocket$Native_WebSocket.close;
var _elm_lang$websocket$WebSocket_LowLevel$close = function (socket) {
	return A2(
		_elm_lang$core$Task$map,
		_elm_lang$core$Basics$always(
			{ctor: '_Tuple0'}),
		A3(_elm_lang$websocket$WebSocket_LowLevel$closeWith, 1000, '', socket));
};
var _elm_lang$websocket$WebSocket_LowLevel$open = _elm_lang$websocket$Native_WebSocket.open;
var _elm_lang$websocket$WebSocket_LowLevel$Settings = F2(
	function (a, b) {
		return {onMessage: a, onClose: b};
	});
var _elm_lang$websocket$WebSocket_LowLevel$WebSocket = {ctor: 'WebSocket'};
var _elm_lang$websocket$WebSocket_LowLevel$BadArgs = {ctor: 'BadArgs'};
var _elm_lang$websocket$WebSocket_LowLevel$BadSecurity = {ctor: 'BadSecurity'};
var _elm_lang$websocket$WebSocket_LowLevel$BadReason = {ctor: 'BadReason'};
var _elm_lang$websocket$WebSocket_LowLevel$BadCode = {ctor: 'BadCode'};
var _elm_lang$websocket$WebSocket_LowLevel$BadString = {ctor: 'BadString'};
var _elm_lang$websocket$WebSocket_LowLevel$NotOpen = {ctor: 'NotOpen'};

var _elm_lang$websocket$WebSocket$closeConnection = function (connection) {
	var _p0 = connection;
	if (_p0.ctor === 'Opening') {
		return _elm_lang$core$Process$kill(_p0._1);
	} else {
		return _elm_lang$websocket$WebSocket_LowLevel$close(_p0._0);
	}
};
var _elm_lang$websocket$WebSocket$after = function (backoff) {
	return (_elm_lang$core$Native_Utils.cmp(backoff, 1) < 0) ? _elm_lang$core$Task$succeed(
		{ctor: '_Tuple0'}) : _elm_lang$core$Process$sleep(
		_elm_lang$core$Basics$toFloat(
			10 * Math.pow(2, backoff)));
};
var _elm_lang$websocket$WebSocket$removeQueue = F2(
	function (name, state) {
		return _elm_lang$core$Native_Utils.update(
			state,
			{
				queues: A2(_elm_lang$core$Dict$remove, name, state.queues)
			});
	});
var _elm_lang$websocket$WebSocket$updateSocket = F3(
	function (name, connection, state) {
		return _elm_lang$core$Native_Utils.update(
			state,
			{
				sockets: A3(_elm_lang$core$Dict$insert, name, connection, state.sockets)
			});
	});
var _elm_lang$websocket$WebSocket$add = F2(
	function (value, maybeList) {
		var _p1 = maybeList;
		if (_p1.ctor === 'Nothing') {
			return _elm_lang$core$Maybe$Just(
				{
					ctor: '::',
					_0: value,
					_1: {ctor: '[]'}
				});
		} else {
			return _elm_lang$core$Maybe$Just(
				{ctor: '::', _0: value, _1: _p1._0});
		}
	});
var _elm_lang$websocket$WebSocket$buildSubDict = F2(
	function (subs, dict) {
		buildSubDict:
		while (true) {
			var _p2 = subs;
			if (_p2.ctor === '[]') {
				return dict;
			} else {
				if (_p2._0.ctor === 'Listen') {
					var _v3 = _p2._1,
						_v4 = A3(
						_elm_lang$core$Dict$update,
						_p2._0._0,
						_elm_lang$websocket$WebSocket$add(_p2._0._1),
						dict);
					subs = _v3;
					dict = _v4;
					continue buildSubDict;
				} else {
					var _v5 = _p2._1,
						_v6 = A3(
						_elm_lang$core$Dict$update,
						_p2._0._0,
						function (_p3) {
							return _elm_lang$core$Maybe$Just(
								A2(
									_elm_lang$core$Maybe$withDefault,
									{ctor: '[]'},
									_p3));
						},
						dict);
					subs = _v5;
					dict = _v6;
					continue buildSubDict;
				}
			}
		}
	});
var _elm_lang$websocket$WebSocket_ops = _elm_lang$websocket$WebSocket_ops || {};
_elm_lang$websocket$WebSocket_ops['&>'] = F2(
	function (t1, t2) {
		return A2(
			_elm_lang$core$Task$andThen,
			function (_p4) {
				return t2;
			},
			t1);
	});
var _elm_lang$websocket$WebSocket$sendMessagesHelp = F3(
	function (cmds, socketsDict, queuesDict) {
		sendMessagesHelp:
		while (true) {
			var _p5 = cmds;
			if (_p5.ctor === '[]') {
				return _elm_lang$core$Task$succeed(queuesDict);
			} else {
				var _p9 = _p5._1;
				var _p8 = _p5._0._0;
				var _p7 = _p5._0._1;
				var _p6 = A2(_elm_lang$core$Dict$get, _p8, socketsDict);
				if ((_p6.ctor === 'Just') && (_p6._0.ctor === 'Connected')) {
					return A2(
						_elm_lang$websocket$WebSocket_ops['&>'],
						A2(_elm_lang$websocket$WebSocket_LowLevel$send, _p6._0._0, _p7),
						A3(_elm_lang$websocket$WebSocket$sendMessagesHelp, _p9, socketsDict, queuesDict));
				} else {
					var _v9 = _p9,
						_v10 = socketsDict,
						_v11 = A3(
						_elm_lang$core$Dict$update,
						_p8,
						_elm_lang$websocket$WebSocket$add(_p7),
						queuesDict);
					cmds = _v9;
					socketsDict = _v10;
					queuesDict = _v11;
					continue sendMessagesHelp;
				}
			}
		}
	});
var _elm_lang$websocket$WebSocket$subscription = _elm_lang$core$Native_Platform.leaf('WebSocket');
var _elm_lang$websocket$WebSocket$command = _elm_lang$core$Native_Platform.leaf('WebSocket');
var _elm_lang$websocket$WebSocket$State = F3(
	function (a, b, c) {
		return {sockets: a, queues: b, subs: c};
	});
var _elm_lang$websocket$WebSocket$init = _elm_lang$core$Task$succeed(
	A3(_elm_lang$websocket$WebSocket$State, _elm_lang$core$Dict$empty, _elm_lang$core$Dict$empty, _elm_lang$core$Dict$empty));
var _elm_lang$websocket$WebSocket$Send = F2(
	function (a, b) {
		return {ctor: 'Send', _0: a, _1: b};
	});
var _elm_lang$websocket$WebSocket$send = F2(
	function (url, message) {
		return _elm_lang$websocket$WebSocket$command(
			A2(_elm_lang$websocket$WebSocket$Send, url, message));
	});
var _elm_lang$websocket$WebSocket$cmdMap = F2(
	function (_p11, _p10) {
		var _p12 = _p10;
		return A2(_elm_lang$websocket$WebSocket$Send, _p12._0, _p12._1);
	});
var _elm_lang$websocket$WebSocket$KeepAlive = function (a) {
	return {ctor: 'KeepAlive', _0: a};
};
var _elm_lang$websocket$WebSocket$keepAlive = function (url) {
	return _elm_lang$websocket$WebSocket$subscription(
		_elm_lang$websocket$WebSocket$KeepAlive(url));
};
var _elm_lang$websocket$WebSocket$Listen = F2(
	function (a, b) {
		return {ctor: 'Listen', _0: a, _1: b};
	});
var _elm_lang$websocket$WebSocket$listen = F2(
	function (url, tagger) {
		return _elm_lang$websocket$WebSocket$subscription(
			A2(_elm_lang$websocket$WebSocket$Listen, url, tagger));
	});
var _elm_lang$websocket$WebSocket$subMap = F2(
	function (func, sub) {
		var _p13 = sub;
		if (_p13.ctor === 'Listen') {
			return A2(
				_elm_lang$websocket$WebSocket$Listen,
				_p13._0,
				function (_p14) {
					return func(
						_p13._1(_p14));
				});
		} else {
			return _elm_lang$websocket$WebSocket$KeepAlive(_p13._0);
		}
	});
var _elm_lang$websocket$WebSocket$Connected = function (a) {
	return {ctor: 'Connected', _0: a};
};
var _elm_lang$websocket$WebSocket$Opening = F2(
	function (a, b) {
		return {ctor: 'Opening', _0: a, _1: b};
	});
var _elm_lang$websocket$WebSocket$BadOpen = function (a) {
	return {ctor: 'BadOpen', _0: a};
};
var _elm_lang$websocket$WebSocket$GoodOpen = F2(
	function (a, b) {
		return {ctor: 'GoodOpen', _0: a, _1: b};
	});
var _elm_lang$websocket$WebSocket$Die = function (a) {
	return {ctor: 'Die', _0: a};
};
var _elm_lang$websocket$WebSocket$Receive = F2(
	function (a, b) {
		return {ctor: 'Receive', _0: a, _1: b};
	});
var _elm_lang$websocket$WebSocket$open = F2(
	function (name, router) {
		return A2(
			_elm_lang$websocket$WebSocket_LowLevel$open,
			name,
			{
				onMessage: F2(
					function (_p15, msg) {
						return A2(
							_elm_lang$core$Platform$sendToSelf,
							router,
							A2(_elm_lang$websocket$WebSocket$Receive, name, msg));
					}),
				onClose: function (details) {
					return A2(
						_elm_lang$core$Platform$sendToSelf,
						router,
						_elm_lang$websocket$WebSocket$Die(name));
				}
			});
	});
var _elm_lang$websocket$WebSocket$attemptOpen = F3(
	function (router, backoff, name) {
		var badOpen = function (_p16) {
			return A2(
				_elm_lang$core$Platform$sendToSelf,
				router,
				_elm_lang$websocket$WebSocket$BadOpen(name));
		};
		var goodOpen = function (ws) {
			return A2(
				_elm_lang$core$Platform$sendToSelf,
				router,
				A2(_elm_lang$websocket$WebSocket$GoodOpen, name, ws));
		};
		var actuallyAttemptOpen = A2(
			_elm_lang$core$Task$onError,
			badOpen,
			A2(
				_elm_lang$core$Task$andThen,
				goodOpen,
				A2(_elm_lang$websocket$WebSocket$open, name, router)));
		return _elm_lang$core$Process$spawn(
			A2(
				_elm_lang$websocket$WebSocket_ops['&>'],
				_elm_lang$websocket$WebSocket$after(backoff),
				actuallyAttemptOpen));
	});
var _elm_lang$websocket$WebSocket$onEffects = F4(
	function (router, cmds, subs, state) {
		var newSubs = A2(_elm_lang$websocket$WebSocket$buildSubDict, subs, _elm_lang$core$Dict$empty);
		var cleanup = function (newQueues) {
			var rightStep = F3(
				function (name, connection, getNewSockets) {
					return A2(
						_elm_lang$websocket$WebSocket_ops['&>'],
						_elm_lang$websocket$WebSocket$closeConnection(connection),
						getNewSockets);
				});
			var bothStep = F4(
				function (name, _p17, connection, getNewSockets) {
					return A2(
						_elm_lang$core$Task$map,
						A2(_elm_lang$core$Dict$insert, name, connection),
						getNewSockets);
				});
			var leftStep = F3(
				function (name, _p18, getNewSockets) {
					return A2(
						_elm_lang$core$Task$andThen,
						function (newSockets) {
							return A2(
								_elm_lang$core$Task$andThen,
								function (pid) {
									return _elm_lang$core$Task$succeed(
										A3(
											_elm_lang$core$Dict$insert,
											name,
											A2(_elm_lang$websocket$WebSocket$Opening, 0, pid),
											newSockets));
								},
								A3(_elm_lang$websocket$WebSocket$attemptOpen, router, 0, name));
						},
						getNewSockets);
				});
			var newEntries = A2(
				_elm_lang$core$Dict$union,
				newQueues,
				A2(
					_elm_lang$core$Dict$map,
					F2(
						function (k, v) {
							return {ctor: '[]'};
						}),
					newSubs));
			var collectNewSockets = A6(
				_elm_lang$core$Dict$merge,
				leftStep,
				bothStep,
				rightStep,
				newEntries,
				state.sockets,
				_elm_lang$core$Task$succeed(_elm_lang$core$Dict$empty));
			return A2(
				_elm_lang$core$Task$andThen,
				function (newSockets) {
					return _elm_lang$core$Task$succeed(
						A3(_elm_lang$websocket$WebSocket$State, newSockets, newQueues, newSubs));
				},
				collectNewSockets);
		};
		var sendMessagesGetNewQueues = A3(_elm_lang$websocket$WebSocket$sendMessagesHelp, cmds, state.sockets, state.queues);
		return A2(_elm_lang$core$Task$andThen, cleanup, sendMessagesGetNewQueues);
	});
var _elm_lang$websocket$WebSocket$onSelfMsg = F3(
	function (router, selfMsg, state) {
		var _p19 = selfMsg;
		switch (_p19.ctor) {
			case 'Receive':
				var sends = A2(
					_elm_lang$core$List$map,
					function (tagger) {
						return A2(
							_elm_lang$core$Platform$sendToApp,
							router,
							tagger(_p19._1));
					},
					A2(
						_elm_lang$core$Maybe$withDefault,
						{ctor: '[]'},
						A2(_elm_lang$core$Dict$get, _p19._0, state.subs)));
				return A2(
					_elm_lang$websocket$WebSocket_ops['&>'],
					_elm_lang$core$Task$sequence(sends),
					_elm_lang$core$Task$succeed(state));
			case 'Die':
				var _p21 = _p19._0;
				var _p20 = A2(_elm_lang$core$Dict$get, _p21, state.sockets);
				if (_p20.ctor === 'Nothing') {
					return _elm_lang$core$Task$succeed(state);
				} else {
					return A2(
						_elm_lang$core$Task$andThen,
						function (pid) {
							return _elm_lang$core$Task$succeed(
								A3(
									_elm_lang$websocket$WebSocket$updateSocket,
									_p21,
									A2(_elm_lang$websocket$WebSocket$Opening, 0, pid),
									state));
						},
						A3(_elm_lang$websocket$WebSocket$attemptOpen, router, 0, _p21));
				}
			case 'GoodOpen':
				var _p24 = _p19._1;
				var _p23 = _p19._0;
				var _p22 = A2(_elm_lang$core$Dict$get, _p23, state.queues);
				if (_p22.ctor === 'Nothing') {
					return _elm_lang$core$Task$succeed(
						A3(
							_elm_lang$websocket$WebSocket$updateSocket,
							_p23,
							_elm_lang$websocket$WebSocket$Connected(_p24),
							state));
				} else {
					return A3(
						_elm_lang$core$List$foldl,
						F2(
							function (msg, task) {
								return A2(
									_elm_lang$websocket$WebSocket_ops['&>'],
									A2(_elm_lang$websocket$WebSocket_LowLevel$send, _p24, msg),
									task);
							}),
						_elm_lang$core$Task$succeed(
							A2(
								_elm_lang$websocket$WebSocket$removeQueue,
								_p23,
								A3(
									_elm_lang$websocket$WebSocket$updateSocket,
									_p23,
									_elm_lang$websocket$WebSocket$Connected(_p24),
									state))),
						_p22._0);
				}
			default:
				var _p27 = _p19._0;
				var _p25 = A2(_elm_lang$core$Dict$get, _p27, state.sockets);
				if (_p25.ctor === 'Nothing') {
					return _elm_lang$core$Task$succeed(state);
				} else {
					if (_p25._0.ctor === 'Opening') {
						var _p26 = _p25._0._0;
						return A2(
							_elm_lang$core$Task$andThen,
							function (pid) {
								return _elm_lang$core$Task$succeed(
									A3(
										_elm_lang$websocket$WebSocket$updateSocket,
										_p27,
										A2(_elm_lang$websocket$WebSocket$Opening, _p26 + 1, pid),
										state));
							},
							A3(_elm_lang$websocket$WebSocket$attemptOpen, router, _p26 + 1, _p27));
					} else {
						return _elm_lang$core$Task$succeed(state);
					}
				}
		}
	});
_elm_lang$core$Native_Platform.effectManagers['WebSocket'] = {pkg: 'elm-lang/websocket', init: _elm_lang$websocket$WebSocket$init, onEffects: _elm_lang$websocket$WebSocket$onEffects, onSelfMsg: _elm_lang$websocket$WebSocket$onSelfMsg, tag: 'fx', cmdMap: _elm_lang$websocket$WebSocket$cmdMap, subMap: _elm_lang$websocket$WebSocket$subMap};

var _evancz$url_parser$UrlParser$toKeyValuePair = function (segment) {
	var _p0 = A2(_elm_lang$core$String$split, '=', segment);
	if (((_p0.ctor === '::') && (_p0._1.ctor === '::')) && (_p0._1._1.ctor === '[]')) {
		return A3(
			_elm_lang$core$Maybe$map2,
			F2(
				function (v0, v1) {
					return {ctor: '_Tuple2', _0: v0, _1: v1};
				}),
			_elm_lang$http$Http$decodeUri(_p0._0),
			_elm_lang$http$Http$decodeUri(_p0._1._0));
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _evancz$url_parser$UrlParser$parseParams = function (queryString) {
	return _elm_lang$core$Dict$fromList(
		A2(
			_elm_lang$core$List$filterMap,
			_evancz$url_parser$UrlParser$toKeyValuePair,
			A2(
				_elm_lang$core$String$split,
				'&',
				A2(_elm_lang$core$String$dropLeft, 1, queryString))));
};
var _evancz$url_parser$UrlParser$splitUrl = function (url) {
	var _p1 = A2(_elm_lang$core$String$split, '/', url);
	if ((_p1.ctor === '::') && (_p1._0 === '')) {
		return _p1._1;
	} else {
		return _p1;
	}
};
var _evancz$url_parser$UrlParser$parseHelp = function (states) {
	parseHelp:
	while (true) {
		var _p2 = states;
		if (_p2.ctor === '[]') {
			return _elm_lang$core$Maybe$Nothing;
		} else {
			var _p4 = _p2._0;
			var _p3 = _p4.unvisited;
			if (_p3.ctor === '[]') {
				return _elm_lang$core$Maybe$Just(_p4.value);
			} else {
				if ((_p3._0 === '') && (_p3._1.ctor === '[]')) {
					return _elm_lang$core$Maybe$Just(_p4.value);
				} else {
					var _v4 = _p2._1;
					states = _v4;
					continue parseHelp;
				}
			}
		}
	}
};
var _evancz$url_parser$UrlParser$parse = F3(
	function (_p5, url, params) {
		var _p6 = _p5;
		return _evancz$url_parser$UrlParser$parseHelp(
			_p6._0(
				{
					visited: {ctor: '[]'},
					unvisited: _evancz$url_parser$UrlParser$splitUrl(url),
					params: params,
					value: _elm_lang$core$Basics$identity
				}));
	});
var _evancz$url_parser$UrlParser$parseHash = F2(
	function (parser, location) {
		return A3(
			_evancz$url_parser$UrlParser$parse,
			parser,
			A2(_elm_lang$core$String$dropLeft, 1, location.hash),
			_evancz$url_parser$UrlParser$parseParams(location.search));
	});
var _evancz$url_parser$UrlParser$parsePath = F2(
	function (parser, location) {
		return A3(
			_evancz$url_parser$UrlParser$parse,
			parser,
			location.pathname,
			_evancz$url_parser$UrlParser$parseParams(location.search));
	});
var _evancz$url_parser$UrlParser$intParamHelp = function (maybeValue) {
	var _p7 = maybeValue;
	if (_p7.ctor === 'Nothing') {
		return _elm_lang$core$Maybe$Nothing;
	} else {
		return _elm_lang$core$Result$toMaybe(
			_elm_lang$core$String$toInt(_p7._0));
	}
};
var _evancz$url_parser$UrlParser$mapHelp = F2(
	function (func, _p8) {
		var _p9 = _p8;
		return {
			visited: _p9.visited,
			unvisited: _p9.unvisited,
			params: _p9.params,
			value: func(_p9.value)
		};
	});
var _evancz$url_parser$UrlParser$State = F4(
	function (a, b, c, d) {
		return {visited: a, unvisited: b, params: c, value: d};
	});
var _evancz$url_parser$UrlParser$Parser = function (a) {
	return {ctor: 'Parser', _0: a};
};
var _evancz$url_parser$UrlParser$s = function (str) {
	return _evancz$url_parser$UrlParser$Parser(
		function (_p10) {
			var _p11 = _p10;
			var _p12 = _p11.unvisited;
			if (_p12.ctor === '[]') {
				return {ctor: '[]'};
			} else {
				var _p13 = _p12._0;
				return _elm_lang$core$Native_Utils.eq(_p13, str) ? {
					ctor: '::',
					_0: A4(
						_evancz$url_parser$UrlParser$State,
						{ctor: '::', _0: _p13, _1: _p11.visited},
						_p12._1,
						_p11.params,
						_p11.value),
					_1: {ctor: '[]'}
				} : {ctor: '[]'};
			}
		});
};
var _evancz$url_parser$UrlParser$custom = F2(
	function (tipe, stringToSomething) {
		return _evancz$url_parser$UrlParser$Parser(
			function (_p14) {
				var _p15 = _p14;
				var _p16 = _p15.unvisited;
				if (_p16.ctor === '[]') {
					return {ctor: '[]'};
				} else {
					var _p18 = _p16._0;
					var _p17 = stringToSomething(_p18);
					if (_p17.ctor === 'Ok') {
						return {
							ctor: '::',
							_0: A4(
								_evancz$url_parser$UrlParser$State,
								{ctor: '::', _0: _p18, _1: _p15.visited},
								_p16._1,
								_p15.params,
								_p15.value(_p17._0)),
							_1: {ctor: '[]'}
						};
					} else {
						return {ctor: '[]'};
					}
				}
			});
	});
var _evancz$url_parser$UrlParser$string = A2(_evancz$url_parser$UrlParser$custom, 'STRING', _elm_lang$core$Result$Ok);
var _evancz$url_parser$UrlParser$int = A2(_evancz$url_parser$UrlParser$custom, 'NUMBER', _elm_lang$core$String$toInt);
var _evancz$url_parser$UrlParser_ops = _evancz$url_parser$UrlParser_ops || {};
_evancz$url_parser$UrlParser_ops['</>'] = F2(
	function (_p20, _p19) {
		var _p21 = _p20;
		var _p22 = _p19;
		return _evancz$url_parser$UrlParser$Parser(
			function (state) {
				return A2(
					_elm_lang$core$List$concatMap,
					_p22._0,
					_p21._0(state));
			});
	});
var _evancz$url_parser$UrlParser$map = F2(
	function (subValue, _p23) {
		var _p24 = _p23;
		return _evancz$url_parser$UrlParser$Parser(
			function (_p25) {
				var _p26 = _p25;
				return A2(
					_elm_lang$core$List$map,
					_evancz$url_parser$UrlParser$mapHelp(_p26.value),
					_p24._0(
						{visited: _p26.visited, unvisited: _p26.unvisited, params: _p26.params, value: subValue}));
			});
	});
var _evancz$url_parser$UrlParser$oneOf = function (parsers) {
	return _evancz$url_parser$UrlParser$Parser(
		function (state) {
			return A2(
				_elm_lang$core$List$concatMap,
				function (_p27) {
					var _p28 = _p27;
					return _p28._0(state);
				},
				parsers);
		});
};
var _evancz$url_parser$UrlParser$top = _evancz$url_parser$UrlParser$Parser(
	function (state) {
		return {
			ctor: '::',
			_0: state,
			_1: {ctor: '[]'}
		};
	});
var _evancz$url_parser$UrlParser_ops = _evancz$url_parser$UrlParser_ops || {};
_evancz$url_parser$UrlParser_ops['<?>'] = F2(
	function (_p30, _p29) {
		var _p31 = _p30;
		var _p32 = _p29;
		return _evancz$url_parser$UrlParser$Parser(
			function (state) {
				return A2(
					_elm_lang$core$List$concatMap,
					_p32._0,
					_p31._0(state));
			});
	});
var _evancz$url_parser$UrlParser$QueryParser = function (a) {
	return {ctor: 'QueryParser', _0: a};
};
var _evancz$url_parser$UrlParser$customParam = F2(
	function (key, func) {
		return _evancz$url_parser$UrlParser$QueryParser(
			function (_p33) {
				var _p34 = _p33;
				var _p35 = _p34.params;
				return {
					ctor: '::',
					_0: A4(
						_evancz$url_parser$UrlParser$State,
						_p34.visited,
						_p34.unvisited,
						_p35,
						_p34.value(
							func(
								A2(_elm_lang$core$Dict$get, key, _p35)))),
					_1: {ctor: '[]'}
				};
			});
	});
var _evancz$url_parser$UrlParser$stringParam = function (name) {
	return A2(_evancz$url_parser$UrlParser$customParam, name, _elm_lang$core$Basics$identity);
};
var _evancz$url_parser$UrlParser$intParam = function (name) {
	return A2(_evancz$url_parser$UrlParser$customParam, name, _evancz$url_parser$UrlParser$intParamHelp);
};

var _krisajenkins$remotedata$RemoteData$isNotAsked = function (data) {
	var _p0 = data;
	if (_p0.ctor === 'NotAsked') {
		return true;
	} else {
		return false;
	}
};
var _krisajenkins$remotedata$RemoteData$isLoading = function (data) {
	var _p1 = data;
	if (_p1.ctor === 'Loading') {
		return true;
	} else {
		return false;
	}
};
var _krisajenkins$remotedata$RemoteData$isFailure = function (data) {
	var _p2 = data;
	if (_p2.ctor === 'Failure') {
		return true;
	} else {
		return false;
	}
};
var _krisajenkins$remotedata$RemoteData$isSuccess = function (data) {
	var _p3 = data;
	if (_p3.ctor === 'Success') {
		return true;
	} else {
		return false;
	}
};
var _krisajenkins$remotedata$RemoteData$withDefault = F2(
	function ($default, data) {
		var _p4 = data;
		if (_p4.ctor === 'Success') {
			return _p4._0;
		} else {
			return $default;
		}
	});
var _krisajenkins$remotedata$RemoteData$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _krisajenkins$remotedata$RemoteData$succeed = _krisajenkins$remotedata$RemoteData$Success;
var _krisajenkins$remotedata$RemoteData$prism = {
	reverseGet: _krisajenkins$remotedata$RemoteData$Success,
	getOption: function (data) {
		var _p5 = data;
		if (_p5.ctor === 'Success') {
			return _elm_lang$core$Maybe$Just(_p5._0);
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	}
};
var _krisajenkins$remotedata$RemoteData$Failure = function (a) {
	return {ctor: 'Failure', _0: a};
};
var _krisajenkins$remotedata$RemoteData$fromResult = function (result) {
	var _p6 = result;
	if (_p6.ctor === 'Err') {
		return _krisajenkins$remotedata$RemoteData$Failure(_p6._0);
	} else {
		return _krisajenkins$remotedata$RemoteData$Success(_p6._0);
	}
};
var _krisajenkins$remotedata$RemoteData$asCmd = _elm_lang$core$Task$attempt(_krisajenkins$remotedata$RemoteData$fromResult);
var _krisajenkins$remotedata$RemoteData$sendRequest = _elm_lang$http$Http$send(_krisajenkins$remotedata$RemoteData$fromResult);
var _krisajenkins$remotedata$RemoteData$fromTask = function (_p7) {
	return A2(
		_elm_lang$core$Task$onError,
		function (_p8) {
			return _elm_lang$core$Task$succeed(
				_krisajenkins$remotedata$RemoteData$Failure(_p8));
		},
		A2(_elm_lang$core$Task$map, _krisajenkins$remotedata$RemoteData$Success, _p7));
};
var _krisajenkins$remotedata$RemoteData$Loading = {ctor: 'Loading'};
var _krisajenkins$remotedata$RemoteData$NotAsked = {ctor: 'NotAsked'};
var _krisajenkins$remotedata$RemoteData$map = F2(
	function (f, data) {
		var _p9 = data;
		switch (_p9.ctor) {
			case 'Success':
				return _krisajenkins$remotedata$RemoteData$Success(
					f(_p9._0));
			case 'Loading':
				return _krisajenkins$remotedata$RemoteData$Loading;
			case 'NotAsked':
				return _krisajenkins$remotedata$RemoteData$NotAsked;
			default:
				return _krisajenkins$remotedata$RemoteData$Failure(_p9._0);
		}
	});
var _krisajenkins$remotedata$RemoteData$toMaybe = function (_p10) {
	return A2(
		_krisajenkins$remotedata$RemoteData$withDefault,
		_elm_lang$core$Maybe$Nothing,
		A2(_krisajenkins$remotedata$RemoteData$map, _elm_lang$core$Maybe$Just, _p10));
};
var _krisajenkins$remotedata$RemoteData$mapError = F2(
	function (f, data) {
		var _p11 = data;
		switch (_p11.ctor) {
			case 'Success':
				return _krisajenkins$remotedata$RemoteData$Success(_p11._0);
			case 'Failure':
				return _krisajenkins$remotedata$RemoteData$Failure(
					f(_p11._0));
			case 'Loading':
				return _krisajenkins$remotedata$RemoteData$Loading;
			default:
				return _krisajenkins$remotedata$RemoteData$NotAsked;
		}
	});
var _krisajenkins$remotedata$RemoteData$mapBoth = F2(
	function (successFn, errorFn) {
		return function (_p12) {
			return A2(
				_krisajenkins$remotedata$RemoteData$mapError,
				errorFn,
				A2(_krisajenkins$remotedata$RemoteData$map, successFn, _p12));
		};
	});
var _krisajenkins$remotedata$RemoteData$andThen = F2(
	function (f, data) {
		var _p13 = data;
		switch (_p13.ctor) {
			case 'Success':
				return f(_p13._0);
			case 'Failure':
				return _krisajenkins$remotedata$RemoteData$Failure(_p13._0);
			case 'NotAsked':
				return _krisajenkins$remotedata$RemoteData$NotAsked;
			default:
				return _krisajenkins$remotedata$RemoteData$Loading;
		}
	});
var _krisajenkins$remotedata$RemoteData$andMap = F2(
	function (wrappedValue, wrappedFunction) {
		var _p14 = {ctor: '_Tuple2', _0: wrappedFunction, _1: wrappedValue};
		_v10_5:
		do {
			_v10_4:
			do {
				_v10_3:
				do {
					_v10_2:
					do {
						switch (_p14._0.ctor) {
							case 'Success':
								switch (_p14._1.ctor) {
									case 'Success':
										return _krisajenkins$remotedata$RemoteData$Success(
											_p14._0._0(_p14._1._0));
									case 'Failure':
										break _v10_2;
									case 'Loading':
										break _v10_4;
									default:
										return _krisajenkins$remotedata$RemoteData$NotAsked;
								}
							case 'Failure':
								return _krisajenkins$remotedata$RemoteData$Failure(_p14._0._0);
							case 'Loading':
								switch (_p14._1.ctor) {
									case 'Failure':
										break _v10_2;
									case 'Loading':
										break _v10_3;
									case 'NotAsked':
										break _v10_3;
									default:
										break _v10_3;
								}
							default:
								switch (_p14._1.ctor) {
									case 'Failure':
										break _v10_2;
									case 'Loading':
										break _v10_4;
									case 'NotAsked':
										break _v10_5;
									default:
										break _v10_5;
								}
						}
					} while(false);
					return _krisajenkins$remotedata$RemoteData$Failure(_p14._1._0);
				} while(false);
				return _krisajenkins$remotedata$RemoteData$Loading;
			} while(false);
			return _krisajenkins$remotedata$RemoteData$Loading;
		} while(false);
		return _krisajenkins$remotedata$RemoteData$NotAsked;
	});
var _krisajenkins$remotedata$RemoteData$map2 = F3(
	function (f, a, b) {
		return A2(
			_krisajenkins$remotedata$RemoteData$andMap,
			b,
			A2(_krisajenkins$remotedata$RemoteData$map, f, a));
	});
var _krisajenkins$remotedata$RemoteData$map3 = F4(
	function (f, a, b, c) {
		return A2(
			_krisajenkins$remotedata$RemoteData$andMap,
			c,
			A2(
				_krisajenkins$remotedata$RemoteData$andMap,
				b,
				A2(_krisajenkins$remotedata$RemoteData$map, f, a)));
	});
var _krisajenkins$remotedata$RemoteData$append = F2(
	function (a, b) {
		return A2(
			_krisajenkins$remotedata$RemoteData$andMap,
			b,
			A2(
				_krisajenkins$remotedata$RemoteData$map,
				F2(
					function (v0, v1) {
						return {ctor: '_Tuple2', _0: v0, _1: v1};
					}),
				a));
	});
var _krisajenkins$remotedata$RemoteData$update = F2(
	function (f, remoteData) {
		var _p15 = remoteData;
		switch (_p15.ctor) {
			case 'Success':
				var _p16 = f(_p15._0);
				var first = _p16._0;
				var second = _p16._1;
				return {
					ctor: '_Tuple2',
					_0: _krisajenkins$remotedata$RemoteData$Success(first),
					_1: second
				};
			case 'NotAsked':
				return {ctor: '_Tuple2', _0: _krisajenkins$remotedata$RemoteData$NotAsked, _1: _elm_lang$core$Platform_Cmd$none};
			case 'Loading':
				return {ctor: '_Tuple2', _0: _krisajenkins$remotedata$RemoteData$Loading, _1: _elm_lang$core$Platform_Cmd$none};
			default:
				return {
					ctor: '_Tuple2',
					_0: _krisajenkins$remotedata$RemoteData$Failure(_p15._0),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});

var _user$project$Api_ApiModel$ApiResponse = F3(
	function (a, b, c) {
		return {status: a, message: b, data: c};
	});

var _user$project$Api_ApiDecoder$decodeApiResponse = function (decoder) {
	var _p0 = decoder;
	if (_p0.ctor === 'Just') {
		return A4(
			_elm_lang$core$Json_Decode$map3,
			_user$project$Api_ApiModel$ApiResponse,
			A2(
				_elm_lang$core$Json_Decode$at,
				{
					ctor: '::',
					_0: 'status',
					_1: {ctor: '[]'}
				},
				_elm_lang$core$Json_Decode$bool),
			_elm_lang$core$Json_Decode$maybe(
				A2(
					_elm_lang$core$Json_Decode$at,
					{
						ctor: '::',
						_0: 'msg',
						_1: {ctor: '[]'}
					},
					_elm_lang$core$Json_Decode$string)),
			_elm_lang$core$Json_Decode$maybe(
				A2(
					_elm_lang$core$Json_Decode$at,
					{
						ctor: '::',
						_0: 'data',
						_1: {ctor: '[]'}
					},
					_p0._0)));
	} else {
		return A4(
			_elm_lang$core$Json_Decode$map3,
			_user$project$Api_ApiModel$ApiResponse,
			A2(
				_elm_lang$core$Json_Decode$at,
				{
					ctor: '::',
					_0: 'status',
					_1: {ctor: '[]'}
				},
				_elm_lang$core$Json_Decode$bool),
			_elm_lang$core$Json_Decode$maybe(
				A2(
					_elm_lang$core$Json_Decode$at,
					{
						ctor: '::',
						_0: 'msg',
						_1: {ctor: '[]'}
					},
					_elm_lang$core$Json_Decode$string)),
			_elm_lang$core$Json_Decode$succeed(_elm_lang$core$Maybe$Nothing));
	}
};

var _user$project$Api_ApiRequest$authHeader = function (token) {
	return A2(
		_elm_lang$http$Http$header,
		'Authorization',
		A2(_elm_lang$core$Basics_ops['++'], 'Bearer ', token));
};
var _user$project$Api_ApiRequest$apiGetRequest = F3(
	function (decoder, token, url) {
		return _elm_lang$http$Http$request(
			{
				method: 'GET',
				headers: {
					ctor: '::',
					_0: _user$project$Api_ApiRequest$authHeader(token),
					_1: {ctor: '[]'}
				},
				url: url,
				body: _elm_lang$http$Http$emptyBody,
				expect: _elm_lang$http$Http$expectJson(
					_user$project$Api_ApiDecoder$decodeApiResponse(decoder)),
				timeout: _elm_lang$core$Maybe$Nothing,
				withCredentials: false
			});
	});
var _user$project$Api_ApiRequest$apiPostRequest = F4(
	function (decoder, token, url, body) {
		return _elm_lang$http$Http$request(
			{
				method: 'POST',
				headers: {
					ctor: '::',
					_0: _user$project$Api_ApiRequest$authHeader(token),
					_1: {ctor: '[]'}
				},
				url: url,
				body: body,
				expect: _elm_lang$http$Http$expectJson(
					_user$project$Api_ApiDecoder$decodeApiResponse(decoder)),
				timeout: _elm_lang$core$Maybe$Nothing,
				withCredentials: false
			});
	});

var _user$project$App_Notif_NotifModel$Notif = F4(
	function (a, b, c, d) {
		return {type_: a, to: b, from: c, notif: d};
	});
var _user$project$App_Notif_NotifModel$NotifUnlike = {ctor: 'NotifUnlike'};
var _user$project$App_Notif_NotifModel$NotifLike = {ctor: 'NotifLike'};
var _user$project$App_Notif_NotifModel$NotifVisit = {ctor: 'NotifVisit'};
var _user$project$App_Notif_NotifModel$NotifMessage = {ctor: 'NotifMessage'};

var _user$project$App_Talk_TalkModel$initialTalksModel = {
	talks: {ctor: '[]'},
	currentTalk: _elm_lang$core$Maybe$Nothing
};
var _user$project$App_Talk_TalkModel$TalksModel = F2(
	function (a, b) {
		return {talks: a, currentTalk: b};
	});
var _user$project$App_Talk_TalkModel$Talk = F4(
	function (a, b, c, d) {
		return {username_with: a, unreadMsgs: b, messages: c, new_message: d};
	});
var _user$project$App_Talk_TalkModel$Message = F3(
	function (a, b, c) {
		return {date: a, message: b, user: c};
	});

var _user$project$App_User_UserModel$genderToString = function (g) {
	var _p0 = g;
	if (_p0.ctor === 'Just') {
		switch (_p0._0.ctor) {
			case 'M':
				return 'M';
			case 'F':
				return 'F';
			case 'NB':
				return 'NB';
			default:
				return 'O';
		}
	} else {
		return 'No gender';
	}
};
var _user$project$App_User_UserModel$UsersModel = F5(
	function (a, b, c, d, e) {
		return {users: a, currentUser: b, userFilter: c, userSort: d, orderSort: e};
	});
var _user$project$App_User_UserModel$SessionUser = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return {username: a, fname: b, lname: c, email: d, gender: e, intIn: f, bio: g, date_of_birth: h, tags: i, localisation: j, photos: k, status: l};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _user$project$App_User_UserModel$User = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return function (o) {
															return {username: a, gender: b, bio: c, date_of_birth: d, liking: e, liked: f, likes: g, visits: h, has_talk: i, visitor: j, tags: k, photos: l, lastOn: m, online: n, distance: o};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _user$project$App_User_UserModel$LocalisationApi = F3(
	function (a, b, c) {
		return {status: a, lon: b, lat: c};
	});
var _user$project$App_User_UserModel$Localisation = F2(
	function (a, b) {
		return {lon: a, lat: b};
	});
var _user$project$App_User_UserModel$F_Tags = function (a) {
	return {ctor: 'F_Tags', _0: a};
};
var _user$project$App_User_UserModel$F_Loc = function (a) {
	return {ctor: 'F_Loc', _0: a};
};
var _user$project$App_User_UserModel$F_MaxAge = function (a) {
	return {ctor: 'F_MaxAge', _0: a};
};
var _user$project$App_User_UserModel$F_MinAge = function (a) {
	return {ctor: 'F_MinAge', _0: a};
};
var _user$project$App_User_UserModel$S_Afin = {ctor: 'S_Afin'};
var _user$project$App_User_UserModel$S_Dist = {ctor: 'S_Dist'};
var _user$project$App_User_UserModel$S_LastOn = {ctor: 'S_LastOn'};
var _user$project$App_User_UserModel$S_Age = {ctor: 'S_Age'};
var _user$project$App_User_UserModel$DESC = {ctor: 'DESC'};
var _user$project$App_User_UserModel$ASC = {ctor: 'ASC'};
var _user$project$App_User_UserModel$initialUsersModel = {
	users: {ctor: '[]'},
	currentUser: _elm_lang$core$Maybe$Nothing,
	userFilter: {ctor: '[]'},
	userSort: _user$project$App_User_UserModel$S_Afin,
	orderSort: _user$project$App_User_UserModel$ASC
};
var _user$project$App_User_UserModel$O = {ctor: 'O'};
var _user$project$App_User_UserModel$NB = {ctor: 'NB'};
var _user$project$App_User_UserModel$F = {ctor: 'F'};
var _user$project$App_User_UserModel$M = {ctor: 'M'};
var _user$project$App_User_UserModel$stringToGender = function (g) {
	var _p1 = g;
	switch (_p1) {
		case 'M':
			return _elm_lang$core$Maybe$Just(_user$project$App_User_UserModel$M);
		case 'F':
			return _elm_lang$core$Maybe$Just(_user$project$App_User_UserModel$F);
		case 'NB':
			return _elm_lang$core$Maybe$Just(_user$project$App_User_UserModel$NB);
		case 'O':
			return _elm_lang$core$Maybe$Just(_user$project$App_User_UserModel$O);
		default:
			return _elm_lang$core$Maybe$Nothing;
	}
};
var _user$project$App_User_UserModel$Match = {ctor: 'Match'};
var _user$project$App_User_UserModel$To = {ctor: 'To'};
var _user$project$App_User_UserModel$From = {ctor: 'From'};
var _user$project$App_User_UserModel$None = {ctor: 'None'};
var _user$project$App_User_UserModel$stringToMatch = function (m) {
	var _p2 = m;
	switch (_p2) {
		case 'from':
			return _user$project$App_User_UserModel$From;
		case 'to':
			return _user$project$App_User_UserModel$To;
		case 'match':
			return _user$project$App_User_UserModel$Match;
		default:
			return _user$project$App_User_UserModel$None;
	}
};
var _user$project$App_User_UserModel$USER = {ctor: 'USER'};
var _user$project$App_User_UserModel$ADMIN = {ctor: 'ADMIN'};
var _user$project$App_User_UserModel$NotActivated = {ctor: 'NotActivated'};
var _user$project$App_User_UserModel$Incomplete = {ctor: 'Incomplete'};
var _user$project$App_User_UserModel$ResetPassword = {ctor: 'ResetPassword'};
var _user$project$App_User_UserModel$Activated = {ctor: 'Activated'};

var _user$project$FormUtils$viewTextareaField = F2(
	function (mess, i) {
		return A2(
			_elm_lang$html$Html$textarea,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$id(i.id),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onInput(mess),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$value(
							function () {
								var _p0 = i.input;
								if (_p0.ctor === 'Just') {
									return _p0._0;
								} else {
									return '';
								}
							}()),
						_1: {ctor: '[]'}
					}
				}
			},
			{ctor: '[]'});
	});
var _user$project$FormUtils$viewInputField = F2(
	function (mess, i) {
		return A2(
			_elm_lang$html$Html$input,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$type_(i.typ),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$id(i.id),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onInput(mess),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$value(
								function () {
									var _p1 = i.input;
									if (_p1.ctor === 'Just') {
										return _p1._0;
									} else {
										return '';
									}
								}()),
							_1: {ctor: '[]'}
						}
					}
				}
			},
			{ctor: '[]'});
	});
var _user$project$FormUtils$viewInput = F2(
	function (mess, i) {
		var inputClass = function () {
			var _p2 = i.status;
			switch (_p2.ctor) {
				case 'NotValid':
					return 'input input-error';
				case 'Valid':
					return 'input input-success';
				default:
					return 'input';
			}
		}();
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class(inputClass),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$label,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$for(i.id),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(i.label),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: _elm_lang$core$Native_Utils.eq(i.typ, 'textarea') ? A2(_user$project$FormUtils$viewTextareaField, mess, i) : A2(_user$project$FormUtils$viewInputField, mess, i),
					_1: {
						ctor: '::',
						_0: function () {
							var _p3 = i.tip;
							if (_p3.ctor === 'Just') {
								return A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('input-tip'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text(_p3._0),
										_1: {ctor: '[]'}
									});
							} else {
								return A2(
									_elm_lang$html$Html$div,
									{ctor: '[]'},
									{ctor: '[]'});
							}
						}(),
						_1: {ctor: '[]'}
					}
				}
			});
	});
var _user$project$FormUtils$findInput = F2(
	function (form, id) {
		var _p4 = A2(
			_elm_lang$core$List$filter,
			function (i) {
				return _elm_lang$core$Native_Utils.eq(i.id, id);
			},
			form);
		if (_p4.ctor === '::') {
			return _elm_lang$core$Maybe$Just(_p4._0);
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _user$project$FormUtils$Input = F7(
	function (a, b, c, d, e, f, g) {
		return {input: a, typ: b, status: c, validator: d, id: e, label: f, tip: g};
	});
var _user$project$FormUtils$NotValid = function (a) {
	return {ctor: 'NotValid', _0: a};
};
var _user$project$FormUtils$Valid = function (a) {
	return {ctor: 'Valid', _0: a};
};
var _user$project$FormUtils$Waiting = {ctor: 'Waiting'};
var _user$project$FormUtils$validEmail = function (value) {
	var _p5 = value;
	if (_p5.ctor === 'Nothing') {
		return _user$project$FormUtils$Waiting;
	} else {
		var _p6 = _p5._0;
		return A2(
			_elm_lang$core$Regex$contains,
			_elm_lang$core$Regex$regex('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$'),
			_p6) ? _user$project$FormUtils$Valid(_p6) : _user$project$FormUtils$NotValid('Must be email');
	}
};
var _user$project$FormUtils$validTag = function (value) {
	var _p7 = value;
	if (_p7.ctor === 'Nothing') {
		return _user$project$FormUtils$Waiting;
	} else {
		var _p8 = _p7._0;
		return A2(
			_elm_lang$core$Regex$contains,
			_elm_lang$core$Regex$regex('^[a-zA-Z0-9_.+-]+$'),
			_p8) ? ((_elm_lang$core$Native_Utils.cmp(
			_elm_lang$core$String$length(_p8),
			30) < 1) ? _user$project$FormUtils$Valid(_p8) : _user$project$FormUtils$NotValid('30 char max')) : _user$project$FormUtils$NotValid('Only letter, numbers and \'_\'');
	}
};
var _user$project$FormUtils$validPassword = function (value) {
	var _p9 = value;
	if (_p9.ctor === 'Nothing') {
		return _user$project$FormUtils$Waiting;
	} else {
		var _p10 = _p9._0;
		return (A2(
			_elm_lang$core$Regex$contains,
			_elm_lang$core$Regex$regex('\\d'),
			_p10) && (_elm_lang$core$Native_Utils.cmp(
			_elm_lang$core$String$length(_p10),
			6) > -1)) ? _user$project$FormUtils$Valid(_p10) : _user$project$FormUtils$NotValid('Should be at least 6 chars and 1 number');
	}
};
var _user$project$FormUtils$validConfirmPassword = F2(
	function (inp, value) {
		var _p11 = inp.status;
		if (_p11.ctor === 'Valid') {
			var _p13 = _p11._0;
			var _p12 = value;
			if (_p12.ctor === 'Just') {
				return _elm_lang$core$Native_Utils.eq(_p13, _p12._0) ? _user$project$FormUtils$Valid(_p13) : _user$project$FormUtils$NotValid('Both password doesn\'t match');
			} else {
				return _user$project$FormUtils$Waiting;
			}
		} else {
			return _user$project$FormUtils$Waiting;
		}
	});
var _user$project$FormUtils$validText = F3(
	function (min, max, t) {
		var _p14 = t;
		if (_p14.ctor === 'Just') {
			var _p16 = _p14._0;
			var size = _elm_lang$core$String$length(_p16);
			var _p15 = (_elm_lang$core$Native_Utils.cmp(size, min) > -1) && (_elm_lang$core$Native_Utils.cmp(size, max) < 1);
			if (_p15 === true) {
				return _user$project$FormUtils$Valid(_p16);
			} else {
				return _user$project$FormUtils$NotValid(
					A2(
						_elm_lang$core$Basics_ops['++'],
						'Must be more than ',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(size),
							A2(
								_elm_lang$core$Basics_ops['++'],
								' and less than ',
								_elm_lang$core$Basics$toString(max)))));
			}
		} else {
			return _user$project$FormUtils$Waiting;
		}
	});
var _user$project$FormUtils$validGender = function (g) {
	var _p17 = g;
	if (_p17.ctor === 'Just') {
		var _p18 = _p17._0;
		switch (_p18) {
			case 'M':
				return _user$project$FormUtils$Valid('M');
			case 'F':
				return _user$project$FormUtils$Valid('F');
			default:
				return _user$project$FormUtils$NotValid('Must be F or M');
		}
	} else {
		return _user$project$FormUtils$Waiting;
	}
};
var _user$project$FormUtils$validationForm = F3(
	function (validator, form, value) {
		var _p19 = validator;
		if (_p19.ctor === 'Nothing') {
			return _user$project$FormUtils$Valid(
				function () {
					var _p20 = value;
					if (_p20.ctor === 'Just') {
						return _p20._0;
					} else {
						return '';
					}
				}());
		} else {
			switch (_p19._0.ctor) {
				case 'Required':
					var _p21 = value;
					if (_p21.ctor === 'Just') {
						var _p22 = _p21._0;
						return (!_elm_lang$core$Native_Utils.eq(_p22, '')) ? _user$project$FormUtils$Valid(_p22) : _user$project$FormUtils$NotValid('Required Field');
					} else {
						return _user$project$FormUtils$NotValid('Required field');
					}
				case 'GenderValidator':
					return _user$project$FormUtils$validGender(value);
				case 'EmailValidator':
					return _user$project$FormUtils$validEmail(value);
				case 'PasswordValidator':
					return _user$project$FormUtils$validPassword(value);
				case 'PasswordConfirmValidator':
					var _p24 = _p19._0._0;
					var _p23 = A2(_user$project$FormUtils$findInput, form, _p24);
					if (_p23.ctor === 'Just') {
						return A2(_user$project$FormUtils$validConfirmPassword, _p23._0, value);
					} else {
						return _user$project$FormUtils$NotValid(
							A2(_elm_lang$core$Basics_ops['++'], 'No input found with id : ', _p24));
					}
				case 'TextValidator':
					return A3(_user$project$FormUtils$validText, _p19._0._0, _p19._0._1, value);
				default:
					return _user$project$FormUtils$validTag(value);
			}
		}
	});
var _user$project$FormUtils$initInput = F6(
	function (value, typ, label, id, validator, tip) {
		return A7(
			_user$project$FormUtils$Input,
			value,
			typ,
			A3(
				_user$project$FormUtils$validationForm,
				validator,
				{ctor: '[]'},
				value),
			validator,
			id,
			label,
			tip);
	});
var _user$project$FormUtils$updateInput = F3(
	function (form, id, value) {
		return A2(
			_elm_lang$core$List$map,
			function (i) {
				return _elm_lang$core$Native_Utils.eq(i.id, id) ? _elm_lang$core$Native_Utils.update(
					i,
					{
						input: value,
						status: A3(_user$project$FormUtils$validationForm, i.validator, form, value)
					}) : i;
			},
			form);
	});
var _user$project$FormUtils$TagValidator = {ctor: 'TagValidator'};
var _user$project$FormUtils$PasswordConfirmValidator = function (a) {
	return {ctor: 'PasswordConfirmValidator', _0: a};
};
var _user$project$FormUtils$PasswordValidator = {ctor: 'PasswordValidator'};
var _user$project$FormUtils$initChangePwdForm = {
	ctor: '::',
	_0: A6(_user$project$FormUtils$initInput, _elm_lang$core$Maybe$Nothing, 'password', 'Current password', 'old_pwd', _elm_lang$core$Maybe$Nothing, _elm_lang$core$Maybe$Nothing),
	_1: {
		ctor: '::',
		_0: A6(
			_user$project$FormUtils$initInput,
			_elm_lang$core$Maybe$Nothing,
			'password',
			'New password',
			'new_pwd',
			_elm_lang$core$Maybe$Just(_user$project$FormUtils$PasswordValidator),
			_elm_lang$core$Maybe$Just('At least 6 chars including 1 number')),
		_1: {
			ctor: '::',
			_0: A6(
				_user$project$FormUtils$initInput,
				_elm_lang$core$Maybe$Nothing,
				'password',
				'Confirm password',
				'confirm_new_pwd',
				_elm_lang$core$Maybe$Just(
					_user$project$FormUtils$PasswordConfirmValidator('new_pwd')),
				_elm_lang$core$Maybe$Just('Re-enter your password')),
			_1: {ctor: '[]'}
		}
	}
};
var _user$project$FormUtils$EmailValidator = {ctor: 'EmailValidator'};
var _user$project$FormUtils$initResetPwdForm = {
	ctor: '::',
	_0: A6(_user$project$FormUtils$initInput, _elm_lang$core$Maybe$Nothing, 'text', 'Login', 'login', _elm_lang$core$Maybe$Nothing, _elm_lang$core$Maybe$Nothing),
	_1: {
		ctor: '::',
		_0: A6(
			_user$project$FormUtils$initInput,
			_elm_lang$core$Maybe$Nothing,
			'text',
			'Email',
			'email',
			_elm_lang$core$Maybe$Just(_user$project$FormUtils$EmailValidator),
			_elm_lang$core$Maybe$Nothing),
		_1: {ctor: '[]'}
	}
};
var _user$project$FormUtils$GenderValidator = {ctor: 'GenderValidator'};
var _user$project$FormUtils$TextValidator = F2(
	function (a, b) {
		return {ctor: 'TextValidator', _0: a, _1: b};
	});
var _user$project$FormUtils$initEditAccountForm = function (user) {
	return {
		ctor: '::',
		_0: A6(
			_user$project$FormUtils$initInput,
			_elm_lang$core$Maybe$Just(user.fname),
			'text',
			'First name',
			'fname',
			_elm_lang$core$Maybe$Just(
				A2(_user$project$FormUtils$TextValidator, 2, 255)),
			_elm_lang$core$Maybe$Nothing),
		_1: {
			ctor: '::',
			_0: A6(
				_user$project$FormUtils$initInput,
				_elm_lang$core$Maybe$Just(user.lname),
				'text',
				'Last name',
				'lname',
				_elm_lang$core$Maybe$Just(
					A2(_user$project$FormUtils$TextValidator, 2, 255)),
				_elm_lang$core$Maybe$Nothing),
			_1: {
				ctor: '::',
				_0: A6(
					_user$project$FormUtils$initInput,
					_elm_lang$core$Maybe$Just(user.email),
					'text',
					'Email',
					'email',
					_elm_lang$core$Maybe$Just(_user$project$FormUtils$EmailValidator),
					_elm_lang$core$Maybe$Nothing),
				_1: {
					ctor: '::',
					_0: A6(_user$project$FormUtils$initInput, user.bio, 'textarea', 'Bio', 'bio', _elm_lang$core$Maybe$Nothing, _elm_lang$core$Maybe$Nothing),
					_1: {ctor: '[]'}
				}
			}
		}
	};
};
var _user$project$FormUtils$initLoginForm = {
	ctor: '::',
	_0: A6(
		_user$project$FormUtils$initInput,
		_elm_lang$core$Maybe$Nothing,
		'text',
		'Login',
		'login',
		_elm_lang$core$Maybe$Just(
			A2(_user$project$FormUtils$TextValidator, 2, 255)),
		_elm_lang$core$Maybe$Nothing),
	_1: {
		ctor: '::',
		_0: A6(
			_user$project$FormUtils$initInput,
			_elm_lang$core$Maybe$Nothing,
			'password',
			'Password',
			'pwd',
			_elm_lang$core$Maybe$Just(
				A2(_user$project$FormUtils$TextValidator, 2, 255)),
			_elm_lang$core$Maybe$Nothing),
		_1: {ctor: '[]'}
	}
};
var _user$project$FormUtils$initFastNewUserForm = {
	ctor: '::',
	_0: A6(
		_user$project$FormUtils$initInput,
		_elm_lang$core$Maybe$Nothing,
		'text',
		'Login',
		'login',
		_elm_lang$core$Maybe$Just(
			A2(_user$project$FormUtils$TextValidator, 2, 255)),
		_elm_lang$core$Maybe$Just('Must be between 2 and 255 char')),
	_1: {
		ctor: '::',
		_0: A6(
			_user$project$FormUtils$initInput,
			_elm_lang$core$Maybe$Nothing,
			'text',
			'First name',
			'fname',
			_elm_lang$core$Maybe$Just(
				A2(_user$project$FormUtils$TextValidator, 2, 255)),
			_elm_lang$core$Maybe$Just('Must be between 2 and 255 char')),
		_1: {
			ctor: '::',
			_0: A6(
				_user$project$FormUtils$initInput,
				_elm_lang$core$Maybe$Nothing,
				'text',
				'Last name',
				'lname',
				_elm_lang$core$Maybe$Just(
					A2(_user$project$FormUtils$TextValidator, 2, 255)),
				_elm_lang$core$Maybe$Just('Must be between 2 and 255 char')),
			_1: {
				ctor: '::',
				_0: A6(
					_user$project$FormUtils$initInput,
					_elm_lang$core$Maybe$Nothing,
					'text',
					'Email',
					'email',
					_elm_lang$core$Maybe$Just(_user$project$FormUtils$EmailValidator),
					_elm_lang$core$Maybe$Just('Must be a valid email')),
				_1: {
					ctor: '::',
					_0: A6(
						_user$project$FormUtils$initInput,
						_elm_lang$core$Maybe$Nothing,
						'password',
						'Password',
						'pwd',
						_elm_lang$core$Maybe$Just(_user$project$FormUtils$PasswordValidator),
						_elm_lang$core$Maybe$Just('At least 6 chars and 1 number')),
					_1: {
						ctor: '::',
						_0: A6(
							_user$project$FormUtils$initInput,
							_elm_lang$core$Maybe$Nothing,
							'password',
							'Confirm password',
							'repwd',
							_elm_lang$core$Maybe$Just(
								_user$project$FormUtils$PasswordConfirmValidator('pwd')),
							_elm_lang$core$Maybe$Just('Re-type your password')),
						_1: {ctor: '[]'}
					}
				}
			}
		}
	}
};
var _user$project$FormUtils$Required = {ctor: 'Required'};

var _user$project$Login_LoginModels$initialLoginModel = {
	loginForm: _user$project$FormUtils$initLoginForm,
	newUserForm: _user$project$FormUtils$initFastNewUserForm,
	resetPwdForm: _user$project$FormUtils$initResetPwdForm,
	localisation: {lon: 0, lat: 0},
	message: _elm_lang$core$Maybe$Nothing
};
var _user$project$Login_LoginModels$LoginModel = F5(
	function (a, b, c, d, e) {
		return {loginForm: a, newUserForm: b, resetPwdForm: c, localisation: d, message: e};
	});
var _user$project$Login_LoginModels$NotFoundLoginRoute = {ctor: 'NotFoundLoginRoute'};
var _user$project$Login_LoginModels$ResetPwdRoute = {ctor: 'ResetPwdRoute'};
var _user$project$Login_LoginModels$SigninRoute = {ctor: 'SigninRoute'};
var _user$project$Login_LoginModels$LoginRoute = {ctor: 'LoginRoute'};

var _user$project$App_AppModels$initialSearchModel = {
	login: '',
	tags: {ctor: '[]'},
	yearMin: _elm_lang$core$Maybe$Nothing,
	yearMax: _elm_lang$core$Maybe$Nothing,
	loc: _elm_lang$core$Maybe$Nothing
};
var _user$project$App_AppModels$Image = F2(
	function (a, b) {
		return {contents: a, filename: b};
	});
var _user$project$App_AppModels$AppModel = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return function (o) {
															return function (p) {
																return function (q) {
																	return function (r) {
																		return function (s) {
																			return function (t) {
																				return function (u) {
																					return function (v) {
																						return {editAccountForm: a, changePwdForm: b, tagInput: c, searchTag: d, notifVisit: e, notifLike: f, notifUnlike: g, message: h, map_state: i, current_location: j, matchAnim: k, idImg: l, mImage: m, currentTime: n, showTalksList: o, showAccountMenu: p, showAdvanceFilters: q, showEmoList: r, search: s, showEditAccountForm: t, showResetPwdForm: u, localizing: v};
																					};
																				};
																			};
																		};
																	};
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _user$project$App_AppModels$Session = F2(
	function (a, b) {
		return {user: a, token: b};
	});
var _user$project$App_AppModels$SearchModel = F5(
	function (a, b, c, d, e) {
		return {login: a, tags: b, yearMin: c, yearMax: d, loc: e};
	});
var _user$project$App_AppModels$NotFoundAppRoute = {ctor: 'NotFoundAppRoute'};
var _user$project$App_AppModels$SearchRoute = {ctor: 'SearchRoute'};
var _user$project$App_AppModels$UsersRoute = function (a) {
	return {ctor: 'UsersRoute', _0: a};
};
var _user$project$App_AppModels$Rendered = {ctor: 'Rendered'};
var _user$project$App_AppModels$Loading = {ctor: 'Loading'};
var _user$project$App_AppModels$NoMap = {ctor: 'NoMap'};
var _user$project$App_AppModels$initialAppModel = {
	editAccountForm: {ctor: '[]'},
	changePwdForm: _user$project$FormUtils$initChangePwdForm,
	tagInput: '',
	searchTag: {ctor: '[]'},
	notifVisit: 0,
	notifLike: 0,
	notifUnlike: {ctor: '[]'},
	message: _elm_lang$core$Maybe$Nothing,
	map_state: _user$project$App_AppModels$NoMap,
	current_location: _elm_lang$core$Maybe$Nothing,
	matchAnim: _elm_lang$core$Maybe$Nothing,
	idImg: 'ImageInputId',
	mImage: _elm_lang$core$Maybe$Nothing,
	currentTime: _elm_lang$core$Maybe$Nothing,
	showTalksList: false,
	showAccountMenu: false,
	showAdvanceFilters: false,
	showEmoList: false,
	search: _user$project$App_AppModels$initialSearchModel,
	showEditAccountForm: false,
	showResetPwdForm: false,
	localizing: false
};

var _user$project$App_Notif_NotifDecoder$notifTypeDecoder = A2(
	_elm_lang$core$Json_Decode$andThen,
	function (a) {
		var _p0 = a;
		switch (_p0) {
			case 'message':
				return _elm_lang$core$Json_Decode$succeed(_user$project$App_Notif_NotifModel$NotifMessage);
			case 'visit':
				return _elm_lang$core$Json_Decode$succeed(_user$project$App_Notif_NotifModel$NotifVisit);
			case 'like':
				return _elm_lang$core$Json_Decode$succeed(_user$project$App_Notif_NotifModel$NotifLike);
			case 'unlike':
				return _elm_lang$core$Json_Decode$succeed(_user$project$App_Notif_NotifModel$NotifUnlike);
			default:
				return _elm_lang$core$Json_Decode$fail('Notif unknown');
		}
	},
	_elm_lang$core$Json_Decode$string);
var _user$project$App_Notif_NotifDecoder$notificationDecoder = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			A2(
				_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
				_elm_lang$core$Json_Decode$succeed(_user$project$App_Notif_NotifModel$Notif),
				A2(_elm_lang$core$Json_Decode$field, 'message', _user$project$App_Notif_NotifDecoder$notifTypeDecoder)),
			A2(_elm_lang$core$Json_Decode$field, 'to', _elm_lang$core$Json_Decode$string)),
		A2(_elm_lang$core$Json_Decode$field, 'from', _elm_lang$core$Json_Decode$string)),
	A2(
		_elm_lang$core$Json_Decode$field,
		'notif',
		_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string)));

var _user$project$App_Talk_TalkDecoder$decodeMessage = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			_elm_lang$core$Json_Decode$succeed(_user$project$App_Talk_TalkModel$Message),
			A2(_elm_lang$core$Json_Decode$field, 'date', _elm_lang$core$Json_Decode$string)),
		A2(_elm_lang$core$Json_Decode$field, 'message', _elm_lang$core$Json_Decode$string)),
	A2(_elm_lang$core$Json_Decode$field, 'username', _elm_lang$core$Json_Decode$string));
var _user$project$App_Talk_TalkDecoder$talkDecoder = _elm_lang$core$Json_Decode$list(_user$project$App_Talk_TalkDecoder$decodeMessage);
var _user$project$App_Talk_TalkDecoder$decodeTalk = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			A2(
				_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
				_elm_lang$core$Json_Decode$succeed(_user$project$App_Talk_TalkModel$Talk),
				A2(_elm_lang$core$Json_Decode$field, 'username', _elm_lang$core$Json_Decode$string)),
			A2(_elm_lang$core$Json_Decode$field, 'unread', _elm_lang$core$Json_Decode$int)),
		A2(
			_elm_lang$core$Json_Decode$field,
			'messages',
			_elm_lang$core$Json_Decode$list(_user$project$App_Talk_TalkDecoder$decodeMessage))),
	A2(_elm_lang$core$Json_Decode$field, 'new_message', _elm_lang$core$Json_Decode$string));
var _user$project$App_Talk_TalkDecoder$decodeTalks = _elm_lang$core$Json_Decode$list(_user$project$App_Talk_TalkDecoder$decodeTalk);

var _user$project$Models$AuthResponse = F4(
	function (a, b, c, d) {
		return {status: a, message: b, token: c, user: d};
	});
var _user$project$Models$Connected = F5(
	function (a, b, c, d, e) {
		return {ctor: 'Connected', _0: a, _1: b, _2: c, _3: d, _4: e};
	});
var _user$project$Models$Connexion = function (a) {
	return {ctor: 'Connexion', _0: a};
};
var _user$project$Models$NotConnected = F2(
	function (a, b) {
		return {ctor: 'NotConnected', _0: a, _1: b};
	});
var _user$project$Models$initialModel = function (route) {
	return A2(_user$project$Models$NotConnected, route, _user$project$Login_LoginModels$initialLoginModel);
};

var _user$project$Ports$storeToken = _elm_lang$core$Native_Platform.outgoingPort(
	'storeToken',
	function (v) {
		return _elm_lang$core$Native_List.toArray(v).map(
			function (v) {
				return v;
			});
	});
var _user$project$Ports$getToken = _elm_lang$core$Native_Platform.outgoingPort(
	'getToken',
	function (v) {
		return null;
	});
var _user$project$Ports$deleteSession = _elm_lang$core$Native_Platform.outgoingPort(
	'deleteSession',
	function (v) {
		return null;
	});
var _user$project$Ports$tryToLocalize = _elm_lang$core$Native_Platform.outgoingPort(
	'tryToLocalize',
	function (v) {
		return null;
	});
var _user$project$Ports$localize = _elm_lang$core$Native_Platform.outgoingPort(
	'localize',
	function (v) {
		return _elm_lang$core$Native_List.toArray(v).map(
			function (v) {
				return v;
			});
	});
var _user$project$Ports$fileSelected = _elm_lang$core$Native_Platform.outgoingPort(
	'fileSelected',
	function (v) {
		return v;
	});
var _user$project$Ports$openNewTab = _elm_lang$core$Native_Platform.outgoingPort(
	'openNewTab',
	function (v) {
		return v;
	});
var _user$project$Ports$tokenRecieved = _elm_lang$core$Native_Platform.incomingPort(
	'tokenRecieved',
	_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string));
var _user$project$Ports$newLocalisation = _elm_lang$core$Native_Platform.incomingPort(
	'newLocalisation',
	_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$float));
var _user$project$Ports$fileContentRead = _elm_lang$core$Native_Platform.incomingPort(
	'fileContentRead',
	A2(
		_elm_lang$core$Json_Decode$andThen,
		function (contents) {
			return A2(
				_elm_lang$core$Json_Decode$andThen,
				function (filename) {
					return _elm_lang$core$Json_Decode$succeed(
						{contents: contents, filename: filename});
				},
				A2(_elm_lang$core$Json_Decode$field, 'filename', _elm_lang$core$Json_Decode$string));
		},
		A2(_elm_lang$core$Json_Decode$field, 'contents', _elm_lang$core$Json_Decode$string)));
var _user$project$Ports$noLocalization = _elm_lang$core$Native_Platform.incomingPort('noLocalization', _elm_lang$core$Json_Decode$bool);
var _user$project$Ports$localized = _elm_lang$core$Native_Platform.incomingPort(
	'localized',
	_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$float));
var _user$project$Ports$ImagePortData = F2(
	function (a, b) {
		return {contents: a, filename: b};
	});

var _user$project$Msgs$UpdateMainImage = function (a) {
	return {ctor: 'UpdateMainImage', _0: a};
};
var _user$project$Msgs$ToggleResetPwdForm = {ctor: 'ToggleResetPwdForm'};
var _user$project$Msgs$ToggleAccountForm = {ctor: 'ToggleAccountForm'};
var _user$project$Msgs$UpdateBirth = function (a) {
	return {ctor: 'UpdateBirth', _0: a};
};
var _user$project$Msgs$ResetSearch = {ctor: 'ResetSearch'};
var _user$project$Msgs$UpdateLocSearch = function (a) {
	return {ctor: 'UpdateLocSearch', _0: a};
};
var _user$project$Msgs$UpdateMaxYearSearch = function (a) {
	return {ctor: 'UpdateMaxYearSearch', _0: a};
};
var _user$project$Msgs$UpdateMinYearSearch = function (a) {
	return {ctor: 'UpdateMinYearSearch', _0: a};
};
var _user$project$Msgs$UpdateSearchTags = function (a) {
	return {ctor: 'UpdateSearchTags', _0: a};
};
var _user$project$Msgs$UpdateSearchLogin = function (a) {
	return {ctor: 'UpdateSearchLogin', _0: a};
};
var _user$project$Msgs$AdvanceSearch = {ctor: 'AdvanceSearch'};
var _user$project$Msgs$BlockUser = function (a) {
	return {ctor: 'BlockUser', _0: a};
};
var _user$project$Msgs$ReportUser = function (a) {
	return {ctor: 'ReportUser', _0: a};
};
var _user$project$Msgs$CloseCurrentTalk = {ctor: 'CloseCurrentTalk'};
var _user$project$Msgs$SetCurrentTalk = function (a) {
	return {ctor: 'SetCurrentTalk', _0: a};
};
var _user$project$Msgs$ResetFilters = {ctor: 'ResetFilters'};
var _user$project$Msgs$ToggleTalksList = {ctor: 'ToggleTalksList'};
var _user$project$Msgs$ToggleAdvanceFilters = {ctor: 'ToggleAdvanceFilters'};
var _user$project$Msgs$UpdateLocFilter = function (a) {
	return {ctor: 'UpdateLocFilter', _0: a};
};
var _user$project$Msgs$UpdateMaxAgeFilter = function (a) {
	return {ctor: 'UpdateMaxAgeFilter', _0: a};
};
var _user$project$Msgs$UpdateMinAgeFilter = function (a) {
	return {ctor: 'UpdateMinAgeFilter', _0: a};
};
var _user$project$Msgs$UpdateTagFilter = function (a) {
	return {ctor: 'UpdateTagFilter', _0: a};
};
var _user$project$Msgs$AddEmo = F2(
	function (a, b) {
		return {ctor: 'AddEmo', _0: a, _1: b};
	});
var _user$project$Msgs$ToggleEmoList = {ctor: 'ToggleEmoList'};
var _user$project$Msgs$ChangeSort = function (a) {
	return {ctor: 'ChangeSort', _0: a};
};
var _user$project$Msgs$GoTo = function (a) {
	return {ctor: 'GoTo', _0: a};
};
var _user$project$Msgs$ChangeImage = F2(
	function (a, b) {
		return {ctor: 'ChangeImage', _0: a, _1: b};
	});
var _user$project$Msgs$Notification = function (a) {
	return {ctor: 'Notification', _0: a};
};
var _user$project$Msgs$UpdateCurrentTime = function (a) {
	return {ctor: 'UpdateCurrentTime', _0: a};
};
var _user$project$Msgs$SetCurrentTime = function (a) {
	return {ctor: 'SetCurrentTime', _0: a};
};
var _user$project$Msgs$DeleteImg = function (a) {
	return {ctor: 'DeleteImg', _0: a};
};
var _user$project$Msgs$ImageRead = function (a) {
	return {ctor: 'ImageRead', _0: a};
};
var _user$project$Msgs$ImageSelected = {ctor: 'ImageSelected'};
var _user$project$Msgs$RemoveTag = function (a) {
	return {ctor: 'RemoveTag', _0: a};
};
var _user$project$Msgs$AddNewTag = {ctor: 'AddNewTag'};
var _user$project$Msgs$AddTag = function (a) {
	return {ctor: 'AddTag', _0: a};
};
var _user$project$Msgs$SearchTag = function (a) {
	return {ctor: 'SearchTag', _0: a};
};
var _user$project$Msgs$UpdateIntIn = function (a) {
	return {ctor: 'UpdateIntIn', _0: a};
};
var _user$project$Msgs$UpdateGender = function (a) {
	return {ctor: 'UpdateGender', _0: a};
};
var _user$project$Msgs$ChangePwd = {ctor: 'ChangePwd'};
var _user$project$Msgs$ResetPwd = {ctor: 'ResetPwd'};
var _user$project$Msgs$UpdateAnim = function (a) {
	return {ctor: 'UpdateAnim', _0: a};
};
var _user$project$Msgs$SaveAccountUpdates = {ctor: 'SaveAccountUpdates'};
var _user$project$Msgs$UpdateEditAccountForm = F2(
	function (a, b) {
		return {ctor: 'UpdateEditAccountForm', _0: a, _1: b};
	});
var _user$project$Msgs$NewLoc = function (a) {
	return {ctor: 'NewLoc', _0: a};
};
var _user$project$Msgs$LocalizeIp = function (a) {
	return {ctor: 'LocalizeIp', _0: a};
};
var _user$project$Msgs$Localize = {ctor: 'Localize'};
var _user$project$Msgs$GetIpLocalisationResponse = function (a) {
	return {ctor: 'GetIpLocalisationResponse', _0: a};
};
var _user$project$Msgs$LoadMap = function (a) {
	return {ctor: 'LoadMap', _0: a};
};
var _user$project$Msgs$FetchTalk = F2(
	function (a, b) {
		return {ctor: 'FetchTalk', _0: a, _1: b};
	});
var _user$project$Msgs$NewMessage = function (a) {
	return {ctor: 'NewMessage', _0: a};
};
var _user$project$Msgs$SendNewMessage = {ctor: 'SendNewMessage'};
var _user$project$Msgs$UpdateNewMessage = function (a) {
	return {ctor: 'UpdateNewMessage', _0: a};
};
var _user$project$Msgs$ToggleAccountMenu = {ctor: 'ToggleAccountMenu'};
var _user$project$Msgs$ToggleLike = function (a) {
	return {ctor: 'ToggleLike', _0: a};
};
var _user$project$Msgs$GoBack = function (a) {
	return {ctor: 'GoBack', _0: a};
};
var _user$project$Msgs$SendLogin = {ctor: 'SendLogin'};
var _user$project$Msgs$NewUser = {ctor: 'NewUser'};
var _user$project$Msgs$UpdateEditPwdForm = F2(
	function (a, b) {
		return {ctor: 'UpdateEditPwdForm', _0: a, _1: b};
	});
var _user$project$Msgs$UpdateResetPwdForm = F2(
	function (a, b) {
		return {ctor: 'UpdateResetPwdForm', _0: a, _1: b};
	});
var _user$project$Msgs$UpdateLoginForm = F2(
	function (a, b) {
		return {ctor: 'UpdateLoginForm', _0: a, _1: b};
	});
var _user$project$Msgs$UpdateNewUserForm = F2(
	function (a, b) {
		return {ctor: 'UpdateNewUserForm', _0: a, _1: b};
	});
var _user$project$Msgs$SaveLocalisation = function (a) {
	return {ctor: 'SaveLocalisation', _0: a};
};
var _user$project$Msgs$SaveToken = function (a) {
	return {ctor: 'SaveToken', _0: a};
};
var _user$project$Msgs$OnLocationChange = function (a) {
	return {ctor: 'OnLocationChange', _0: a};
};
var _user$project$Msgs$UnshowAll = {ctor: 'UnshowAll'};
var _user$project$Msgs$ShowUser = function (a) {
	return {ctor: 'ShowUser', _0: a};
};
var _user$project$Msgs$Logout = {ctor: 'Logout'};
var _user$project$Msgs$NoDataApiResponse = function (a) {
	return {ctor: 'NoDataApiResponse', _0: a};
};
var _user$project$Msgs$ReqTagResponse = function (a) {
	return {ctor: 'ReqTagResponse', _0: a};
};
var _user$project$Msgs$SearchTagResponse = function (a) {
	return {ctor: 'SearchTagResponse', _0: a};
};
var _user$project$Msgs$UpdateFieldResponse = function (a) {
	return {ctor: 'UpdateFieldResponse', _0: a};
};
var _user$project$Msgs$ChangePwdRespone = function (a) {
	return {ctor: 'ChangePwdRespone', _0: a};
};
var _user$project$Msgs$ResetPwdResponse = function (a) {
	return {ctor: 'ResetPwdResponse', _0: a};
};
var _user$project$Msgs$EditAccountResponse = F5(
	function (a, b, c, d, e) {
		return {ctor: 'EditAccountResponse', _0: a, _1: b, _2: c, _3: d, _4: e};
	});
var _user$project$Msgs$SaveLocRespone = function (a) {
	return {ctor: 'SaveLocRespone', _0: a};
};
var _user$project$Msgs$GetTalksResponse = function (a) {
	return {ctor: 'GetTalksResponse', _0: a};
};
var _user$project$Msgs$GetTalkResponse = function (a) {
	return {ctor: 'GetTalkResponse', _0: a};
};
var _user$project$Msgs$NewUserResponse = function (a) {
	return {ctor: 'NewUserResponse', _0: a};
};
var _user$project$Msgs$LoginResponse = function (a) {
	return {ctor: 'LoginResponse', _0: a};
};
var _user$project$Msgs$LikeResponse = function (a) {
	return {ctor: 'LikeResponse', _0: a};
};
var _user$project$Msgs$UserResponse = function (a) {
	return {ctor: 'UserResponse', _0: a};
};
var _user$project$Msgs$SessionUserResponse = F2(
	function (a, b) {
		return {ctor: 'SessionUserResponse', _0: a, _1: b};
	});
var _user$project$Msgs$SearchResponse = function (a) {
	return {ctor: 'SearchResponse', _0: a};
};
var _user$project$Msgs$UsersResponse = function (a) {
	return {ctor: 'UsersResponse', _0: a};
};
var _user$project$Msgs$NoOp = {ctor: 'NoOp'};

var _user$project$App_Talk_TalkCommands$sendMessage = F3(
	function (token, to, message) {
		var body = A2(
			_elm_lang$core$Json_Encode$encode,
			0,
			_elm_lang$core$Json_Encode$object(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'jwt',
						_1: _elm_lang$core$Json_Encode$string(token)
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'action',
							_1: _elm_lang$core$Json_Encode$string('new_message')
						},
						_1: {
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'to',
								_1: _elm_lang$core$Json_Encode$string(to)
							},
							_1: {
								ctor: '::',
								_0: {
									ctor: '_Tuple2',
									_0: 'message',
									_1: _elm_lang$core$Json_Encode$string(message)
								},
								_1: {ctor: '[]'}
							}
						}
					}
				}));
		return A2(_elm_lang$websocket$WebSocket$send, 'ws://localhost:3001/ws', body);
	});
var _user$project$App_Talk_TalkCommands$getTalks = function (token) {
	var url = 'http://localhost:3001/api/talks/all_talks/';
	return A2(
		_elm_lang$http$Http$send,
		_user$project$Msgs$GetTalksResponse,
		A3(
			_user$project$Api_ApiRequest$apiGetRequest,
			_elm_lang$core$Maybe$Just(_user$project$App_Talk_TalkDecoder$decodeTalks),
			token,
			url));
};
var _user$project$App_Talk_TalkCommands$getTalk = F3(
	function (username, update, token) {
		var body = _elm_lang$http$Http$jsonBody(
			_elm_lang$core$Json_Encode$object(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'update',
						_1: _elm_lang$core$Json_Encode$bool(update)
					},
					_1: {ctor: '[]'}
				}));
		var url = A2(_elm_lang$core$Basics_ops['++'], 'http://localhost:3001/api/talks/talk/', username);
		return A2(
			_elm_lang$http$Http$send,
			_user$project$Msgs$GetTalkResponse,
			A4(
				_user$project$Api_ApiRequest$apiPostRequest,
				_elm_lang$core$Maybe$Just(_user$project$App_Talk_TalkDecoder$decodeTalk),
				token,
				url,
				body));
	});

var _user$project$App_Talk_TalkUtils$emoticonList = A2(
	_elm_lang$core$Basics_ops['++'],
	{
		ctor: '::',
		_0: 'em-a',
		_1: {
			ctor: '::',
			_0: 'em-ab',
			_1: {
				ctor: '::',
				_0: 'em-abc',
				_1: {
					ctor: '::',
					_0: 'em-abcd',
					_1: {
						ctor: '::',
						_0: 'em-accept',
						_1: {
							ctor: '::',
							_0: 'em-admission_tickets',
							_1: {
								ctor: '::',
								_0: 'em-adult',
								_1: {
									ctor: '::',
									_0: 'em-aerial_tramway',
									_1: {
										ctor: '::',
										_0: 'em-airplane',
										_1: {
											ctor: '::',
											_0: 'em-airplane_arriving',
											_1: {
												ctor: '::',
												_0: 'em-airplane_departure',
												_1: {
													ctor: '::',
													_0: 'em-alarm_clock',
													_1: {
														ctor: '::',
														_0: 'em-alembic',
														_1: {
															ctor: '::',
															_0: 'em-alien',
															_1: {
																ctor: '::',
																_0: 'em-ambulance',
																_1: {
																	ctor: '::',
																	_0: 'em-amphora',
																	_1: {
																		ctor: '::',
																		_0: 'em-anchor',
																		_1: {
																			ctor: '::',
																			_0: 'em-angel',
																			_1: {
																				ctor: '::',
																				_0: 'em-anger',
																				_1: {
																					ctor: '::',
																					_0: 'em-angry',
																					_1: {
																						ctor: '::',
																						_0: 'em-anguished',
																						_1: {
																							ctor: '::',
																							_0: 'em-ant',
																							_1: {
																								ctor: '::',
																								_0: 'em-apple',
																								_1: {
																									ctor: '::',
																									_0: 'em-aquarius',
																									_1: {
																										ctor: '::',
																										_0: 'em-aries',
																										_1: {
																											ctor: '::',
																											_0: 'em-arrow_backward',
																											_1: {
																												ctor: '::',
																												_0: 'em-arrow_double_down',
																												_1: {
																													ctor: '::',
																													_0: 'em-arrow_double_up',
																													_1: {
																														ctor: '::',
																														_0: 'em-arrow_down',
																														_1: {
																															ctor: '::',
																															_0: 'em-arrow_down_small',
																															_1: {
																																ctor: '::',
																																_0: 'em-arrow_forward',
																																_1: {
																																	ctor: '::',
																																	_0: 'em-arrow_heading_down',
																																	_1: {
																																		ctor: '::',
																																		_0: 'em-arrow_heading_up',
																																		_1: {
																																			ctor: '::',
																																			_0: 'em-arrow_left',
																																			_1: {
																																				ctor: '::',
																																				_0: 'em-arrow_lower_left',
																																				_1: {
																																					ctor: '::',
																																					_0: 'em-arrow_lower_right',
																																					_1: {
																																						ctor: '::',
																																						_0: 'em-arrow_right',
																																						_1: {
																																							ctor: '::',
																																							_0: 'em-arrow_right_hook',
																																							_1: {
																																								ctor: '::',
																																								_0: 'em-arrow_up',
																																								_1: {
																																									ctor: '::',
																																									_0: 'em-arrow_up_down',
																																									_1: {
																																										ctor: '::',
																																										_0: 'em-arrow_up_small',
																																										_1: {
																																											ctor: '::',
																																											_0: 'em-arrow_upper_left',
																																											_1: {
																																												ctor: '::',
																																												_0: 'em-arrow_upper_right',
																																												_1: {
																																													ctor: '::',
																																													_0: 'em-arrows_clockwise',
																																													_1: {
																																														ctor: '::',
																																														_0: 'em-arrows_counterclockwise',
																																														_1: {
																																															ctor: '::',
																																															_0: 'em-art',
																																															_1: {
																																																ctor: '::',
																																																_0: 'em-articulated_lorry',
																																																_1: {
																																																	ctor: '::',
																																																	_0: 'em-astonished',
																																																	_1: {
																																																		ctor: '::',
																																																		_0: 'em-athletic_shoe',
																																																		_1: {
																																																			ctor: '::',
																																																			_0: 'em-atm',
																																																			_1: {
																																																				ctor: '::',
																																																				_0: 'em-atom_symbol',
																																																				_1: {
																																																					ctor: '::',
																																																					_0: 'em-avocado',
																																																					_1: {
																																																						ctor: '::',
																																																						_0: 'em-b',
																																																						_1: {
																																																							ctor: '::',
																																																							_0: 'em-baby',
																																																							_1: {
																																																								ctor: '::',
																																																								_0: 'em-baby_bottle',
																																																								_1: {
																																																									ctor: '::',
																																																									_0: 'em-baby_chick',
																																																									_1: {
																																																										ctor: '::',
																																																										_0: 'em-baby_symbol',
																																																										_1: {
																																																											ctor: '::',
																																																											_0: 'em-back',
																																																											_1: {
																																																												ctor: '::',
																																																												_0: 'em-bacon',
																																																												_1: {
																																																													ctor: '::',
																																																													_0: 'em-badminton_racquet_and_shuttlecock',
																																																													_1: {
																																																														ctor: '::',
																																																														_0: 'em-baggage_claim',
																																																														_1: {
																																																															ctor: '::',
																																																															_0: 'em-baguette_bread',
																																																															_1: {
																																																																ctor: '::',
																																																																_0: 'em-balloon',
																																																																_1: {
																																																																	ctor: '::',
																																																																	_0: 'em-ballot_box_with_ballot',
																																																																	_1: {
																																																																		ctor: '::',
																																																																		_0: 'em-ballot_box_with_check',
																																																																		_1: {
																																																																			ctor: '::',
																																																																			_0: 'em-bamboo',
																																																																			_1: {
																																																																				ctor: '::',
																																																																				_0: 'em-banana',
																																																																				_1: {
																																																																					ctor: '::',
																																																																					_0: 'em-bangbang',
																																																																					_1: {
																																																																						ctor: '::',
																																																																						_0: 'em-bank',
																																																																						_1: {
																																																																							ctor: '::',
																																																																							_0: 'em-bar_chart',
																																																																							_1: {
																																																																								ctor: '::',
																																																																								_0: 'em-barber',
																																																																								_1: {
																																																																									ctor: '::',
																																																																									_0: 'em-barely_sunny',
																																																																									_1: {
																																																																										ctor: '::',
																																																																										_0: 'em-baseball',
																																																																										_1: {
																																																																											ctor: '::',
																																																																											_0: 'em-basketball',
																																																																											_1: {
																																																																												ctor: '::',
																																																																												_0: 'em-bat',
																																																																												_1: {
																																																																													ctor: '::',
																																																																													_0: 'em-bath',
																																																																													_1: {
																																																																														ctor: '::',
																																																																														_0: 'em-bathtub',
																																																																														_1: {
																																																																															ctor: '::',
																																																																															_0: 'em-battery',
																																																																															_1: {
																																																																																ctor: '::',
																																																																																_0: 'em-beach_with_umbrella',
																																																																																_1: {
																																																																																	ctor: '::',
																																																																																	_0: 'em-bear',
																																																																																	_1: {
																																																																																		ctor: '::',
																																																																																		_0: 'em-bearded_person',
																																																																																		_1: {
																																																																																			ctor: '::',
																																																																																			_0: 'em-bed',
																																																																																			_1: {
																																																																																				ctor: '::',
																																																																																				_0: 'em-bee',
																																																																																				_1: {
																																																																																					ctor: '::',
																																																																																					_0: 'em-beer',
																																																																																					_1: {
																																																																																						ctor: '::',
																																																																																						_0: 'em-beers',
																																																																																						_1: {
																																																																																							ctor: '::',
																																																																																							_0: 'em-beetle',
																																																																																							_1: {
																																																																																								ctor: '::',
																																																																																								_0: 'em-beginner',
																																																																																								_1: {
																																																																																									ctor: '::',
																																																																																									_0: 'em-bell',
																																																																																									_1: {
																																																																																										ctor: '::',
																																																																																										_0: 'em-bellhop_bell',
																																																																																										_1: {
																																																																																											ctor: '::',
																																																																																											_0: 'em-bento',
																																																																																											_1: {
																																																																																												ctor: '::',
																																																																																												_0: 'em-bicyclist',
																																																																																												_1: {
																																																																																													ctor: '::',
																																																																																													_0: 'em-bike',
																																																																																													_1: {
																																																																																														ctor: '::',
																																																																																														_0: 'em-bikini',
																																																																																														_1: {
																																																																																															ctor: '::',
																																																																																															_0: 'em-billed_cap',
																																																																																															_1: {
																																																																																																ctor: '::',
																																																																																																_0: 'em-biohazard_sign',
																																																																																																_1: {
																																																																																																	ctor: '::',
																																																																																																	_0: 'em-bird',
																																																																																																	_1: {
																																																																																																		ctor: '::',
																																																																																																		_0: 'em-birthday',
																																																																																																		_1: {
																																																																																																			ctor: '::',
																																																																																																			_0: 'em-black_circle',
																																																																																																			_1: {
																																																																																																				ctor: '::',
																																																																																																				_0: 'em-black_circle_for_record',
																																																																																																				_1: {
																																																																																																					ctor: '::',
																																																																																																					_0: 'em-black_heart',
																																																																																																					_1: {
																																																																																																						ctor: '::',
																																																																																																						_0: 'em-black_joker',
																																																																																																						_1: {
																																																																																																							ctor: '::',
																																																																																																							_0: 'em-black_large_square',
																																																																																																							_1: {
																																																																																																								ctor: '::',
																																																																																																								_0: 'em-black_left_pointing_double_triangle_with_vertical_bar',
																																																																																																								_1: {
																																																																																																									ctor: '::',
																																																																																																									_0: 'em-black_medium_small_square',
																																																																																																									_1: {
																																																																																																										ctor: '::',
																																																																																																										_0: 'em-black_medium_square',
																																																																																																										_1: {
																																																																																																											ctor: '::',
																																																																																																											_0: 'em-black_nib',
																																																																																																											_1: {
																																																																																																												ctor: '::',
																																																																																																												_0: 'em-black_right_pointing_double_triangle_with_vertical_bar',
																																																																																																												_1: {
																																																																																																													ctor: '::',
																																																																																																													_0: 'em-black_right_pointing_triangle_with_double_vertical_bar',
																																																																																																													_1: {
																																																																																																														ctor: '::',
																																																																																																														_0: 'em-black_small_square',
																																																																																																														_1: {
																																																																																																															ctor: '::',
																																																																																																															_0: 'em-black_square_button',
																																																																																																															_1: {
																																																																																																																ctor: '::',
																																																																																																																_0: 'em-black_square_for_stop',
																																																																																																																_1: {
																																																																																																																	ctor: '::',
																																																																																																																	_0: 'em-blossom',
																																																																																																																	_1: {
																																																																																																																		ctor: '::',
																																																																																																																		_0: 'em-blowfish',
																																																																																																																		_1: {
																																																																																																																			ctor: '::',
																																																																																																																			_0: 'em-blue_book',
																																																																																																																			_1: {
																																																																																																																				ctor: '::',
																																																																																																																				_0: 'em-blue_car',
																																																																																																																				_1: {
																																																																																																																					ctor: '::',
																																																																																																																					_0: 'em-blue_heart',
																																																																																																																					_1: {
																																																																																																																						ctor: '::',
																																																																																																																						_0: 'em-blush',
																																																																																																																						_1: {
																																																																																																																							ctor: '::',
																																																																																																																							_0: 'em-boar',
																																																																																																																							_1: {
																																																																																																																								ctor: '::',
																																																																																																																								_0: 'em-boat',
																																																																																																																								_1: {
																																																																																																																									ctor: '::',
																																																																																																																									_0: 'em-bomb',
																																																																																																																									_1: {
																																																																																																																										ctor: '::',
																																																																																																																										_0: 'em-book',
																																																																																																																										_1: {
																																																																																																																											ctor: '::',
																																																																																																																											_0: 'em-bookmark',
																																																																																																																											_1: {
																																																																																																																												ctor: '::',
																																																																																																																												_0: 'em-bookmark_tabs',
																																																																																																																												_1: {
																																																																																																																													ctor: '::',
																																																																																																																													_0: 'em-books',
																																																																																																																													_1: {
																																																																																																																														ctor: '::',
																																																																																																																														_0: 'em-boom',
																																																																																																																														_1: {
																																																																																																																															ctor: '::',
																																																																																																																															_0: 'em-boot',
																																																																																																																															_1: {
																																																																																																																																ctor: '::',
																																																																																																																																_0: 'em-bouquet',
																																																																																																																																_1: {
																																																																																																																																	ctor: '::',
																																																																																																																																	_0: 'em-bow',
																																																																																																																																	_1: {
																																																																																																																																		ctor: '::',
																																																																																																																																		_0: 'em-bow_and_arrow',
																																																																																																																																		_1: {
																																																																																																																																			ctor: '::',
																																																																																																																																			_0: 'em-bowl_with_spoon',
																																																																																																																																			_1: {
																																																																																																																																				ctor: '::',
																																																																																																																																				_0: 'em-bowling',
																																																																																																																																				_1: {
																																																																																																																																					ctor: '::',
																																																																																																																																					_0: 'em-boxing_glove',
																																																																																																																																					_1: {
																																																																																																																																						ctor: '::',
																																																																																																																																						_0: 'em-boy',
																																																																																																																																						_1: {
																																																																																																																																							ctor: '::',
																																																																																																																																							_0: 'em-brain',
																																																																																																																																							_1: {
																																																																																																																																								ctor: '::',
																																																																																																																																								_0: 'em-bread',
																																																																																																																																								_1: {
																																																																																																																																									ctor: '::',
																																																																																																																																									_0: 'em-bride_with_veil',
																																																																																																																																									_1: {
																																																																																																																																										ctor: '::',
																																																																																																																																										_0: 'em-bridge_at_night',
																																																																																																																																										_1: {
																																																																																																																																											ctor: '::',
																																																																																																																																											_0: 'em-briefcase',
																																																																																																																																											_1: {
																																																																																																																																												ctor: '::',
																																																																																																																																												_0: 'em-broccoli',
																																																																																																																																												_1: {
																																																																																																																																													ctor: '::',
																																																																																																																																													_0: 'em-broken_heart',
																																																																																																																																													_1: {
																																																																																																																																														ctor: '::',
																																																																																																																																														_0: 'em-bug',
																																																																																																																																														_1: {
																																																																																																																																															ctor: '::',
																																																																																																																																															_0: 'em-building_construction',
																																																																																																																																															_1: {
																																																																																																																																																ctor: '::',
																																																																																																																																																_0: 'em-bulb',
																																																																																																																																																_1: {
																																																																																																																																																	ctor: '::',
																																																																																																																																																	_0: 'em-bullettrain_front',
																																																																																																																																																	_1: {
																																																																																																																																																		ctor: '::',
																																																																																																																																																		_0: 'em-bullettrain_side',
																																																																																																																																																		_1: {
																																																																																																																																																			ctor: '::',
																																																																																																																																																			_0: 'em-burrito',
																																																																																																																																																			_1: {
																																																																																																																																																				ctor: '::',
																																																																																																																																																				_0: 'em-bus',
																																																																																																																																																				_1: {
																																																																																																																																																					ctor: '::',
																																																																																																																																																					_0: 'em-busstop',
																																																																																																																																																					_1: {
																																																																																																																																																						ctor: '::',
																																																																																																																																																						_0: 'em-bust_in_silhouette',
																																																																																																																																																						_1: {
																																																																																																																																																							ctor: '::',
																																																																																																																																																							_0: 'em-busts_in_silhouette',
																																																																																																																																																							_1: {
																																																																																																																																																								ctor: '::',
																																																																																																																																																								_0: 'em-butterfly',
																																																																																																																																																								_1: {
																																																																																																																																																									ctor: '::',
																																																																																																																																																									_0: 'em-cactus',
																																																																																																																																																									_1: {
																																																																																																																																																										ctor: '::',
																																																																																																																																																										_0: 'em-cake',
																																																																																																																																																										_1: {
																																																																																																																																																											ctor: '::',
																																																																																																																																																											_0: 'em-calendar',
																																																																																																																																																											_1: {
																																																																																																																																																												ctor: '::',
																																																																																																																																																												_0: 'em-call_me_hand',
																																																																																																																																																												_1: {
																																																																																																																																																													ctor: '::',
																																																																																																																																																													_0: 'em-calling',
																																																																																																																																																													_1: {
																																																																																																																																																														ctor: '::',
																																																																																																																																																														_0: 'em-camel',
																																																																																																																																																														_1: {
																																																																																																																																																															ctor: '::',
																																																																																																																																																															_0: 'em-camera',
																																																																																																																																																															_1: {
																																																																																																																																																																ctor: '::',
																																																																																																																																																																_0: 'em-camera_with_flash',
																																																																																																																																																																_1: {
																																																																																																																																																																	ctor: '::',
																																																																																																																																																																	_0: 'em-camping',
																																																																																																																																																																	_1: {
																																																																																																																																																																		ctor: '::',
																																																																																																																																																																		_0: 'em-cancer',
																																																																																																																																																																		_1: {
																																																																																																																																																																			ctor: '::',
																																																																																																																																																																			_0: 'em-candle',
																																																																																																																																																																			_1: {
																																																																																																																																																																				ctor: '::',
																																																																																																																																																																				_0: 'em-candy',
																																																																																																																																																																				_1: {
																																																																																																																																																																					ctor: '::',
																																																																																																																																																																					_0: 'em-canned_food',
																																																																																																																																																																					_1: {
																																																																																																																																																																						ctor: '::',
																																																																																																																																																																						_0: 'em-canoe',
																																																																																																																																																																						_1: {
																																																																																																																																																																							ctor: '::',
																																																																																																																																																																							_0: 'em-capital_abcd',
																																																																																																																																																																							_1: {
																																																																																																																																																																								ctor: '::',
																																																																																																																																																																								_0: 'em-capricorn',
																																																																																																																																																																								_1: {
																																																																																																																																																																									ctor: '::',
																																																																																																																																																																									_0: 'em-car',
																																																																																																																																																																									_1: {
																																																																																																																																																																										ctor: '::',
																																																																																																																																																																										_0: 'em-card_file_box',
																																																																																																																																																																										_1: {
																																																																																																																																																																											ctor: '::',
																																																																																																																																																																											_0: 'em-card_index',
																																																																																																																																																																											_1: {
																																																																																																																																																																												ctor: '::',
																																																																																																																																																																												_0: 'em-card_index_dividers',
																																																																																																																																																																												_1: {
																																																																																																																																																																													ctor: '::',
																																																																																																																																																																													_0: 'em-carousel_horse',
																																																																																																																																																																													_1: {
																																																																																																																																																																														ctor: '::',
																																																																																																																																																																														_0: 'em-carrot',
																																																																																																																																																																														_1: {
																																																																																																																																																																															ctor: '::',
																																																																																																																																																																															_0: 'em-cat',
																																																																																																																																																																															_1: {
																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																_0: 'em-cd',
																																																																																																																																																																																_1: {
																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																	_0: 'em-chains',
																																																																																																																																																																																	_1: {
																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																		_0: 'em-champagne',
																																																																																																																																																																																		_1: {
																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																			_0: 'em-chart',
																																																																																																																																																																																			_1: {
																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																				_0: 'em-chart_with_downwards_trend',
																																																																																																																																																																																				_1: {
																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																					_0: 'em-chart_with_upwards_trend',
																																																																																																																																																																																					_1: {
																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																						_0: 'em-checkered_flag',
																																																																																																																																																																																						_1: {
																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																							_0: 'em-cheese_wedge',
																																																																																																																																																																																							_1: {
																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																								_0: 'em-cherries',
																																																																																																																																																																																								_1: {
																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																									_0: 'em-cherry_blossom',
																																																																																																																																																																																									_1: {
																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																										_0: 'em-chestnut',
																																																																																																																																																																																										_1: {
																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																											_0: 'em-chicken',
																																																																																																																																																																																											_1: {
																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																												_0: 'em-child',
																																																																																																																																																																																												_1: {
																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																													_0: 'em-children_crossing',
																																																																																																																																																																																													_1: {
																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																														_0: 'em-chipmunk',
																																																																																																																																																																																														_1: {
																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																															_0: 'em-chocolate_bar',
																																																																																																																																																																																															_1: {
																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																_0: 'em-chopsticks',
																																																																																																																																																																																																_1: {
																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																	_0: 'em-christmas_tree',
																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																		_0: 'em-church',
																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																			_0: 'em-cinema',
																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																				_0: 'em-circus_tent',
																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																					_0: 'em-city_sunrise',
																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																						_0: 'em-city_sunset',
																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																							_0: 'em-cityscape',
																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																								_0: 'em-cl',
																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																									_0: 'em-clap',
																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																										_0: 'em-clapper',
																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																											_0: 'em-classical_building',
																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																												_0: 'em-clinking_glasses',
																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																													_0: 'em-clipboard',
																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																														_0: 'em-clock',
																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																															_0: 'em-closed_book',
																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																_0: 'em-closed_lock_with_key',
																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																	_0: 'em-closed_umbrella',
																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																		_0: 'em-cloud',
																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																			_0: 'em-clown_face',
																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																				_0: 'em-clubs',
																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																					_0: 'em-cn',
																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																						_0: 'em-coat',
																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																							_0: 'em-cocktail',
																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																								_0: 'em-coconut',
																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																									_0: 'em-coffee',
																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																										_0: 'em-coffin',
																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																											_0: 'em-cold_sweat',
																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																												_0: 'em-comet',
																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																													_0: 'em-compression',
																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																														_0: 'em-computer',
																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																															_0: 'em-confetti_ball',
																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																_0: 'em-confounded',
																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																	_0: 'em-confused',
																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																		_0: 'em-congratulations',
																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																			_0: 'em-construction',
																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																				_0: 'em-construction_worker',
																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																					_0: 'em-control_knobs',
																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																						_0: 'em-convenience_store',
																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																							_0: 'em-cookie',
																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																								_0: 'em-cool',
																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																									_0: 'em-cop',
																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																										_0: 'em-copyright',
																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																											_0: 'em-corn',
																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																												_0: 'em-couch_and_lamp',
																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																													_0: 'em-couple',
																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																														_0: 'em-couple_with_heart',
																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																															_0: 'em-couplekiss',
																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																_0: 'em-cow',
																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																	_0: 'em-crab',
																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																		_0: 'em-credit_card',
																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																			_0: 'em-crescent_moon',
																																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																																				_0: 'em-cricket',
																																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																																					_0: 'em-cricket_bat_and_ball',
																																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																																						_0: 'em-crocodile',
																																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																																							_0: 'em-croissant',
																																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																																								_0: 'em-crossed_flags',
																																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																																									_0: 'em-crossed_swords',
																																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																																										_0: 'em-crown',
																																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																																											_0: 'em-cry',
																																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																																												_0: 'em-crying_cat_face',
																																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																																													_0: 'em-crystal_ball',
																																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																																														_0: 'em-cucumber',
																																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																																															_0: 'em-cup_with_straw',
																																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																																_0: 'em-cupid',
																																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																																	_0: 'em-curling_stone',
																																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																																		_0: 'em-curly_loop',
																																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																																			_0: 'em-currency_exchange',
																																																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																																																				_0: 'em-curry',
																																																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																																																					_0: 'em-custard',
																																																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																																																						_0: 'em-customs',
																																																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																																																							_0: 'em-cut_of_meat',
																																																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																																																								_0: 'em-cyclone',
																																																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																																																									_0: 'em-dagger_knife',
																																																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																																																										_0: 'em-dancer',
																																																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																																																											_0: 'em-dancers',
																																																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																																																												_0: 'em-dango',
																																																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																																																													_0: 'em-dark_sunglasses',
																																																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																																																														_0: 'em-dart',
																																																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																																																															_0: 'em-dash',
																																																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																																																_0: 'em-date',
																																																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																																																	_0: 'em-de',
																																																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																																																		_0: 'em-deciduous_tree',
																																																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																																																			_0: 'em-deer',
																																																																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																																																																				_0: 'em-department_store',
																																																																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																																																																					_0: 'em-derelict_house_building',
																																																																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																																																																						_0: 'em-desert',
																																																																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																																																																							_0: 'em-desert_island',
																																																																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																																																																								_0: 'em-desktop_computer',
																																																																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																																																																									_0: 'em-diamond_shape_with_a_dot_inside',
																																																																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																																																																										_0: 'em-diamonds',
																																																																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																																																																											_0: 'em-disappointed',
																																																																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																																																																												_0: 'em-disappointed_relieved',
																																																																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																																																																													_0: 'em-dizzy',
																																																																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																																																																														_0: 'em-dizzy_face',
																																																																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																																																																															_0: 'em-do_not_litter',
																																																																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																																																																_0: 'em-dog',
																																																																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																																																																	_0: 'em-dollar',
																																																																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																																																																		_0: 'em-dolls',
																																																																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																																																																			_0: 'em-dolphin',
																																																																																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																																																																																				_0: 'em-door',
																																																																																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																																																																																					_0: 'em-double_vertical_bar',
																																																																																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																																																																																						_0: 'em-doughnut',
																																																																																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																																																																																							_0: 'em-dove_of_peace',
																																																																																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																																																																																								_0: 'em-dragon',
																																																																																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																																																																																									_0: 'em-dragon_face',
																																																																																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																																																																																										_0: 'em-dress',
																																																																																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																																																																																											_0: 'em-dromedary_camel',
																																																																																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																																																																																												_0: 'em-drooling_face',
																																																																																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																																																																																													_0: 'em-droplet',
																																																																																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																																																																																														_0: 'em-drum_with_drumsticks',
																																																																																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																																																																																															_0: 'em-duck',
																																																																																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																																																																																_0: 'em-dumpling',
																																																																																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																																																																																	_0: 'em-dvd',
																																																																																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																																																																																		_0: 'em-eagle',
																																																																																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																																																																																			_0: 'em-ear',
																																																																																																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																																																																																																				_0: 'em-ear_of_rice',
																																																																																																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																																																																																																					_0: 'em-earth_africa',
																																																																																																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																																																																																																						_0: 'em-earth_americas',
																																																																																																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																																																																																																							_0: 'em-earth_asia',
																																																																																																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																																																																																																								_0: 'em-egg',
																																																																																																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																																																																																																									_0: 'em-eggplant',
																																																																																																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																																																																																																										_0: 'em-eight',
																																																																																																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																																																																																																											_0: 'em-eight_pointed_black_star',
																																																																																																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																																																																																																												_0: 'em-eight_spoked_asterisk',
																																																																																																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																																																																																																													_0: 'em-eject',
																																																																																																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																																																																																																														_0: 'em-electric_plug',
																																																																																																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																																																																																																															_0: 'em-elephant',
																																																																																																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																																																																																																_0: 'em-elf',
																																																																																																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																																																																																																	_0: 'em-email',
																																																																																																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																																																																																																		_0: 'em-end',
																																																																																																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																																																																																																			_0: 'em-envelope_with_arrow',
																																																																																																																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																																																																																																																				_0: 'em-es',
																																																																																																																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																																																																																																																					_0: 'em-euro',
																																																																																																																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																																																																																																																						_0: 'em-european_castle',
																																																																																																																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																																																																																																																							_0: 'em-european_post_office',
																																																																																																																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																																																																																																																								_0: 'em-evergreen_tree',
																																																																																																																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																																																																																																																									_0: 'em-exclamation',
																																																																																																																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																																																																																																																										_0: 'em-expressionless',
																																																																																																																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																																																																																																																											_0: 'em-eye',
																																																																																																																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																																																																																																																												_0: 'em-eyeglasses',
																																																																																																																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																																																																																																																													_0: 'em-eyes',
																																																																																																																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																																																																																																																														_0: 'em-face_palm',
																																																																																																																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																																																																																																																															_0: 'em-face_with_cowboy_hat',
																																																																																																																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																																																																																																																_0: 'em-face_with_finger_covering_closed_lips',
																																																																																																																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																																																																																																																	_0: 'em-face_with_head_bandage',
																																																																																																																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																																																																																																																		_0: 'em-face_with_monocle',
																																																																																																																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																																																																																																																			_0: 'em-face_with_one_eyebrow_raised',
																																																																																																																																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																																																																																																																																				_0: 'em-face_with_open_mouth_vomiting',
																																																																																																																																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																																																																																																																																					_0: 'em-face_with_rolling_eyes',
																																																																																																																																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																																																																																																																																						_0: 'em-face_with_thermometer',
																																																																																																																																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																																																																																																																																							_0: 'em-facepunch',
																																																																																																																																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																																																																																																																																								_0: 'em-factory',
																																																																																																																																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																																																																																																																																									_0: 'em-fairy',
																																																																																																																																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																																																																																																																																										_0: 'em-fallen_leaf',
																																																																																																																																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																																																																																																																																											_0: 'em-family',
																																																																																																																																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																																																																																																																																												_0: 'em-fast_forward',
																																																																																																																																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																																																																																																																																													_0: 'em-fax',
																																																																																																																																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																																																																																																																																														_0: 'em-fearful',
																																																																																																																																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																																																																																																																																															_0: 'em-feet',
																																																																																																																																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																_0: 'em-female_elf',
																																																																																																																																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																	_0: 'em-female_fairy',
																																																																																																																																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																		_0: 'em-female_genie',
																																																																																																																																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																			_0: 'em-female_mage',
																																																																																																																																																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																				_0: 'em-female_sign',
																																																																																																																																																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																					_0: 'em-female_vampire',
																																																																																																																																																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																						_0: 'em-female_zombie',
																																																																																																																																																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																							_0: 'em-fencer',
																																																																																																																																																																																																																																																																																																																																																																							_1: {ctor: '[]'}
																																																																																																																																																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																}
																																																																																																																																																																																																																															}
																																																																																																																																																																																																																														}
																																																																																																																																																																																																																													}
																																																																																																																																																																																																																												}
																																																																																																																																																																																																																											}
																																																																																																																																																																																																																										}
																																																																																																																																																																																																																									}
																																																																																																																																																																																																																								}
																																																																																																																																																																																																																							}
																																																																																																																																																																																																																						}
																																																																																																																																																																																																																					}
																																																																																																																																																																																																																				}
																																																																																																																																																																																																																			}
																																																																																																																																																																																																																		}
																																																																																																																																																																																																																	}
																																																																																																																																																																																																																}
																																																																																																																																																																																																															}
																																																																																																																																																																																																														}
																																																																																																																																																																																																													}
																																																																																																																																																																																																												}
																																																																																																																																																																																																											}
																																																																																																																																																																																																										}
																																																																																																																																																																																																									}
																																																																																																																																																																																																								}
																																																																																																																																																																																																							}
																																																																																																																																																																																																						}
																																																																																																																																																																																																					}
																																																																																																																																																																																																				}
																																																																																																																																																																																																			}
																																																																																																																																																																																																		}
																																																																																																																																																																																																	}
																																																																																																																																																																																																}
																																																																																																																																																																																															}
																																																																																																																																																																																														}
																																																																																																																																																																																													}
																																																																																																																																																																																												}
																																																																																																																																																																																											}
																																																																																																																																																																																										}
																																																																																																																																																																																									}
																																																																																																																																																																																								}
																																																																																																																																																																																							}
																																																																																																																																																																																						}
																																																																																																																																																																																					}
																																																																																																																																																																																				}
																																																																																																																																																																																			}
																																																																																																																																																																																		}
																																																																																																																																																																																	}
																																																																																																																																																																																}
																																																																																																																																																																															}
																																																																																																																																																																														}
																																																																																																																																																																													}
																																																																																																																																																																												}
																																																																																																																																																																											}
																																																																																																																																																																										}
																																																																																																																																																																									}
																																																																																																																																																																								}
																																																																																																																																																																							}
																																																																																																																																																																						}
																																																																																																																																																																					}
																																																																																																																																																																				}
																																																																																																																																																																			}
																																																																																																																																																																		}
																																																																																																																																																																	}
																																																																																																																																																																}
																																																																																																																																																															}
																																																																																																																																																														}
																																																																																																																																																													}
																																																																																																																																																												}
																																																																																																																																																											}
																																																																																																																																																										}
																																																																																																																																																									}
																																																																																																																																																								}
																																																																																																																																																							}
																																																																																																																																																						}
																																																																																																																																																					}
																																																																																																																																																				}
																																																																																																																																																			}
																																																																																																																																																		}
																																																																																																																																																	}
																																																																																																																																																}
																																																																																																																																															}
																																																																																																																																														}
																																																																																																																																													}
																																																																																																																																												}
																																																																																																																																											}
																																																																																																																																										}
																																																																																																																																									}
																																																																																																																																								}
																																																																																																																																							}
																																																																																																																																						}
																																																																																																																																					}
																																																																																																																																				}
																																																																																																																																			}
																																																																																																																																		}
																																																																																																																																	}
																																																																																																																																}
																																																																																																																															}
																																																																																																																														}
																																																																																																																													}
																																																																																																																												}
																																																																																																																											}
																																																																																																																										}
																																																																																																																									}
																																																																																																																								}
																																																																																																																							}
																																																																																																																						}
																																																																																																																					}
																																																																																																																				}
																																																																																																																			}
																																																																																																																		}
																																																																																																																	}
																																																																																																																}
																																																																																																															}
																																																																																																														}
																																																																																																													}
																																																																																																												}
																																																																																																											}
																																																																																																										}
																																																																																																									}
																																																																																																								}
																																																																																																							}
																																																																																																						}
																																																																																																					}
																																																																																																				}
																																																																																																			}
																																																																																																		}
																																																																																																	}
																																																																																																}
																																																																																															}
																																																																																														}
																																																																																													}
																																																																																												}
																																																																																											}
																																																																																										}
																																																																																									}
																																																																																								}
																																																																																							}
																																																																																						}
																																																																																					}
																																																																																				}
																																																																																			}
																																																																																		}
																																																																																	}
																																																																																}
																																																																															}
																																																																														}
																																																																													}
																																																																												}
																																																																											}
																																																																										}
																																																																									}
																																																																								}
																																																																							}
																																																																						}
																																																																					}
																																																																				}
																																																																			}
																																																																		}
																																																																	}
																																																																}
																																																															}
																																																														}
																																																													}
																																																												}
																																																											}
																																																										}
																																																									}
																																																								}
																																																							}
																																																						}
																																																					}
																																																				}
																																																			}
																																																		}
																																																	}
																																																}
																																															}
																																														}
																																													}
																																												}
																																											}
																																										}
																																									}
																																								}
																																							}
																																						}
																																					}
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	},
	A2(
		_elm_lang$core$Basics_ops['++'],
		{
			ctor: '::',
			_0: 'em-ferris_wheel',
			_1: {
				ctor: '::',
				_0: 'em-ferry',
				_1: {
					ctor: '::',
					_0: 'em-field_hockey_stick_and_ball',
					_1: {
						ctor: '::',
						_0: 'em-file_cabinet',
						_1: {
							ctor: '::',
							_0: 'em-file_folder',
							_1: {
								ctor: '::',
								_0: 'em-film_frames',
								_1: {
									ctor: '::',
									_0: 'em-film_projector',
									_1: {
										ctor: '::',
										_0: 'em-fire',
										_1: {
											ctor: '::',
											_0: 'em-fire_engine',
											_1: {
												ctor: '::',
												_0: 'em-fireworks',
												_1: {
													ctor: '::',
													_0: 'em-first_place_medal',
													_1: {
														ctor: '::',
														_0: 'em-first_quarter_moon',
														_1: {
															ctor: '::',
															_0: 'em-first_quarter_moon_with_face',
															_1: {
																ctor: '::',
																_0: 'em-fish',
																_1: {
																	ctor: '::',
																	_0: 'em-fish_cake',
																	_1: {
																		ctor: '::',
																		_0: 'em-fishing_pole_and_fish',
																		_1: {
																			ctor: '::',
																			_0: 'em-fist',
																			_1: {
																				ctor: '::',
																				_0: 'em-five',
																				_1: {
																					ctor: '::',
																					_0: 'em-flags',
																					_1: {
																						ctor: '::',
																						_0: 'em-flashlight',
																						_1: {
																							ctor: '::',
																							_0: 'em-fleur_de_lis',
																							_1: {
																								ctor: '::',
																								_0: 'em-floppy_disk',
																								_1: {
																									ctor: '::',
																									_0: 'em-flower_playing_cards',
																									_1: {
																										ctor: '::',
																										_0: 'em-flushed',
																										_1: {
																											ctor: '::',
																											_0: 'em-flying_saucer',
																											_1: {
																												ctor: '::',
																												_0: 'em-fog',
																												_1: {
																													ctor: '::',
																													_0: 'em-foggy',
																													_1: {
																														ctor: '::',
																														_0: 'em-football',
																														_1: {
																															ctor: '::',
																															_0: 'em-footprints',
																															_1: {
																																ctor: '::',
																																_0: 'em-fork_and_knife',
																																_1: {
																																	ctor: '::',
																																	_0: 'em-fortune_cookie',
																																	_1: {
																																		ctor: '::',
																																		_0: 'em-fountain',
																																		_1: {
																																			ctor: '::',
																																			_0: 'em-four',
																																			_1: {
																																				ctor: '::',
																																				_0: 'em-four_leaf_clover',
																																				_1: {
																																					ctor: '::',
																																					_0: 'em-fox_face',
																																					_1: {
																																						ctor: '::',
																																						_0: 'em-fr',
																																						_1: {
																																							ctor: '::',
																																							_0: 'em-frame_with_picture',
																																							_1: {
																																								ctor: '::',
																																								_0: 'em-free',
																																								_1: {
																																									ctor: '::',
																																									_0: 'em-fried_egg',
																																									_1: {
																																										ctor: '::',
																																										_0: 'em-fried_shrimp',
																																										_1: {
																																											ctor: '::',
																																											_0: 'em-fries',
																																											_1: {
																																												ctor: '::',
																																												_0: 'em-frog',
																																												_1: {
																																													ctor: '::',
																																													_0: 'em-frowning',
																																													_1: {
																																														ctor: '::',
																																														_0: 'em-fuelpump',
																																														_1: {
																																															ctor: '::',
																																															_0: 'em-full_moon',
																																															_1: {
																																																ctor: '::',
																																																_0: 'em-full_moon_with_face',
																																																_1: {
																																																	ctor: '::',
																																																	_0: 'em-funeral_urn',
																																																	_1: {
																																																		ctor: '::',
																																																		_0: 'em-game_die',
																																																		_1: {
																																																			ctor: '::',
																																																			_0: 'em-gb',
																																																			_1: {
																																																				ctor: '::',
																																																				_0: 'em-gear',
																																																				_1: {
																																																					ctor: '::',
																																																					_0: 'em-gem',
																																																					_1: {
																																																						ctor: '::',
																																																						_0: 'em-gemini',
																																																						_1: {
																																																							ctor: '::',
																																																							_0: 'em-genie',
																																																							_1: {
																																																								ctor: '::',
																																																								_0: 'em-ghost',
																																																								_1: {
																																																									ctor: '::',
																																																									_0: 'em-gift',
																																																									_1: {
																																																										ctor: '::',
																																																										_0: 'em-gift_heart',
																																																										_1: {
																																																											ctor: '::',
																																																											_0: 'em-giraffe_face',
																																																											_1: {
																																																												ctor: '::',
																																																												_0: 'em-girl',
																																																												_1: {
																																																													ctor: '::',
																																																													_0: 'em-glass_of_milk',
																																																													_1: {
																																																														ctor: '::',
																																																														_0: 'em-globe_with_meridians',
																																																														_1: {
																																																															ctor: '::',
																																																															_0: 'em-gloves',
																																																															_1: {
																																																																ctor: '::',
																																																																_0: 'em-goal_net',
																																																																_1: {
																																																																	ctor: '::',
																																																																	_0: 'em-goat',
																																																																	_1: {
																																																																		ctor: '::',
																																																																		_0: 'em-golf',
																																																																		_1: {
																																																																			ctor: '::',
																																																																			_0: 'em-golfer',
																																																																			_1: {
																																																																				ctor: '::',
																																																																				_0: 'em-gorilla',
																																																																				_1: {
																																																																					ctor: '::',
																																																																					_0: 'em-grapes',
																																																																					_1: {
																																																																						ctor: '::',
																																																																						_0: 'em-green_apple',
																																																																						_1: {
																																																																							ctor: '::',
																																																																							_0: 'em-green_book',
																																																																							_1: {
																																																																								ctor: '::',
																																																																								_0: 'em-green_heart',
																																																																								_1: {
																																																																									ctor: '::',
																																																																									_0: 'em-green_salad',
																																																																									_1: {
																																																																										ctor: '::',
																																																																										_0: 'em-grey_exclamation',
																																																																										_1: {
																																																																											ctor: '::',
																																																																											_0: 'em-grey_question',
																																																																											_1: {
																																																																												ctor: '::',
																																																																												_0: 'em-grimacing',
																																																																												_1: {
																																																																													ctor: '::',
																																																																													_0: 'em-grin',
																																																																													_1: {
																																																																														ctor: '::',
																																																																														_0: 'em-grinning',
																																																																														_1: {
																																																																															ctor: '::',
																																																																															_0: 'em-grinning_face_with_one_large_and_one_small_eye',
																																																																															_1: {
																																																																																ctor: '::',
																																																																																_0: 'em-grinning_face_with_star_eyes',
																																																																																_1: {
																																																																																	ctor: '::',
																																																																																	_0: 'em-guardsman',
																																																																																	_1: {
																																																																																		ctor: '::',
																																																																																		_0: 'em-guitar',
																																																																																		_1: {
																																																																																			ctor: '::',
																																																																																			_0: 'em-gun',
																																																																																			_1: {
																																																																																				ctor: '::',
																																																																																				_0: 'em-haircut',
																																																																																				_1: {
																																																																																					ctor: '::',
																																																																																					_0: 'em-hamburger',
																																																																																					_1: {
																																																																																						ctor: '::',
																																																																																						_0: 'em-hammer',
																																																																																						_1: {
																																																																																							ctor: '::',
																																																																																							_0: 'em-hammer_and_pick',
																																																																																							_1: {
																																																																																								ctor: '::',
																																																																																								_0: 'em-hammer_and_wrench',
																																																																																								_1: {
																																																																																									ctor: '::',
																																																																																									_0: 'em-hamster',
																																																																																									_1: {
																																																																																										ctor: '::',
																																																																																										_0: 'em-hand',
																																																																																										_1: {
																																																																																											ctor: '::',
																																																																																											_0: 'em-hand_with_index_and_middle_fingers_crossed',
																																																																																											_1: {
																																																																																												ctor: '::',
																																																																																												_0: 'em-handbag',
																																																																																												_1: {
																																																																																													ctor: '::',
																																																																																													_0: 'em-handball',
																																																																																													_1: {
																																																																																														ctor: '::',
																																																																																														_0: 'em-handshake',
																																																																																														_1: {
																																																																																															ctor: '::',
																																																																																															_0: 'em-hankey',
																																																																																															_1: {
																																																																																																ctor: '::',
																																																																																																_0: 'em-hash',
																																																																																																_1: {
																																																																																																	ctor: '::',
																																																																																																	_0: 'em-hatched_chick',
																																																																																																	_1: {
																																																																																																		ctor: '::',
																																																																																																		_0: 'em-hatching_chick',
																																																																																																		_1: {
																																																																																																			ctor: '::',
																																																																																																			_0: 'em-headphones',
																																																																																																			_1: {
																																																																																																				ctor: '::',
																																																																																																				_0: 'em-hear_no_evil',
																																																																																																				_1: {
																																																																																																					ctor: '::',
																																																																																																					_0: 'em-heart',
																																																																																																					_1: {
																																																																																																						ctor: '::',
																																																																																																						_0: 'em-heart_decoration',
																																																																																																						_1: {
																																																																																																							ctor: '::',
																																																																																																							_0: 'em-heart_eyes',
																																																																																																							_1: {
																																																																																																								ctor: '::',
																																																																																																								_0: 'em-heart_eyes_cat',
																																																																																																								_1: {
																																																																																																									ctor: '::',
																																																																																																									_0: 'em-heartbeat',
																																																																																																									_1: {
																																																																																																										ctor: '::',
																																																																																																										_0: 'em-heartpulse',
																																																																																																										_1: {
																																																																																																											ctor: '::',
																																																																																																											_0: 'em-hearts',
																																																																																																											_1: {
																																																																																																												ctor: '::',
																																																																																																												_0: 'em-heavy_check_mark',
																																																																																																												_1: {
																																																																																																													ctor: '::',
																																																																																																													_0: 'em-heavy_division_sign',
																																																																																																													_1: {
																																																																																																														ctor: '::',
																																																																																																														_0: 'em-heavy_dollar_sign',
																																																																																																														_1: {
																																																																																																															ctor: '::',
																																																																																																															_0: 'em-heavy_heart_exclamation_mark_ornament',
																																																																																																															_1: {
																																																																																																																ctor: '::',
																																																																																																																_0: 'em-heavy_minus_sign',
																																																																																																																_1: {
																																																																																																																	ctor: '::',
																																																																																																																	_0: 'em-heavy_multiplication_x',
																																																																																																																	_1: {
																																																																																																																		ctor: '::',
																																																																																																																		_0: 'em-heavy_plus_sign',
																																																																																																																		_1: {
																																																																																																																			ctor: '::',
																																																																																																																			_0: 'em-hedgehog',
																																																																																																																			_1: {
																																																																																																																				ctor: '::',
																																																																																																																				_0: 'em-helicopter',
																																																																																																																				_1: {
																																																																																																																					ctor: '::',
																																																																																																																					_0: 'em-helmet_with_white_cross',
																																																																																																																					_1: {
																																																																																																																						ctor: '::',
																																																																																																																						_0: 'em-herb',
																																																																																																																						_1: {
																																																																																																																							ctor: '::',
																																																																																																																							_0: 'em-hibiscus',
																																																																																																																							_1: {
																																																																																																																								ctor: '::',
																																																																																																																								_0: 'em-high_brightness',
																																																																																																																								_1: {
																																																																																																																									ctor: '::',
																																																																																																																									_0: 'em-high_heel',
																																																																																																																									_1: {
																																																																																																																										ctor: '::',
																																																																																																																										_0: 'em-hocho',
																																																																																																																										_1: {
																																																																																																																											ctor: '::',
																																																																																																																											_0: 'em-hole',
																																																																																																																											_1: {
																																																																																																																												ctor: '::',
																																																																																																																												_0: 'em-honey_pot',
																																																																																																																												_1: {
																																																																																																																													ctor: '::',
																																																																																																																													_0: 'em-horse',
																																																																																																																													_1: {
																																																																																																																														ctor: '::',
																																																																																																																														_0: 'em-horse_racing',
																																																																																																																														_1: {
																																																																																																																															ctor: '::',
																																																																																																																															_0: 'em-hospital',
																																																																																																																															_1: {
																																																																																																																																ctor: '::',
																																																																																																																																_0: 'em-hot_pepper',
																																																																																																																																_1: {
																																																																																																																																	ctor: '::',
																																																																																																																																	_0: 'em-hotdog',
																																																																																																																																	_1: {
																																																																																																																																		ctor: '::',
																																																																																																																																		_0: 'em-hotel',
																																																																																																																																		_1: {
																																																																																																																																			ctor: '::',
																																																																																																																																			_0: 'em-hotsprings',
																																																																																																																																			_1: {
																																																																																																																																				ctor: '::',
																																																																																																																																				_0: 'em-hourglass',
																																																																																																																																				_1: {
																																																																																																																																					ctor: '::',
																																																																																																																																					_0: 'em-hourglass_flowing_sand',
																																																																																																																																					_1: {
																																																																																																																																						ctor: '::',
																																																																																																																																						_0: 'em-house',
																																																																																																																																						_1: {
																																																																																																																																							ctor: '::',
																																																																																																																																							_0: 'em-house_buildings',
																																																																																																																																							_1: {
																																																																																																																																								ctor: '::',
																																																																																																																																								_0: 'em-house_with_garden',
																																																																																																																																								_1: {
																																																																																																																																									ctor: '::',
																																																																																																																																									_0: 'em-hugging_face',
																																																																																																																																									_1: {
																																																																																																																																										ctor: '::',
																																																																																																																																										_0: 'em-hushed',
																																																																																																																																										_1: {
																																																																																																																																											ctor: '::',
																																																																																																																																											_0: 'em-i_love_you_hand_sign',
																																																																																																																																											_1: {
																																																																																																																																												ctor: '::',
																																																																																																																																												_0: 'em-ice_cream',
																																																																																																																																												_1: {
																																																																																																																																													ctor: '::',
																																																																																																																																													_0: 'em-ice_hockey_stick_and_puck',
																																																																																																																																													_1: {
																																																																																																																																														ctor: '::',
																																																																																																																																														_0: 'em-ice_skate',
																																																																																																																																														_1: {
																																																																																																																																															ctor: '::',
																																																																																																																																															_0: 'em-icecream',
																																																																																																																																															_1: {
																																																																																																																																																ctor: '::',
																																																																																																																																																_0: 'em-id',
																																																																																																																																																_1: {
																																																																																																																																																	ctor: '::',
																																																																																																																																																	_0: 'em-ideograph_advantage',
																																																																																																																																																	_1: {
																																																																																																																																																		ctor: '::',
																																																																																																																																																		_0: 'em-imp',
																																																																																																																																																		_1: {
																																																																																																																																																			ctor: '::',
																																																																																																																																																			_0: 'em-inbox_tray',
																																																																																																																																																			_1: {
																																																																																																																																																				ctor: '::',
																																																																																																																																																				_0: 'em-incoming_envelope',
																																																																																																																																																				_1: {
																																																																																																																																																					ctor: '::',
																																																																																																																																																					_0: 'em-information_desk_person',
																																																																																																																																																					_1: {
																																																																																																																																																						ctor: '::',
																																																																																																																																																						_0: 'em-information_source',
																																																																																																																																																						_1: {
																																																																																																																																																							ctor: '::',
																																																																																																																																																							_0: 'em-innocent',
																																																																																																																																																							_1: {
																																																																																																																																																								ctor: '::',
																																																																																																																																																								_0: 'em-interrobang',
																																																																																																																																																								_1: {
																																																																																																																																																									ctor: '::',
																																																																																																																																																									_0: 'em-iphone',
																																																																																																																																																									_1: {
																																																																																																																																																										ctor: '::',
																																																																																																																																																										_0: 'em-it',
																																																																																																																																																										_1: {
																																																																																																																																																											ctor: '::',
																																																																																																																																																											_0: 'em-izakaya_lantern',
																																																																																																																																																											_1: {
																																																																																																																																																												ctor: '::',
																																																																																																																																																												_0: 'em-jack_o_lantern',
																																																																																																																																																												_1: {
																																																																																																																																																													ctor: '::',
																																																																																																																																																													_0: 'em-japan',
																																																																																																																																																													_1: {
																																																																																																																																																														ctor: '::',
																																																																																																																																																														_0: 'em-japanese_castle',
																																																																																																																																																														_1: {
																																																																																																																																																															ctor: '::',
																																																																																																																																																															_0: 'em-japanese_goblin',
																																																																																																																																																															_1: {
																																																																																																																																																																ctor: '::',
																																																																																																																																																																_0: 'em-japanese_ogre',
																																																																																																																																																																_1: {
																																																																																																																																																																	ctor: '::',
																																																																																																																																																																	_0: 'em-jeans',
																																																																																																																																																																	_1: {
																																																																																																																																																																		ctor: '::',
																																																																																																																																																																		_0: 'em-joy',
																																																																																																																																																																		_1: {
																																																																																																																																																																			ctor: '::',
																																																																																																																																																																			_0: 'em-joy_cat',
																																																																																																																																																																			_1: {
																																																																																																																																																																				ctor: '::',
																																																																																																																																																																				_0: 'em-joystick',
																																																																																																																																																																				_1: {
																																																																																																																																																																					ctor: '::',
																																																																																																																																																																					_0: 'em-jp',
																																																																																																																																																																					_1: {
																																																																																																																																																																						ctor: '::',
																																																																																																																																																																						_0: 'em-juggling',
																																																																																																																																																																						_1: {
																																																																																																																																																																							ctor: '::',
																																																																																																																																																																							_0: 'em-kaaba',
																																																																																																																																																																							_1: {
																																																																																																																																																																								ctor: '::',
																																																																																																																																																																								_0: 'em-key',
																																																																																																																																																																								_1: {
																																																																																																																																																																									ctor: '::',
																																																																																																																																																																									_0: 'em-keyboard',
																																																																																																																																																																									_1: {
																																																																																																																																																																										ctor: '::',
																																																																																																																																																																										_0: 'em-keycap_star',
																																																																																																																																																																										_1: {
																																																																																																																																																																											ctor: '::',
																																																																																																																																																																											_0: 'em-keycap_ten',
																																																																																																																																																																											_1: {
																																																																																																																																																																												ctor: '::',
																																																																																																																																																																												_0: 'em-kimono',
																																																																																																																																																																												_1: {
																																																																																																																																																																													ctor: '::',
																																																																																																																																																																													_0: 'em-kiss',
																																																																																																																																																																													_1: {
																																																																																																																																																																														ctor: '::',
																																																																																																																																																																														_0: 'em-kissing',
																																																																																																																																																																														_1: {
																																																																																																																																																																															ctor: '::',
																																																																																																																																																																															_0: 'em-kissing_cat',
																																																																																																																																																																															_1: {
																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																_0: 'em-kissing_closed_eyes',
																																																																																																																																																																																_1: {
																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																	_0: 'em-kissing_heart',
																																																																																																																																																																																	_1: {
																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																		_0: 'em-kissing_smiling_eyes',
																																																																																																																																																																																		_1: {
																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																			_0: 'em-kiwifruit',
																																																																																																																																																																																			_1: {
																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																				_0: 'em-knife_fork_plate',
																																																																																																																																																																																				_1: {
																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																					_0: 'em-koala',
																																																																																																																																																																																					_1: {
																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																						_0: 'em-koko',
																																																																																																																																																																																						_1: {
																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																							_0: 'em-kr',
																																																																																																																																																																																							_1: {
																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																								_0: 'em-label',
																																																																																																																																																																																								_1: {
																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																									_0: 'em-large_blue_circle',
																																																																																																																																																																																									_1: {
																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																										_0: 'em-large_blue_diamond',
																																																																																																																																																																																										_1: {
																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																											_0: 'em-large_orange_diamond',
																																																																																																																																																																																											_1: {
																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																												_0: 'em-last_quarter_moon',
																																																																																																																																																																																												_1: {
																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																													_0: 'em-last_quarter_moon_with_face',
																																																																																																																																																																																													_1: {
																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																														_0: 'em-latin_cross',
																																																																																																																																																																																														_1: {
																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																															_0: 'em-laughing',
																																																																																																																																																																																															_1: {
																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																_0: 'em-leaves',
																																																																																																																																																																																																_1: {
																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																	_0: 'em-ledger',
																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																		_0: 'em-left_luggage',
																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																			_0: 'em-left_right_arrow',
																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																				_0: 'em-left_speech_bubble',
																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																					_0: 'em-leftwards_arrow_with_hook',
																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																						_0: 'em-lemon',
																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																							_0: 'em-leo',
																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																								_0: 'em-leopard',
																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																									_0: 'em-level_slider',
																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																										_0: 'em-libra',
																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																											_0: 'em-light_rail',
																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																												_0: 'em-lightning',
																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																													_0: 'em-link',
																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																														_0: 'em-linked_paperclips',
																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																															_0: 'em-lion_face',
																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																_0: 'em-lips',
																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																	_0: 'em-lipstick',
																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																		_0: 'em-lizard',
																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																			_0: 'em-lock',
																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																				_0: 'em-lock_with_ink_pen',
																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																					_0: 'em-lollipop',
																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																						_0: 'em-loop',
																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																							_0: 'em-loud_sound',
																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																								_0: 'em-loudspeaker',
																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																									_0: 'em-love_hotel',
																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																										_0: 'em-love_letter',
																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																											_0: 'em-low_brightness',
																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																												_0: 'em-lower_left_ballpoint_pen',
																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																													_0: 'em-lower_left_crayon',
																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																														_0: 'em-lower_left_fountain_pen',
																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																															_0: 'em-lower_left_paintbrush',
																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																_0: 'em-lying_face',
																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																	_0: 'em-m',
																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																		_0: 'em-mag',
																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																			_0: 'em-mag_right',
																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																				_0: 'em-mage',
																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																					_0: 'em-mahjong',
																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																						_0: 'em-mailbox',
																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																							_0: 'em-mailbox_closed',
																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																								_0: 'em-mailbox_with_mail',
																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																									_0: 'em-mailbox_with_no_mail',
																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																										_0: 'em-male_elf',
																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																											_0: 'em-male_fairy',
																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																												_0: 'em-male_genie',
																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																													_0: 'em-male_mage',
																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																														_0: 'em-male_sign',
																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																															_0: 'em-male_vampire',
																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																_0: 'em-male_zombie',
																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																	_0: 'em-man',
																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																		_0: 'em-man_climbing',
																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																			_0: 'em-man_dancing',
																																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																																				_0: 'em-man_in_business_suit_levitating',
																																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																																					_0: 'em-man_in_lotus_position',
																																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																																						_0: 'em-man_in_steamy_room',
																																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																																							_0: 'em-man_in_tuxedo',
																																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																																								_0: 'em-man_with_gua_pi_mao',
																																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																																									_0: 'em-man_with_turban',
																																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																																										_0: 'em-mans_shoe',
																																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																																											_0: 'em-mantelpiece_clock',
																																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																																												_0: 'em-maple_leaf',
																																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																																													_0: 'em-martial_arts_uniform',
																																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																																														_0: 'em-mask',
																																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																																															_0: 'em-massage',
																																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																																_0: 'em-meat_on_bone',
																																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																																	_0: 'em-medal',
																																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																																		_0: 'em-mega',
																																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																																			_0: 'em-melon',
																																																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																																																				_0: 'em-memo',
																																																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																																																					_0: 'em-menorah_with_nine_branches',
																																																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																																																						_0: 'em-mens',
																																																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																																																							_0: 'em-mermaid',
																																																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																																																								_0: 'em-merman',
																																																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																																																									_0: 'em-merperson',
																																																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																																																										_0: 'em-metro',
																																																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																																																											_0: 'em-microphone',
																																																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																																																												_0: 'em-microscope',
																																																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																																																													_0: 'em-middle_finger',
																																																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																																																														_0: 'em-milky_way',
																																																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																																																															_0: 'em-minibus',
																																																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																																																_0: 'em-minidisc',
																																																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																																																	_0: 'em-mobile_phone_off',
																																																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																																																		_0: 'em-money_mouth_face',
																																																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																																																			_0: 'em-money_with_wings',
																																																																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																																																																				_0: 'em-moneybag',
																																																																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																																																																					_0: 'em-monkey',
																																																																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																																																																						_0: 'em-monkey_face',
																																																																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																																																																							_0: 'em-monorail',
																																																																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																																																																								_0: 'em-moon',
																																																																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																																																																									_0: 'em-mortar_board',
																																																																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																																																																										_0: 'em-mosque',
																																																																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																																																																											_0: 'em-mostly_sunny',
																																																																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																																																																												_0: 'em-mother_christmas',
																																																																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																																																																													_0: 'em-motor_boat',
																																																																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																																																																														_0: 'em-motor_scooter',
																																																																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																																																																															_0: 'em-motorway',
																																																																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																																																																_0: 'em-mount_fuji',
																																																																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																																																																	_0: 'em-mountain',
																																																																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																																																																		_0: 'em-mountain_bicyclist',
																																																																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																																																																			_0: 'em-mountain_cableway',
																																																																																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																																																																																				_0: 'em-mountain_railway',
																																																																																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																																																																																					_0: 'em-mouse',
																																																																																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																																																																																						_0: 'em-movie_camera',
																																																																																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																																																																																							_0: 'em-moyai',
																																																																																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																																																																																								_0: 'em-muscle',
																																																																																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																																																																																									_0: 'em-mushroom',
																																																																																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																																																																																										_0: 'em-musical_keyboard',
																																																																																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																																																																																											_0: 'em-musical_note',
																																																																																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																																																																																												_0: 'em-musical_score',
																																																																																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																																																																																													_0: 'em-mute',
																																																																																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																																																																																														_0: 'em-nail_care',
																																																																																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																																																																																															_0: 'em-name_badge',
																																																																																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																																																																																_0: 'em-national_park',
																																																																																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																																																																																	_0: 'em-nauseated_face',
																																																																																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																																																																																		_0: 'em-necktie',
																																																																																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																																																																																			_0: 'em-negative_squared_cross_mark',
																																																																																																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																																																																																																				_0: 'em-nerd_face',
																																																																																																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																																																																																																					_0: 'em-neutral_face',
																																																																																																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																																																																																																						_0: 'em-new',
																																																																																																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																																																																																																							_0: 'em-new_moon',
																																																																																																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																																																																																																								_0: 'em-new_moon_with_face',
																																																																																																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																																																																																																									_0: 'em-newspaper',
																																																																																																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																																																																																																										_0: 'em-ng',
																																																																																																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																																																																																																											_0: 'em-night_with_stars',
																																																																																																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																																																																																																												_0: 'em-nine',
																																																																																																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																																																																																																													_0: 'em-no_bell',
																																																																																																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																																																																																																														_0: 'em-no_bicycles',
																																																																																																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																																																																																																															_0: 'em-no_entry',
																																																																																																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																																																																																																_0: 'em-no_entry_sign',
																																																																																																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																																																																																																	_0: 'em-no_good',
																																																																																																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																																																																																																		_0: 'em-no_mobile_phones',
																																																																																																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																																																																																																			_0: 'em-no_mouth',
																																																																																																																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																																																																																																																				_0: 'em-no_pedestrians',
																																																																																																																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																																																																																																																					_0: 'em-no_smoking',
																																																																																																																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																																																																																																																						_0: 'em-nose',
																																																																																																																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																																																																																																																							_0: 'em-notebook',
																																																																																																																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																																																																																																																								_0: 'em-notebook_with_decorative_cover',
																																																																																																																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																																																																																																																									_0: 'em-notes',
																																																																																																																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																																																																																																																										_0: 'em-nut_and_bolt',
																																																																																																																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																																																																																																																											_0: 'em-o',
																																																																																																																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																																																																																																																												_0: 'em-ocean',
																																																																																																																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																																																																																																																													_0: 'em-octagonal_sign',
																																																																																																																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																																																																																																																														_0: 'em-octopus',
																																																																																																																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																																																																																																																															_0: 'em-oden',
																																																																																																																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																																																																																																																_0: 'em-office',
																																																																																																																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																																																																																																																	_0: 'em-oil_drum',
																																																																																																																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																																																																																																																		_0: 'em-ok',
																																																																																																																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																																																																																																																			_0: 'em-ok_hand',
																																																																																																																																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																																																																																																																																				_0: 'em-ok_woman',
																																																																																																																																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																																																																																																																																					_0: 'em-old_key',
																																																																																																																																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																																																																																																																																						_0: 'em-older_adult',
																																																																																																																																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																																																																																																																																							_0: 'em-older_man',
																																																																																																																																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																																																																																																																																								_0: 'em-older_woman',
																																																																																																																																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																																																																																																																																									_0: 'em-om_symbol',
																																																																																																																																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																																																																																																																																										_0: 'em-on',
																																																																																																																																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																																																																																																																																											_0: 'em-oncoming_automobile',
																																																																																																																																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																																																																																																																																												_0: 'em-oncoming_bus',
																																																																																																																																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																																																																																																																																													_0: 'em-oncoming_police_car',
																																																																																																																																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																																																																																																																																														_0: 'em-oncoming_taxi',
																																																																																																																																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																																																																																																																																															_0: 'em-one',
																																																																																																																																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																_0: 'em-open_file_folder',
																																																																																																																																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																	_0: 'em-open_hands',
																																																																																																																																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																		_0: 'em-open_mouth',
																																																																																																																																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																			_0: 'em-ophiuchus',
																																																																																																																																																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																				_0: 'em-orange_book',
																																																																																																																																																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																					_0: 'em-orange_heart',
																																																																																																																																																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																						_0: 'em-orthodox_cross',
																																																																																																																																																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																							_0: 'em-outbox_tray',
																																																																																																																																																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																								_0: 'em-owl',
																																																																																																																																																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																									_0: 'em-ox',
																																																																																																																																																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																										_0: 'em-package',
																																																																																																																																																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																											_0: 'em-page_facing_up',
																																																																																																																																																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																												_0: 'em-page_with_curl',
																																																																																																																																																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																													_0: 'em-pager',
																																																																																																																																																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																														_0: 'em-palm_tree',
																																																																																																																																																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																															_0: 'em-palms_up_together',
																																																																																																																																																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																_0: 'em-pancakes',
																																																																																																																																																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																	_0: 'em-panda_face',
																																																																																																																																																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																		_0: 'em-paperclip',
																																																																																																																																																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																			_0: 'em-parking',
																																																																																																																																																																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																				_0: 'em-part_alternation_mark',
																																																																																																																																																																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																					_0: 'em-partly_sunny',
																																																																																																																																																																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																						_0: 'em-partly_sunny_rain',
																																																																																																																																																																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																							_0: 'em-passenger_ship',
																																																																																																																																																																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																								_0: 'em-passport_control',
																																																																																																																																																																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																									_0: 'em-peace_symbol',
																																																																																																																																																																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																										_0: 'em-peach',
																																																																																																																																																																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																											_0: 'em-peanuts',
																																																																																																																																																																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																												_0: 'em-pear',
																																																																																																																																																																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																													_0: 'em-penguin',
																																																																																																																																																																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																														_0: 'em-pensive',
																																																																																																																																																																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																															_0: 'em-performing_arts',
																																																																																																																																																																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																																_0: 'em-persevere',
																																																																																																																																																																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																																	_0: 'em-person_climbing',
																																																																																																																																																																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																																		_0: 'em-person_doing_cartwheel',
																																																																																																																																																																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																																			_0: 'em-person_frowning',
																																																																																																																																																																																																																																																																																																																																																																																																			_1: {ctor: '[]'}
																																																																																																																																																																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																}
																																																																																																																																																																																																																															}
																																																																																																																																																																																																																														}
																																																																																																																																																																																																																													}
																																																																																																																																																																																																																												}
																																																																																																																																																																																																																											}
																																																																																																																																																																																																																										}
																																																																																																																																																																																																																									}
																																																																																																																																																																																																																								}
																																																																																																																																																																																																																							}
																																																																																																																																																																																																																						}
																																																																																																																																																																																																																					}
																																																																																																																																																																																																																				}
																																																																																																																																																																																																																			}
																																																																																																																																																																																																																		}
																																																																																																																																																																																																																	}
																																																																																																																																																																																																																}
																																																																																																																																																																																																															}
																																																																																																																																																																																																														}
																																																																																																																																																																																																													}
																																																																																																																																																																																																												}
																																																																																																																																																																																																											}
																																																																																																																																																																																																										}
																																																																																																																																																																																																									}
																																																																																																																																																																																																								}
																																																																																																																																																																																																							}
																																																																																																																																																																																																						}
																																																																																																																																																																																																					}
																																																																																																																																																																																																				}
																																																																																																																																																																																																			}
																																																																																																																																																																																																		}
																																																																																																																																																																																																	}
																																																																																																																																																																																																}
																																																																																																																																																																																															}
																																																																																																																																																																																														}
																																																																																																																																																																																													}
																																																																																																																																																																																												}
																																																																																																																																																																																											}
																																																																																																																																																																																										}
																																																																																																																																																																																									}
																																																																																																																																																																																								}
																																																																																																																																																																																							}
																																																																																																																																																																																						}
																																																																																																																																																																																					}
																																																																																																																																																																																				}
																																																																																																																																																																																			}
																																																																																																																																																																																		}
																																																																																																																																																																																	}
																																																																																																																																																																																}
																																																																																																																																																																															}
																																																																																																																																																																														}
																																																																																																																																																																													}
																																																																																																																																																																												}
																																																																																																																																																																											}
																																																																																																																																																																										}
																																																																																																																																																																									}
																																																																																																																																																																								}
																																																																																																																																																																							}
																																																																																																																																																																						}
																																																																																																																																																																					}
																																																																																																																																																																				}
																																																																																																																																																																			}
																																																																																																																																																																		}
																																																																																																																																																																	}
																																																																																																																																																																}
																																																																																																																																																															}
																																																																																																																																																														}
																																																																																																																																																													}
																																																																																																																																																												}
																																																																																																																																																											}
																																																																																																																																																										}
																																																																																																																																																									}
																																																																																																																																																								}
																																																																																																																																																							}
																																																																																																																																																						}
																																																																																																																																																					}
																																																																																																																																																				}
																																																																																																																																																			}
																																																																																																																																																		}
																																																																																																																																																	}
																																																																																																																																																}
																																																																																																																																															}
																																																																																																																																														}
																																																																																																																																													}
																																																																																																																																												}
																																																																																																																																											}
																																																																																																																																										}
																																																																																																																																									}
																																																																																																																																								}
																																																																																																																																							}
																																																																																																																																						}
																																																																																																																																					}
																																																																																																																																				}
																																																																																																																																			}
																																																																																																																																		}
																																																																																																																																	}
																																																																																																																																}
																																																																																																																															}
																																																																																																																														}
																																																																																																																													}
																																																																																																																												}
																																																																																																																											}
																																																																																																																										}
																																																																																																																									}
																																																																																																																								}
																																																																																																																							}
																																																																																																																						}
																																																																																																																					}
																																																																																																																				}
																																																																																																																			}
																																																																																																																		}
																																																																																																																	}
																																																																																																																}
																																																																																																															}
																																																																																																														}
																																																																																																													}
																																																																																																												}
																																																																																																											}
																																																																																																										}
																																																																																																									}
																																																																																																								}
																																																																																																							}
																																																																																																						}
																																																																																																					}
																																																																																																				}
																																																																																																			}
																																																																																																		}
																																																																																																	}
																																																																																																}
																																																																																															}
																																																																																														}
																																																																																													}
																																																																																												}
																																																																																											}
																																																																																										}
																																																																																									}
																																																																																								}
																																																																																							}
																																																																																						}
																																																																																					}
																																																																																				}
																																																																																			}
																																																																																		}
																																																																																	}
																																																																																}
																																																																															}
																																																																														}
																																																																													}
																																																																												}
																																																																											}
																																																																										}
																																																																									}
																																																																								}
																																																																							}
																																																																						}
																																																																					}
																																																																				}
																																																																			}
																																																																		}
																																																																	}
																																																																}
																																																															}
																																																														}
																																																													}
																																																												}
																																																											}
																																																										}
																																																									}
																																																								}
																																																							}
																																																						}
																																																					}
																																																				}
																																																			}
																																																		}
																																																	}
																																																}
																																															}
																																														}
																																													}
																																												}
																																											}
																																										}
																																									}
																																								}
																																							}
																																						}
																																					}
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		{
			ctor: '::',
			_0: 'em-person_in_lotus_position',
			_1: {
				ctor: '::',
				_0: 'em-person_in_steamy_room',
				_1: {
					ctor: '::',
					_0: 'em-person_with_ball',
					_1: {
						ctor: '::',
						_0: 'em-person_with_blond_hair',
						_1: {
							ctor: '::',
							_0: 'em-person_with_headscarf',
							_1: {
								ctor: '::',
								_0: 'em-person_with_pouting_face',
								_1: {
									ctor: '::',
									_0: 'em-phone',
									_1: {
										ctor: '::',
										_0: 'em-pick',
										_1: {
											ctor: '::',
											_0: 'em-pie',
											_1: {
												ctor: '::',
												_0: 'em-pig',
												_1: {
													ctor: '::',
													_0: 'em-pig_nose',
													_1: {
														ctor: '::',
														_0: 'em-pill',
														_1: {
															ctor: '::',
															_0: 'em-pineapple',
															_1: {
																ctor: '::',
																_0: 'em-pisces',
																_1: {
																	ctor: '::',
																	_0: 'em-pizza',
																	_1: {
																		ctor: '::',
																		_0: 'em-place_of_worship',
																		_1: {
																			ctor: '::',
																			_0: 'em-point_down',
																			_1: {
																				ctor: '::',
																				_0: 'em-point_left',
																				_1: {
																					ctor: '::',
																					_0: 'em-point_right',
																					_1: {
																						ctor: '::',
																						_0: 'em-point_up',
																						_1: {
																							ctor: '::',
																							_0: 'em-police_car',
																							_1: {
																								ctor: '::',
																								_0: 'em-poodle',
																								_1: {
																									ctor: '::',
																									_0: 'em-popcorn',
																									_1: {
																										ctor: '::',
																										_0: 'em-post_office',
																										_1: {
																											ctor: '::',
																											_0: 'em-postal_horn',
																											_1: {
																												ctor: '::',
																												_0: 'em-postbox',
																												_1: {
																													ctor: '::',
																													_0: 'em-potable_water',
																													_1: {
																														ctor: '::',
																														_0: 'em-potato',
																														_1: {
																															ctor: '::',
																															_0: 'em-pouch',
																															_1: {
																																ctor: '::',
																																_0: 'em-poultry_leg',
																																_1: {
																																	ctor: '::',
																																	_0: 'em-pound',
																																	_1: {
																																		ctor: '::',
																																		_0: 'em-pouting_cat',
																																		_1: {
																																			ctor: '::',
																																			_0: 'em-pray',
																																			_1: {
																																				ctor: '::',
																																				_0: 'em-prayer_beads',
																																				_1: {
																																					ctor: '::',
																																					_0: 'em-pregnant_woman',
																																					_1: {
																																						ctor: '::',
																																						_0: 'em-pretzel',
																																						_1: {
																																							ctor: '::',
																																							_0: 'em-prince',
																																							_1: {
																																								ctor: '::',
																																								_0: 'em-princess',
																																								_1: {
																																									ctor: '::',
																																									_0: 'em-printer',
																																									_1: {
																																										ctor: '::',
																																										_0: 'em-purple_heart',
																																										_1: {
																																											ctor: '::',
																																											_0: 'em-purse',
																																											_1: {
																																												ctor: '::',
																																												_0: 'em-pushpin',
																																												_1: {
																																													ctor: '::',
																																													_0: 'em-put_litter_in_its_place',
																																													_1: {
																																														ctor: '::',
																																														_0: 'em-question',
																																														_1: {
																																															ctor: '::',
																																															_0: 'em-rabbit',
																																															_1: {
																																																ctor: '::',
																																																_0: 'em-racehorse',
																																																_1: {
																																																	ctor: '::',
																																																	_0: 'em-racing_car',
																																																	_1: {
																																																		ctor: '::',
																																																		_0: 'em-racing_motorcycle',
																																																		_1: {
																																																			ctor: '::',
																																																			_0: 'em-radio',
																																																			_1: {
																																																				ctor: '::',
																																																				_0: 'em-radio_button',
																																																				_1: {
																																																					ctor: '::',
																																																					_0: 'em-radioactive_sign',
																																																					_1: {
																																																						ctor: '::',
																																																						_0: 'em-rage',
																																																						_1: {
																																																							ctor: '::',
																																																							_0: 'em-railway_car',
																																																							_1: {
																																																								ctor: '::',
																																																								_0: 'em-railway_track',
																																																								_1: {
																																																									ctor: '::',
																																																									_0: 'em-rain_cloud',
																																																									_1: {
																																																										ctor: '::',
																																																										_0: 'em-rainbow',
																																																										_1: {
																																																											ctor: '::',
																																																											_0: 'em-raised_back_of_hand',
																																																											_1: {
																																																												ctor: '::',
																																																												_0: 'em-raised_hand_with_fingers_splayed',
																																																												_1: {
																																																													ctor: '::',
																																																													_0: 'em-raised_hands',
																																																													_1: {
																																																														ctor: '::',
																																																														_0: 'em-raising_hand',
																																																														_1: {
																																																															ctor: '::',
																																																															_0: 'em-ram',
																																																															_1: {
																																																																ctor: '::',
																																																																_0: 'em-ramen',
																																																																_1: {
																																																																	ctor: '::',
																																																																	_0: 'em-rat',
																																																																	_1: {
																																																																		ctor: '::',
																																																																		_0: 'em-recycle',
																																																																		_1: {
																																																																			ctor: '::',
																																																																			_0: 'em-red_circle',
																																																																			_1: {
																																																																				ctor: '::',
																																																																				_0: 'em-registered',
																																																																				_1: {
																																																																					ctor: '::',
																																																																					_0: 'em-relaxed',
																																																																					_1: {
																																																																						ctor: '::',
																																																																						_0: 'em-relieved',
																																																																						_1: {
																																																																							ctor: '::',
																																																																							_0: 'em-reminder_ribbon',
																																																																							_1: {
																																																																								ctor: '::',
																																																																								_0: 'em-repeat',
																																																																								_1: {
																																																																									ctor: '::',
																																																																									_0: 'em-repeat_one',
																																																																									_1: {
																																																																										ctor: '::',
																																																																										_0: 'em-restroom',
																																																																										_1: {
																																																																											ctor: '::',
																																																																											_0: 'em-revolving_hearts',
																																																																											_1: {
																																																																												ctor: '::',
																																																																												_0: 'em-rewind',
																																																																												_1: {
																																																																													ctor: '::',
																																																																													_0: 'em-rhinoceros',
																																																																													_1: {
																																																																														ctor: '::',
																																																																														_0: 'em-ribbon',
																																																																														_1: {
																																																																															ctor: '::',
																																																																															_0: 'em-rice',
																																																																															_1: {
																																																																																ctor: '::',
																																																																																_0: 'em-rice_ball',
																																																																																_1: {
																																																																																	ctor: '::',
																																																																																	_0: 'em-rice_cracker',
																																																																																	_1: {
																																																																																		ctor: '::',
																																																																																		_0: 'em-rice_scene',
																																																																																		_1: {
																																																																																			ctor: '::',
																																																																																			_0: 'em-right_anger_bubble',
																																																																																			_1: {
																																																																																				ctor: '::',
																																																																																				_0: 'em-ring',
																																																																																				_1: {
																																																																																					ctor: '::',
																																																																																					_0: 'em-robot_face',
																																																																																					_1: {
																																																																																						ctor: '::',
																																																																																						_0: 'em-rocket',
																																																																																						_1: {
																																																																																							ctor: '::',
																																																																																							_0: 'em-rolled_up_newspaper',
																																																																																							_1: {
																																																																																								ctor: '::',
																																																																																								_0: 'em-roller_coaster',
																																																																																								_1: {
																																																																																									ctor: '::',
																																																																																									_0: 'em-rolling_on_the_floor_laughing',
																																																																																									_1: {
																																																																																										ctor: '::',
																																																																																										_0: 'em-rooster',
																																																																																										_1: {
																																																																																											ctor: '::',
																																																																																											_0: 'em-rose',
																																																																																											_1: {
																																																																																												ctor: '::',
																																																																																												_0: 'em-rosette',
																																																																																												_1: {
																																																																																													ctor: '::',
																																																																																													_0: 'em-rotating_light',
																																																																																													_1: {
																																																																																														ctor: '::',
																																																																																														_0: 'em-round_pushpin',
																																																																																														_1: {
																																																																																															ctor: '::',
																																																																																															_0: 'em-rowboat',
																																																																																															_1: {
																																																																																																ctor: '::',
																																																																																																_0: 'em-ru',
																																																																																																_1: {
																																																																																																	ctor: '::',
																																																																																																	_0: 'em-rugby_football',
																																																																																																	_1: {
																																																																																																		ctor: '::',
																																																																																																		_0: 'em-runner',
																																																																																																		_1: {
																																																																																																			ctor: '::',
																																																																																																			_0: 'em-running_shirt_with_sash',
																																																																																																			_1: {
																																																																																																				ctor: '::',
																																																																																																				_0: 'em-sa',
																																																																																																				_1: {
																																																																																																					ctor: '::',
																																																																																																					_0: 'em-sagittarius',
																																																																																																					_1: {
																																																																																																						ctor: '::',
																																																																																																						_0: 'em-sake',
																																																																																																						_1: {
																																																																																																							ctor: '::',
																																																																																																							_0: 'em-sandal',
																																																																																																							_1: {
																																																																																																								ctor: '::',
																																																																																																								_0: 'em-sandwich',
																																																																																																								_1: {
																																																																																																									ctor: '::',
																																																																																																									_0: 'em-santa',
																																																																																																									_1: {
																																																																																																										ctor: '::',
																																																																																																										_0: 'em-satellite',
																																																																																																										_1: {
																																																																																																											ctor: '::',
																																																																																																											_0: 'em-satellite_antenna',
																																																																																																											_1: {
																																																																																																												ctor: '::',
																																																																																																												_0: 'em-sauropod',
																																																																																																												_1: {
																																																																																																													ctor: '::',
																																																																																																													_0: 'em-saxophone',
																																																																																																													_1: {
																																																																																																														ctor: '::',
																																																																																																														_0: 'em-scales',
																																																																																																														_1: {
																																																																																																															ctor: '::',
																																																																																																															_0: 'em-scarf',
																																																																																																															_1: {
																																																																																																																ctor: '::',
																																																																																																																_0: 'em-school',
																																																																																																																_1: {
																																																																																																																	ctor: '::',
																																																																																																																	_0: 'em-school_satchel',
																																																																																																																	_1: {
																																																																																																																		ctor: '::',
																																																																																																																		_0: 'em-scissors',
																																																																																																																		_1: {
																																																																																																																			ctor: '::',
																																																																																																																			_0: 'em-scooter',
																																																																																																																			_1: {
																																																																																																																				ctor: '::',
																																																																																																																				_0: 'em-scorpion',
																																																																																																																				_1: {
																																																																																																																					ctor: '::',
																																																																																																																					_0: 'em-scorpius',
																																																																																																																					_1: {
																																																																																																																						ctor: '::',
																																																																																																																						_0: 'em-scream',
																																																																																																																						_1: {
																																																																																																																							ctor: '::',
																																																																																																																							_0: 'em-scream_cat',
																																																																																																																							_1: {
																																																																																																																								ctor: '::',
																																																																																																																								_0: 'em-scroll',
																																																																																																																								_1: {
																																																																																																																									ctor: '::',
																																																																																																																									_0: 'em-seat',
																																																																																																																									_1: {
																																																																																																																										ctor: '::',
																																																																																																																										_0: 'em-second_place_medal',
																																																																																																																										_1: {
																																																																																																																											ctor: '::',
																																																																																																																											_0: 'em-secret',
																																																																																																																											_1: {
																																																																																																																												ctor: '::',
																																																																																																																												_0: 'em-see_no_evil',
																																																																																																																												_1: {
																																																																																																																													ctor: '::',
																																																																																																																													_0: 'em-seedling',
																																																																																																																													_1: {
																																																																																																																														ctor: '::',
																																																																																																																														_0: 'em-selfie',
																																																																																																																														_1: {
																																																																																																																															ctor: '::',
																																																																																																																															_0: 'em-serious_face_with_symbols_covering_mouth',
																																																																																																																															_1: {
																																																																																																																																ctor: '::',
																																																																																																																																_0: 'em-seven',
																																																																																																																																_1: {
																																																																																																																																	ctor: '::',
																																																																																																																																	_0: 'em-shallow_pan_of_food',
																																																																																																																																	_1: {
																																																																																																																																		ctor: '::',
																																																																																																																																		_0: 'em-shamrock',
																																																																																																																																		_1: {
																																																																																																																																			ctor: '::',
																																																																																																																																			_0: 'em-shark',
																																																																																																																																			_1: {
																																																																																																																																				ctor: '::',
																																																																																																																																				_0: 'em-shaved_ice',
																																																																																																																																				_1: {
																																																																																																																																					ctor: '::',
																																																																																																																																					_0: 'em-sheep',
																																																																																																																																					_1: {
																																																																																																																																						ctor: '::',
																																																																																																																																						_0: 'em-shell',
																																																																																																																																						_1: {
																																																																																																																																							ctor: '::',
																																																																																																																																							_0: 'em-shield',
																																																																																																																																							_1: {
																																																																																																																																								ctor: '::',
																																																																																																																																								_0: 'em-shinto_shrine',
																																																																																																																																								_1: {
																																																																																																																																									ctor: '::',
																																																																																																																																									_0: 'em-ship',
																																																																																																																																									_1: {
																																																																																																																																										ctor: '::',
																																																																																																																																										_0: 'em-shirt',
																																																																																																																																										_1: {
																																																																																																																																											ctor: '::',
																																																																																																																																											_0: 'em-shocked_face_with_exploding_head',
																																																																																																																																											_1: {
																																																																																																																																												ctor: '::',
																																																																																																																																												_0: 'em-shopping_bags',
																																																																																																																																												_1: {
																																																																																																																																													ctor: '::',
																																																																																																																																													_0: 'em-shopping_trolley',
																																																																																																																																													_1: {
																																																																																																																																														ctor: '::',
																																																																																																																																														_0: 'em-shower',
																																																																																																																																														_1: {
																																																																																																																																															ctor: '::',
																																																																																																																																															_0: 'em-shrimp',
																																																																																																																																															_1: {
																																																																																																																																																ctor: '::',
																																																																																																																																																_0: 'em-shrug',
																																																																																																																																																_1: {
																																																																																																																																																	ctor: '::',
																																																																																																																																																	_0: 'em-signal_strength',
																																																																																																																																																	_1: {
																																																																																																																																																		ctor: '::',
																																																																																																																																																		_0: 'em-six',
																																																																																																																																																		_1: {
																																																																																																																																																			ctor: '::',
																																																																																																																																																			_0: 'em-six_pointed_star',
																																																																																																																																																			_1: {
																																																																																																																																																				ctor: '::',
																																																																																																																																																				_0: 'em-ski',
																																																																																																																																																				_1: {
																																																																																																																																																					ctor: '::',
																																																																																																																																																					_0: 'em-skier',
																																																																																																																																																					_1: {
																																																																																																																																																						ctor: '::',
																																																																																																																																																						_0: 'em-skull',
																																																																																																																																																						_1: {
																																																																																																																																																							ctor: '::',
																																																																																																																																																							_0: 'em-skull_and_crossbones',
																																																																																																																																																							_1: {
																																																																																																																																																								ctor: '::',
																																																																																																																																																								_0: 'em-sled',
																																																																																																																																																								_1: {
																																																																																																																																																									ctor: '::',
																																																																																																																																																									_0: 'em-sleeping',
																																																																																																																																																									_1: {
																																																																																																																																																										ctor: '::',
																																																																																																																																																										_0: 'em-sleeping_accommodation',
																																																																																																																																																										_1: {
																																																																																																																																																											ctor: '::',
																																																																																																																																																											_0: 'em-sleepy',
																																																																																																																																																											_1: {
																																																																																																																																																												ctor: '::',
																																																																																																																																																												_0: 'em-sleuth_or_spy',
																																																																																																																																																												_1: {
																																																																																																																																																													ctor: '::',
																																																																																																																																																													_0: 'em-slightly_frowning_face',
																																																																																																																																																													_1: {
																																																																																																																																																														ctor: '::',
																																																																																																																																																														_0: 'em-slightly_smiling_face',
																																																																																																																																																														_1: {
																																																																																																																																																															ctor: '::',
																																																																																																																																																															_0: 'em-slot_machine',
																																																																																																																																																															_1: {
																																																																																																																																																																ctor: '::',
																																																																																																																																																																_0: 'em-small_airplane',
																																																																																																																																																																_1: {
																																																																																																																																																																	ctor: '::',
																																																																																																																																																																	_0: 'em-small_blue_diamond',
																																																																																																																																																																	_1: {
																																																																																																																																																																		ctor: '::',
																																																																																																																																																																		_0: 'em-small_orange_diamond',
																																																																																																																																																																		_1: {
																																																																																																																																																																			ctor: '::',
																																																																																																																																																																			_0: 'em-small_red_triangle',
																																																																																																																																																																			_1: {
																																																																																																																																																																				ctor: '::',
																																																																																																																																																																				_0: 'em-small_red_triangle_down',
																																																																																																																																																																				_1: {
																																																																																																																																																																					ctor: '::',
																																																																																																																																																																					_0: 'em-smile',
																																																																																																																																																																					_1: {
																																																																																																																																																																						ctor: '::',
																																																																																																																																																																						_0: 'em-smile_cat',
																																																																																																																																																																						_1: {
																																																																																																																																																																							ctor: '::',
																																																																																																																																																																							_0: 'em-smiley',
																																																																																																																																																																							_1: {
																																																																																																																																																																								ctor: '::',
																																																																																																																																																																								_0: 'em-smiley_cat',
																																																																																																																																																																								_1: {
																																																																																																																																																																									ctor: '::',
																																																																																																																																																																									_0: 'em-smiling_face_with_smiling_eyes_and_hand_covering_mouth',
																																																																																																																																																																									_1: {
																																																																																																																																																																										ctor: '::',
																																																																																																																																																																										_0: 'em-smiling_imp',
																																																																																																																																																																										_1: {
																																																																																																																																																																											ctor: '::',
																																																																																																																																																																											_0: 'em-smirk',
																																																																																																																																																																											_1: {
																																																																																																																																																																												ctor: '::',
																																																																																																																																																																												_0: 'em-smirk_cat',
																																																																																																																																																																												_1: {
																																																																																																																																																																													ctor: '::',
																																																																																																																																																																													_0: 'em-smoking',
																																																																																																																																																																													_1: {
																																																																																																																																																																														ctor: '::',
																																																																																																																																																																														_0: 'em-snail',
																																																																																																																																																																														_1: {
																																																																																																																																																																															ctor: '::',
																																																																																																																																																																															_0: 'em-snake',
																																																																																																																																																																															_1: {
																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																_0: 'em-sneezing_face',
																																																																																																																																																																																_1: {
																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																	_0: 'em-snow_capped_mountain',
																																																																																																																																																																																	_1: {
																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																		_0: 'em-snow_cloud',
																																																																																																																																																																																		_1: {
																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																			_0: 'em-snowboarder',
																																																																																																																																																																																			_1: {
																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																				_0: 'em-snowflake',
																																																																																																																																																																																				_1: {
																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																					_0: 'em-snowman',
																																																																																																																																																																																					_1: {
																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																						_0: 'em-snowman_without_snow',
																																																																																																																																																																																						_1: {
																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																							_0: 'em-sob',
																																																																																																																																																																																							_1: {
																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																								_0: 'em-soccer',
																																																																																																																																																																																								_1: {
																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																									_0: 'em-socks',
																																																																																																																																																																																									_1: {
																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																										_0: 'em-soon',
																																																																																																																																																																																										_1: {
																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																											_0: 'em-sos',
																																																																																																																																																																																											_1: {
																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																												_0: 'em-sound',
																																																																																																																																																																																												_1: {
																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																													_0: 'em-space_invader',
																																																																																																																																																																																													_1: {
																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																														_0: 'em-spades',
																																																																																																																																																																																														_1: {
																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																															_0: 'em-spaghetti',
																																																																																																																																																																																															_1: {
																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																_0: 'em-sparkle',
																																																																																																																																																																																																_1: {
																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																	_0: 'em-sparkler',
																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																		_0: 'em-sparkles',
																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																			_0: 'em-sparkling_heart',
																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																				_0: 'em-speak_no_evil',
																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																					_0: 'em-speaker',
																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																						_0: 'em-speaking_head_in_silhouette',
																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																							_0: 'em-speech_balloon',
																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																								_0: 'em-speedboat',
																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																									_0: 'em-spider',
																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																										_0: 'em-spider_web',
																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																											_0: 'em-spiral_calendar_pad',
																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																												_0: 'em-spiral_note_pad',
																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																													_0: 'em-spoon',
																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																														_0: 'em-sports_medal',
																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																															_0: 'em-squid',
																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																_0: 'em-stadium',
																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																	_0: 'em-staff_of_aesculapius',
																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																		_0: 'em-star',
																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																			_0: 'em-star_and_crescent',
																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																				_0: 'em-star_of_david',
																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																					_0: 'em-stars',
																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																						_0: 'em-station',
																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																							_0: 'em-statue_of_liberty',
																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																								_0: 'em-steam_locomotive',
																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																									_0: 'em-stew',
																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																										_0: 'em-stopwatch',
																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																											_0: 'em-straight_ruler',
																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																												_0: 'em-strawberry',
																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																													_0: 'em-stuck_out_tongue',
																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																														_0: 'em-stuck_out_tongue_closed_eyes',
																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																															_0: 'em-stuck_out_tongue_winking_eye',
																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																_0: 'em-studio_microphone',
																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																	_0: 'em-stuffed_flatbread',
																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																		_0: 'em-sun_with_face',
																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																			_0: 'em-sunflower',
																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																				_0: 'em-sunglasses',
																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																					_0: 'em-sunny',
																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																						_0: 'em-sunrise',
																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																							_0: 'em-sunrise_over_mountains',
																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																								_0: 'em-surfer',
																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																									_0: 'em-sushi',
																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																										_0: 'em-suspension_railway',
																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																											_0: 'em-sweat',
																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																												_0: 'em-sweat_drops',
																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																													_0: 'em-sweat_smile',
																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																														_0: 'em-sweet_potato',
																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																															_0: 'em-swimmer',
																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																_0: 'em-symbols',
																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																	_0: 'em-synagogue',
																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																		_0: 'em-syringe',
																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																			_0: 'em-table_tennis_paddle_and_ball',
																																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																																				_0: 'em-taco',
																																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																																					_0: 'em-tada',
																																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																																						_0: 'em-takeout_box',
																																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																																							_0: 'em-tanabata_tree',
																																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																																								_0: 'em-tangerine',
																																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																																									_0: 'em-taurus',
																																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																																										_0: 'em-taxi',
																																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																																											_0: 'em-tea',
																																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																																												_0: 'em-telephone_receiver',
																																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																																													_0: 'em-telescope',
																																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																																														_0: 'em-tennis',
																																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																																															_0: 'em-tent',
																																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																																_0: 'em-the_horns',
																																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																																	_0: 'em-thermometer',
																																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																																		_0: 'em-thinking_face',
																																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																																			_0: 'em-third_place_medal',
																																																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																																																				_0: 'em-thought_balloon',
																																																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																																																					_0: 'em-three',
																																																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																																																						_0: 'em-three_button_mouse',
																																																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																																																							_0: 'em-thunder_cloud_and_rain',
																																																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																																																								_0: 'em-ticket',
																																																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																																																									_0: 'em-tiger',
																																																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																																																										_0: 'em-timer_clock',
																																																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																																																											_0: 'em-tired_face',
																																																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																																																												_0: 'em-tm',
																																																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																																																													_0: 'em-toilet',
																																																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																																																														_0: 'em-tokyo_tower',
																																																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																																																															_0: 'em-tomato',
																																																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																																																_0: 'em-tongue',
																																																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																																																	_0: 'em-top',
																																																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																																																		_0: 'em-tophat',
																																																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																																																			_0: 'em-tornado',
																																																																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																																																																				_0: 'em-trackball',
																																																																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																																																																					_0: 'em-tractor',
																																																																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																																																																						_0: 'em-traffic_light',
																																																																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																																																																							_0: 'em-train',
																																																																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																																																																								_0: 'em-tram',
																																																																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																																																																									_0: 'em-triangular_flag_on_post',
																																																																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																																																																										_0: 'em-triangular_ruler',
																																																																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																																																																											_0: 'em-trident',
																																																																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																																																																												_0: 'em-triumph',
																																																																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																																																																													_0: 'em-trolleybus',
																																																																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																																																																														_0: 'em-trophy',
																																																																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																																																																															_0: 'em-tropical_drink',
																																																																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																																																																_0: 'em-tropical_fish',
																																																																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																																																																	_0: 'em-truck',
																																																																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																																																																		_0: 'em-trumpet',
																																																																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																																																																			_0: 'em-tulip',
																																																																																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																																																																																				_0: 'em-tumbler_glass',
																																																																																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																																																																																					_0: 'em-turkey',
																																																																																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																																																																																						_0: 'em-turtle',
																																																																																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																																																																																							_0: 'em-tv',
																																																																																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																																																																																								_0: 'em-twisted_rightwards_arrows',
																																																																																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																																																																																									_0: 'em-two',
																																																																																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																																																																																										_0: 'em-two_hearts',
																																																																																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																																																																																											_0: 'em-two_men_holding_hands',
																																																																																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																																																																																												_0: 'em-two_women_holding_hands',
																																																																																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																																																																																													_0: 'em-umbrella',
																																																																																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																																																																																														_0: 'em-umbrella_on_ground',
																																																																																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																																																																																															_0: 'em-umbrella_with_rain_drops',
																																																																																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																																																																																_0: 'em-unamused',
																																																																																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																																																																																	_0: 'em-underage',
																																																																																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																																																																																		_0: 'em-unicorn_face',
																																																																																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																																																																																			_0: 'em-unlock',
																																																																																																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																																																																																																				_0: 'em-up',
																																																																																																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																																																																																																					_0: 'em-upside_down_face',
																																																																																																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																																																																																																						_0: 'em-us',
																																																																																																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																																																																																																							_0: 'em-v',
																																																																																																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																																																																																																								_0: 'em-vampire',
																																																																																																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																																																																																																									_0: 'em-vertical_traffic_light',
																																																																																																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																																																																																																										_0: 'em-vhs',
																																																																																																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																																																																																																											_0: 'em-vibration_mode',
																																																																																																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																																																																																																												_0: 'em-video_camera',
																																																																																																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																																																																																																													_0: 'em-video_game',
																																																																																																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																																																																																																														_0: 'em-violin',
																																																																																																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																																																																																																															_0: 'em-virgo',
																																																																																																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																																																																																																_0: 'em-volcano',
																																																																																																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																																																																																																	_0: 'em-volleyball',
																																																																																																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																																																																																																		_0: 'em-vs',
																																																																																																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																																																																																																			_0: 'em-walking',
																																																																																																																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																																																																																																																				_0: 'em-waning_crescent_moon',
																																																																																																																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																																																																																																																					_0: 'em-waning_gibbous_moon',
																																																																																																																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																																																																																																																						_0: 'em-warning',
																																																																																																																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																																																																																																																							_0: 'em-wastebasket',
																																																																																																																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																																																																																																																								_0: 'em-watch',
																																																																																																																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																																																																																																																									_0: 'em-water_buffalo',
																																																																																																																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																																																																																																																										_0: 'em-water_polo',
																																																																																																																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																																																																																																																											_0: 'em-watermelon',
																																																																																																																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																																																																																																																												_0: 'em-wave',
																																																																																																																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																																																																																																																													_0: 'em-waving_black_flag',
																																																																																																																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																																																																																																																														_0: 'em-waving_white_flag',
																																																																																																																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																																																																																																																															_0: 'em-wavy_dash',
																																																																																																																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																																																																																																																_0: 'em-waxing_crescent_moon',
																																																																																																																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																																																																																																																	_0: 'em-wc',
																																																																																																																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																																																																																																																		_0: 'em-weary',
																																																																																																																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																																																																																																																			_0: 'em-wedding',
																																																																																																																																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																																																																																																																																				_0: 'em-weight_lifter',
																																																																																																																																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																																																																																																																																					_0: 'em-whale',
																																																																																																																																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																																																																																																																																						_0: 'em-wheel_of_dharma',
																																																																																																																																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																																																																																																																																							_0: 'em-wheelchair',
																																																																																																																																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																																																																																																																																								_0: 'em-white_check_mark',
																																																																																																																																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																																																																																																																																									_0: 'em-white_circle',
																																																																																																																																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																																																																																																																																										_0: 'em-white_flower',
																																																																																																																																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																																																																																																																																											_0: 'em-white_frowning_face',
																																																																																																																																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																																																																																																																																												_0: 'em-white_large_square',
																																																																																																																																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																																																																																																																																													_0: 'em-white_medium_small_square',
																																																																																																																																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																																																																																																																																														_0: 'em-white_medium_square',
																																																																																																																																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																																																																																																																																															_0: 'em-white_small_square',
																																																																																																																																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																_0: 'em-white_square_button',
																																																																																																																																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																	_0: 'em-wilted_flower',
																																																																																																																																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																		_0: 'em-wind_blowing_face',
																																																																																																																																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																			_0: 'em-wind_chime',
																																																																																																																																																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																				_0: 'em-wine_glass',
																																																																																																																																																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																					_0: 'em-wink',
																																																																																																																																																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																						_0: 'em-wolf',
																																																																																																																																																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																							_0: 'em-woman',
																																																																																																																																																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																								_0: 'em-woman_climbing',
																																																																																																																																																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																									_0: 'em-woman_in_lotus_position',
																																																																																																																																																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																										_0: 'em-woman_in_steamy_room',
																																																																																																																																																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																											_0: 'em-womans_clothes',
																																																																																																																																																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																												_0: 'em-womans_hat',
																																																																																																																																																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																													_0: 'em-womens',
																																																																																																																																																																																																																																																																																																																																																																													_1: {
																																																																																																																																																																																																																																																																																																																																																																														ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																														_0: 'em-world_map',
																																																																																																																																																																																																																																																																																																																																																																														_1: {
																																																																																																																																																																																																																																																																																																																																																																															ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																															_0: 'em-worried',
																																																																																																																																																																																																																																																																																																																																																																															_1: {
																																																																																																																																																																																																																																																																																																																																																																																ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																_0: 'em-wrench',
																																																																																																																																																																																																																																																																																																																																																																																_1: {
																																																																																																																																																																																																																																																																																																																																																																																	ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																	_0: 'em-wrestlers',
																																																																																																																																																																																																																																																																																																																																																																																	_1: {
																																																																																																																																																																																																																																																																																																																																																																																		ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																		_0: 'em-writing_hand',
																																																																																																																																																																																																																																																																																																																																																																																		_1: {
																																																																																																																																																																																																																																																																																																																																																																																			ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																			_0: 'em-x',
																																																																																																																																																																																																																																																																																																																																																																																			_1: {
																																																																																																																																																																																																																																																																																																																																																																																				ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																				_0: 'em-yellow_heart',
																																																																																																																																																																																																																																																																																																																																																																																				_1: {
																																																																																																																																																																																																																																																																																																																																																																																					ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																					_0: 'em-yen',
																																																																																																																																																																																																																																																																																																																																																																																					_1: {
																																																																																																																																																																																																																																																																																																																																																																																						ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																						_0: 'em-yin_yang',
																																																																																																																																																																																																																																																																																																																																																																																						_1: {
																																																																																																																																																																																																																																																																																																																																																																																							ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																							_0: 'em-yum',
																																																																																																																																																																																																																																																																																																																																																																																							_1: {
																																																																																																																																																																																																																																																																																																																																																																																								ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																								_0: 'em-zap',
																																																																																																																																																																																																																																																																																																																																																																																								_1: {
																																																																																																																																																																																																																																																																																																																																																																																									ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																									_0: 'em-zebra_face',
																																																																																																																																																																																																																																																																																																																																																																																									_1: {
																																																																																																																																																																																																																																																																																																																																																																																										ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																										_0: 'em-zero',
																																																																																																																																																																																																																																																																																																																																																																																										_1: {
																																																																																																																																																																																																																																																																																																																																																																																											ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																											_0: 'em-zipper_mouth_face',
																																																																																																																																																																																																																																																																																																																																																																																											_1: {
																																																																																																																																																																																																																																																																																																																																																																																												ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																												_0: 'em-zombie',
																																																																																																																																																																																																																																																																																																																																																																																												_1: {
																																																																																																																																																																																																																																																																																																																																																																																													ctor: '::',
																																																																																																																																																																																																																																																																																																																																																																																													_0: 'em-zzz',
																																																																																																																																																																																																																																																																																																																																																																																													_1: {ctor: '[]'}
																																																																																																																																																																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																																}
																																																																																																																																																																																																																																															}
																																																																																																																																																																																																																																														}
																																																																																																																																																																																																																																													}
																																																																																																																																																																																																																																												}
																																																																																																																																																																																																																																											}
																																																																																																																																																																																																																																										}
																																																																																																																																																																																																																																									}
																																																																																																																																																																																																																																								}
																																																																																																																																																																																																																																							}
																																																																																																																																																																																																																																						}
																																																																																																																																																																																																																																					}
																																																																																																																																																																																																																																				}
																																																																																																																																																																																																																																			}
																																																																																																																																																																																																																																		}
																																																																																																																																																																																																																																	}
																																																																																																																																																																																																																																}
																																																																																																																																																																																																																															}
																																																																																																																																																																																																																														}
																																																																																																																																																																																																																													}
																																																																																																																																																																																																																												}
																																																																																																																																																																																																																											}
																																																																																																																																																																																																																										}
																																																																																																																																																																																																																									}
																																																																																																																																																																																																																								}
																																																																																																																																																																																																																							}
																																																																																																																																																																																																																						}
																																																																																																																																																																																																																					}
																																																																																																																																																																																																																				}
																																																																																																																																																																																																																			}
																																																																																																																																																																																																																		}
																																																																																																																																																																																																																	}
																																																																																																																																																																																																																}
																																																																																																																																																																																																															}
																																																																																																																																																																																																														}
																																																																																																																																																																																																													}
																																																																																																																																																																																																												}
																																																																																																																																																																																																											}
																																																																																																																																																																																																										}
																																																																																																																																																																																																									}
																																																																																																																																																																																																								}
																																																																																																																																																																																																							}
																																																																																																																																																																																																						}
																																																																																																																																																																																																					}
																																																																																																																																																																																																				}
																																																																																																																																																																																																			}
																																																																																																																																																																																																		}
																																																																																																																																																																																																	}
																																																																																																																																																																																																}
																																																																																																																																																																																															}
																																																																																																																																																																																														}
																																																																																																																																																																																													}
																																																																																																																																																																																												}
																																																																																																																																																																																											}
																																																																																																																																																																																										}
																																																																																																																																																																																									}
																																																																																																																																																																																								}
																																																																																																																																																																																							}
																																																																																																																																																																																						}
																																																																																																																																																																																					}
																																																																																																																																																																																				}
																																																																																																																																																																																			}
																																																																																																																																																																																		}
																																																																																																																																																																																	}
																																																																																																																																																																																}
																																																																																																																																																																															}
																																																																																																																																																																														}
																																																																																																																																																																													}
																																																																																																																																																																												}
																																																																																																																																																																											}
																																																																																																																																																																										}
																																																																																																																																																																									}
																																																																																																																																																																								}
																																																																																																																																																																							}
																																																																																																																																																																						}
																																																																																																																																																																					}
																																																																																																																																																																				}
																																																																																																																																																																			}
																																																																																																																																																																		}
																																																																																																																																																																	}
																																																																																																																																																																}
																																																																																																																																																															}
																																																																																																																																																														}
																																																																																																																																																													}
																																																																																																																																																												}
																																																																																																																																																											}
																																																																																																																																																										}
																																																																																																																																																									}
																																																																																																																																																								}
																																																																																																																																																							}
																																																																																																																																																						}
																																																																																																																																																					}
																																																																																																																																																				}
																																																																																																																																																			}
																																																																																																																																																		}
																																																																																																																																																	}
																																																																																																																																																}
																																																																																																																																															}
																																																																																																																																														}
																																																																																																																																													}
																																																																																																																																												}
																																																																																																																																											}
																																																																																																																																										}
																																																																																																																																									}
																																																																																																																																								}
																																																																																																																																							}
																																																																																																																																						}
																																																																																																																																					}
																																																																																																																																				}
																																																																																																																																			}
																																																																																																																																		}
																																																																																																																																	}
																																																																																																																																}
																																																																																																																															}
																																																																																																																														}
																																																																																																																													}
																																																																																																																												}
																																																																																																																											}
																																																																																																																										}
																																																																																																																									}
																																																																																																																								}
																																																																																																																							}
																																																																																																																						}
																																																																																																																					}
																																																																																																																				}
																																																																																																																			}
																																																																																																																		}
																																																																																																																	}
																																																																																																																}
																																																																																																															}
																																																																																																														}
																																																																																																													}
																																																																																																												}
																																																																																																											}
																																																																																																										}
																																																																																																									}
																																																																																																								}
																																																																																																							}
																																																																																																						}
																																																																																																					}
																																																																																																				}
																																																																																																			}
																																																																																																		}
																																																																																																	}
																																																																																																}
																																																																																															}
																																																																																														}
																																																																																													}
																																																																																												}
																																																																																											}
																																																																																										}
																																																																																									}
																																																																																								}
																																																																																							}
																																																																																						}
																																																																																					}
																																																																																				}
																																																																																			}
																																																																																		}
																																																																																	}
																																																																																}
																																																																															}
																																																																														}
																																																																													}
																																																																												}
																																																																											}
																																																																										}
																																																																									}
																																																																								}
																																																																							}
																																																																						}
																																																																					}
																																																																				}
																																																																			}
																																																																		}
																																																																	}
																																																																}
																																																															}
																																																														}
																																																													}
																																																												}
																																																											}
																																																										}
																																																									}
																																																								}
																																																							}
																																																						}
																																																					}
																																																				}
																																																			}
																																																		}
																																																	}
																																																}
																																															}
																																														}
																																													}
																																												}
																																											}
																																										}
																																									}
																																								}
																																							}
																																						}
																																					}
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}));
var _user$project$App_Talk_TalkUtils$emoToString = function (em) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		'::__',
		A2(_elm_lang$core$Basics_ops['++'], em, '__::'));
};
var _user$project$App_Talk_TalkUtils$emoticon = function (em) {
	return A2(
		_elm_lang$html$Html$i,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class(
				A2(_elm_lang$core$Basics_ops['++'], 'em ', em)),
			_1: {ctor: '[]'}
		},
		{ctor: '[]'});
};
var _user$project$App_Talk_TalkUtils$getTalkNotif = function (talks) {
	return _elm_lang$core$List$sum(
		A2(
			_elm_lang$core$List$map,
			function (_) {
				return _.unreadMsgs;
			},
			talks));
};
var _user$project$App_Talk_TalkUtils$getTalkWith = F2(
	function (username, talks) {
		return _elm_lang$core$List$head(
			A2(
				_elm_lang$core$List$filter,
				function (t) {
					return _elm_lang$core$Native_Utils.eq(t.username_with, username);
				},
				talks));
	});
var _user$project$App_Talk_TalkUtils$updateTalks = F2(
	function (model, talk) {
		var newTalks = A2(
			_elm_lang$core$List$any,
			function (t) {
				return _elm_lang$core$Native_Utils.eq(t.username_with, talk.username_with);
			},
			model.talks) ? A2(
			_elm_lang$core$List$map,
			function (t) {
				return _elm_lang$core$Native_Utils.eq(talk.username_with, t.username_with) ? talk : t;
			},
			model.talks) : {ctor: '::', _0: talk, _1: model.talks};
		return _elm_lang$core$Native_Utils.update(
			model,
			{talks: newTalks});
	});

var _user$project$App_User_UserDecoder$arrayAsTuple3 = F3(
	function (a, b, c) {
		return A2(
			_elm_lang$core$Json_Decode$andThen,
			function (aVal) {
				return A2(
					_elm_lang$core$Json_Decode$andThen,
					function (bVal) {
						return A2(
							_elm_lang$core$Json_Decode$andThen,
							function (cVal) {
								return _elm_lang$core$Json_Decode$succeed(
									{ctor: '_Tuple3', _0: aVal, _1: bVal, _2: cVal});
							},
							A2(_elm_lang$core$Json_Decode$index, 2, c));
					},
					A2(_elm_lang$core$Json_Decode$index, 1, b));
			},
			A2(_elm_lang$core$Json_Decode$index, 0, a));
	});
var _user$project$App_User_UserDecoder$arrayAsTuple2 = F2(
	function (a, b) {
		return A2(
			_elm_lang$core$Json_Decode$andThen,
			function (aVal) {
				return A2(
					_elm_lang$core$Json_Decode$andThen,
					function (bVal) {
						return _elm_lang$core$Json_Decode$succeed(
							{ctor: '_Tuple2', _0: aVal, _1: bVal});
					},
					A2(_elm_lang$core$Json_Decode$index, 1, b));
			},
			A2(_elm_lang$core$Json_Decode$index, 0, a));
	});
var _user$project$App_User_UserDecoder$decodeRole = A2(
	_elm_lang$core$Json_Decode$andThen,
	function (a) {
		var _p0 = a;
		switch (_p0) {
			case 0:
				return _elm_lang$core$Json_Decode$succeed(_user$project$App_User_UserModel$ADMIN);
			case 1:
				return _elm_lang$core$Json_Decode$succeed(_user$project$App_User_UserModel$USER);
			default:
				return _elm_lang$core$Json_Decode$fail('Unknown role');
		}
	},
	_elm_lang$core$Json_Decode$int);
var _user$project$App_User_UserDecoder$decodeImgs = _elm_lang$core$Json_Decode$list(
	A3(_user$project$App_User_UserDecoder$arrayAsTuple3, _elm_lang$core$Json_Decode$int, _elm_lang$core$Json_Decode$string, _elm_lang$core$Json_Decode$bool));
var _user$project$App_User_UserDecoder$decodeLocalisation = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		_elm_lang$core$Json_Decode$succeed(_user$project$App_User_UserModel$Localisation),
		A2(_elm_lang$core$Json_Decode$field, 'lon', _elm_lang$core$Json_Decode$float)),
	A2(_elm_lang$core$Json_Decode$field, 'lat', _elm_lang$core$Json_Decode$float));
var _user$project$App_User_UserDecoder$decodeUserStatus = A2(
	_elm_lang$core$Json_Decode$andThen,
	function (a) {
		var _p1 = a;
		switch (_p1) {
			case 'activated':
				return _elm_lang$core$Json_Decode$succeed(_user$project$App_User_UserModel$Activated);
			case 'resetpwd':
				return _elm_lang$core$Json_Decode$succeed(_user$project$App_User_UserModel$ResetPassword);
			case 'incomplete':
				return _elm_lang$core$Json_Decode$succeed(_user$project$App_User_UserModel$Incomplete);
			default:
				return _elm_lang$core$Json_Decode$succeed(_user$project$App_User_UserModel$NotActivated);
		}
	},
	_elm_lang$core$Json_Decode$string);
var _user$project$App_User_UserDecoder$decodeGender = A2(
	_elm_lang$core$Json_Decode$andThen,
	function (a) {
		var _p2 = a;
		switch (_p2) {
			case 'M':
				return _elm_lang$core$Json_Decode$succeed(_user$project$App_User_UserModel$M);
			case 'F':
				return _elm_lang$core$Json_Decode$succeed(_user$project$App_User_UserModel$F);
			case 'NB':
				return _elm_lang$core$Json_Decode$succeed(_user$project$App_User_UserModel$NB);
			case 'O':
				return _elm_lang$core$Json_Decode$succeed(_user$project$App_User_UserModel$O);
			default:
				return _elm_lang$core$Json_Decode$fail('Gender must be M, F, NB or O');
		}
	},
	_elm_lang$core$Json_Decode$string);
var _user$project$App_User_UserDecoder$decodeUser = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			A2(
				_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
				A2(
					_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
					A2(
						_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
						A2(
							_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
							A2(
								_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
								A2(
									_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
									A2(
										_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
										A2(
											_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
											A2(
												_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
												A2(
													_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
													A2(
														_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
														A2(
															_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
															_elm_lang$core$Json_Decode$succeed(_user$project$App_User_UserModel$User),
															A2(_elm_lang$core$Json_Decode$field, 'login', _elm_lang$core$Json_Decode$string)),
														_elm_lang$core$Json_Decode$maybe(
															A2(_elm_lang$core$Json_Decode$field, 'gender', _user$project$App_User_UserDecoder$decodeGender))),
													A2(_elm_lang$core$Json_Decode$field, 'bio', _elm_lang$core$Json_Decode$string)),
												A2(_elm_lang$core$Json_Decode$field, 'birth', _elm_lang$core$Json_Decode$int)),
											A2(_elm_lang$core$Json_Decode$field, 'liking', _elm_lang$core$Json_Decode$bool)),
										A2(_elm_lang$core$Json_Decode$field, 'liked', _elm_lang$core$Json_Decode$bool)),
									A2(_elm_lang$core$Json_Decode$field, 'likes', _elm_lang$core$Json_Decode$int)),
								A2(_elm_lang$core$Json_Decode$field, 'visits', _elm_lang$core$Json_Decode$int)),
							A2(_elm_lang$core$Json_Decode$field, 'has_talk', _elm_lang$core$Json_Decode$bool)),
						A2(_elm_lang$core$Json_Decode$field, 'visitor', _elm_lang$core$Json_Decode$bool)),
					A2(
						_elm_lang$core$Json_Decode$field,
						'tags',
						_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string))),
				A2(_elm_lang$core$Json_Decode$field, 'images', _user$project$App_User_UserDecoder$decodeImgs)),
			A2(_elm_lang$core$Json_Decode$field, 'last_connection', _elm_lang$core$Json_Decode$string)),
		A2(_elm_lang$core$Json_Decode$field, 'online', _elm_lang$core$Json_Decode$bool)),
	A2(_elm_lang$core$Json_Decode$field, 'distance', _elm_lang$core$Json_Decode$float));
var _user$project$App_User_UserDecoder$decodeIntIn = _elm_lang$core$Json_Decode$list(_user$project$App_User_UserDecoder$decodeGender);
var _user$project$App_User_UserDecoder$decodeSessionUser = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			A2(
				_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
				A2(
					_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
					A2(
						_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
						A2(
							_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
							A2(
								_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
								A2(
									_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
									A2(
										_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
										A2(
											_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
											A2(
												_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
												_elm_lang$core$Json_Decode$succeed(_user$project$App_User_UserModel$SessionUser),
												A2(_elm_lang$core$Json_Decode$field, 'login', _elm_lang$core$Json_Decode$string)),
											A2(_elm_lang$core$Json_Decode$field, 'fname', _elm_lang$core$Json_Decode$string)),
										A2(_elm_lang$core$Json_Decode$field, 'lname', _elm_lang$core$Json_Decode$string)),
									A2(_elm_lang$core$Json_Decode$field, 'email', _elm_lang$core$Json_Decode$string)),
								_elm_lang$core$Json_Decode$maybe(
									A2(_elm_lang$core$Json_Decode$field, 'gender', _user$project$App_User_UserDecoder$decodeGender))),
							A2(_elm_lang$core$Json_Decode$field, 'interested_in', _user$project$App_User_UserDecoder$decodeIntIn)),
						_elm_lang$core$Json_Decode$maybe(
							A2(_elm_lang$core$Json_Decode$field, 'bio', _elm_lang$core$Json_Decode$string))),
					_elm_lang$core$Json_Decode$maybe(
						A2(_elm_lang$core$Json_Decode$field, 'birth', _elm_lang$core$Json_Decode$int))),
				A2(
					_elm_lang$core$Json_Decode$field,
					'tags',
					_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string))),
			A2(_elm_lang$core$Json_Decode$field, 'localisation', _user$project$App_User_UserDecoder$decodeLocalisation)),
		A2(_elm_lang$core$Json_Decode$field, 'images', _user$project$App_User_UserDecoder$decodeImgs)),
	A2(_elm_lang$core$Json_Decode$field, 'activated', _user$project$App_User_UserDecoder$decodeUserStatus));
var _user$project$App_User_UserDecoder$usersSessionDecoder = _elm_lang$core$Json_Decode$list(_user$project$App_User_UserDecoder$decodeSessionUser);
var _user$project$App_User_UserDecoder$usersDecoder = _elm_lang$core$Json_Decode$list(_user$project$App_User_UserDecoder$decodeUser);
var _user$project$App_User_UserDecoder$encodeIntIn = function (intIn) {
	return _elm_lang$core$Json_Encode$list(
		A2(
			_elm_lang$core$List$map,
			function (g) {
				return _elm_lang$core$Json_Encode$string(
					_user$project$App_User_UserModel$genderToString(
						_elm_lang$core$Maybe$Just(g)));
			},
			intIn));
};
var _user$project$App_User_UserDecoder$decodeLocalisationResponse = A4(
	_elm_lang$core$Json_Decode$map3,
	_user$project$App_User_UserModel$LocalisationApi,
	A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'status',
			_1: {ctor: '[]'}
		},
		_elm_lang$core$Json_Decode$string),
	_elm_lang$core$Json_Decode$maybe(
		A2(
			_elm_lang$core$Json_Decode$at,
			{
				ctor: '::',
				_0: 'lon',
				_1: {ctor: '[]'}
			},
			_elm_lang$core$Json_Decode$float)),
	_elm_lang$core$Json_Decode$maybe(
		A2(
			_elm_lang$core$Json_Decode$at,
			{
				ctor: '::',
				_0: 'lat',
				_1: {ctor: '[]'}
			},
			_elm_lang$core$Json_Decode$float)));

var _user$project$App_User_UserCommands$logout = function (token) {
	var url = 'http://localhost:3001/api/users/disconnect';
	return A2(
		_elm_lang$http$Http$send,
		_user$project$Msgs$NoDataApiResponse,
		A3(_user$project$Api_ApiRequest$apiGetRequest, _elm_lang$core$Maybe$Nothing, token, url));
};
var _user$project$App_User_UserCommands$mainImg = F2(
	function (id_, token) {
		var body = _elm_lang$http$Http$jsonBody(
			_elm_lang$core$Json_Encode$object(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'id_img',
						_1: _elm_lang$core$Json_Encode$int(id_)
					},
					_1: {ctor: '[]'}
				}));
		var url = 'http://localhost:3001/api/users/update_main_image';
		return A2(
			_elm_lang$http$Http$send,
			_user$project$Msgs$UpdateFieldResponse,
			A4(
				_user$project$Api_ApiRequest$apiPostRequest,
				_elm_lang$core$Maybe$Just(_user$project$App_User_UserDecoder$decodeSessionUser),
				token,
				url,
				body));
	});
var _user$project$App_User_UserCommands$delImg = F2(
	function (id_, token) {
		var body = _elm_lang$http$Http$jsonBody(
			_elm_lang$core$Json_Encode$object(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'id_img',
						_1: _elm_lang$core$Json_Encode$int(id_)
					},
					_1: {ctor: '[]'}
				}));
		var url = 'http://localhost:3001/api/users/del_image';
		return A2(
			_elm_lang$http$Http$send,
			_user$project$Msgs$UpdateFieldResponse,
			A4(
				_user$project$Api_ApiRequest$apiPostRequest,
				_elm_lang$core$Maybe$Just(_user$project$App_User_UserDecoder$decodeSessionUser),
				token,
				url,
				body));
	});
var _user$project$App_User_UserCommands$uploadImage = F2(
	function (img, token) {
		var body = _elm_lang$http$Http$jsonBody(
			_elm_lang$core$Json_Encode$object(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'img',
						_1: _elm_lang$core$Json_Encode$string(img)
					},
					_1: {ctor: '[]'}
				}));
		var url = 'http://localhost:3001/api/users/new_image';
		return A2(
			_elm_lang$http$Http$send,
			_user$project$Msgs$UpdateFieldResponse,
			A4(
				_user$project$Api_ApiRequest$apiPostRequest,
				_elm_lang$core$Maybe$Just(_user$project$App_User_UserDecoder$decodeSessionUser),
				token,
				url,
				body));
	});
var _user$project$App_User_UserCommands$removeTag = F2(
	function (tag_, token) {
		var body = _elm_lang$http$Http$jsonBody(
			_elm_lang$core$Json_Encode$object(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'tag',
						_1: _elm_lang$core$Json_Encode$string(tag_)
					},
					_1: {ctor: '[]'}
				}));
		var url = 'http://localhost:3001/api/tag/remove';
		return A2(
			_elm_lang$http$Http$send,
			_user$project$Msgs$ReqTagResponse,
			A4(
				_user$project$Api_ApiRequest$apiPostRequest,
				_elm_lang$core$Maybe$Just(
					_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string)),
				token,
				url,
				body));
	});
var _user$project$App_User_UserCommands$addTag = F2(
	function (tag_, token) {
		var body = _elm_lang$http$Http$jsonBody(
			_elm_lang$core$Json_Encode$object(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'tag',
						_1: _elm_lang$core$Json_Encode$string(tag_)
					},
					_1: {ctor: '[]'}
				}));
		var url = 'http://localhost:3001/api/tag/add';
		return A2(
			_elm_lang$http$Http$send,
			_user$project$Msgs$ReqTagResponse,
			A4(
				_user$project$Api_ApiRequest$apiPostRequest,
				_elm_lang$core$Maybe$Just(
					_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string)),
				token,
				url,
				body));
	});
var _user$project$App_User_UserCommands$searchTag = F2(
	function (token, search) {
		var body = _elm_lang$http$Http$jsonBody(
			_elm_lang$core$Json_Encode$object(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'search',
						_1: _elm_lang$core$Json_Encode$string(search)
					},
					_1: {ctor: '[]'}
				}));
		var url = 'http://localhost:3001/api/tag/search';
		return A2(
			_elm_lang$http$Http$send,
			_user$project$Msgs$SearchTagResponse,
			A4(
				_user$project$Api_ApiRequest$apiPostRequest,
				_elm_lang$core$Maybe$Just(
					_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string)),
				token,
				url,
				body));
	});
var _user$project$App_User_UserCommands$updateDateOfBirth = F2(
	function (date, token) {
		var body = _elm_lang$http$Http$jsonBody(
			_elm_lang$core$Json_Encode$object(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'dob',
						_1: _elm_lang$core$Json_Encode$int(date)
					},
					_1: {ctor: '[]'}
				}));
		var url = 'http://localhost:3001/api/users/update_dob';
		return A2(
			_elm_lang$http$Http$send,
			_user$project$Msgs$UpdateFieldResponse,
			A4(
				_user$project$Api_ApiRequest$apiPostRequest,
				_elm_lang$core$Maybe$Just(_user$project$App_User_UserDecoder$decodeSessionUser),
				token,
				url,
				body));
	});
var _user$project$App_User_UserCommands$updateIntIn = F2(
	function (genders, token) {
		var body = _elm_lang$http$Http$jsonBody(
			_elm_lang$core$Json_Encode$object(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'genders',
						_1: _user$project$App_User_UserDecoder$encodeIntIn(genders)
					},
					_1: {ctor: '[]'}
				}));
		var url = 'http://localhost:3001/api/users/update_int_in';
		return A2(
			_elm_lang$http$Http$send,
			_user$project$Msgs$UpdateFieldResponse,
			A4(
				_user$project$Api_ApiRequest$apiPostRequest,
				_elm_lang$core$Maybe$Just(_user$project$App_User_UserDecoder$decodeSessionUser),
				token,
				url,
				body));
	});
var _user$project$App_User_UserCommands$updateGender = F2(
	function (gender, token) {
		var body = _elm_lang$http$Http$jsonBody(
			_elm_lang$core$Json_Encode$object(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'gender',
						_1: _elm_lang$core$Json_Encode$string(
							_user$project$App_User_UserModel$genderToString(
								_elm_lang$core$Maybe$Just(gender)))
					},
					_1: {ctor: '[]'}
				}));
		var url = 'http://localhost:3001/api/users/update_gender';
		return A2(
			_elm_lang$http$Http$send,
			_user$project$Msgs$UpdateFieldResponse,
			A4(
				_user$project$Api_ApiRequest$apiPostRequest,
				_elm_lang$core$Maybe$Just(_user$project$App_User_UserDecoder$decodeSessionUser),
				token,
				url,
				body));
	});
var _user$project$App_User_UserCommands$changePwd = F4(
	function (oldPwd, newPwd, confirmNewPwd, token) {
		var body = _elm_lang$http$Http$jsonBody(
			_elm_lang$core$Json_Encode$object(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'oldPwd',
						_1: _elm_lang$core$Json_Encode$string(oldPwd)
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'newPwd',
							_1: _elm_lang$core$Json_Encode$string(newPwd)
						},
						_1: {
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'reNewPwd',
								_1: _elm_lang$core$Json_Encode$string(confirmNewPwd)
							},
							_1: {ctor: '[]'}
						}
					}
				}));
		var url = 'http://localhost:3001/api/users/change_password';
		return A2(
			_elm_lang$http$Http$send,
			_user$project$Msgs$ChangePwdRespone,
			A4(_user$project$Api_ApiRequest$apiPostRequest, _elm_lang$core$Maybe$Nothing, token, url, body));
	});
var _user$project$App_User_UserCommands$saveLocation = F2(
	function (loc, token) {
		var body = _elm_lang$http$Http$jsonBody(
			_elm_lang$core$Json_Encode$object(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'lat',
						_1: _elm_lang$core$Json_Encode$float(loc.lat)
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'lon',
							_1: _elm_lang$core$Json_Encode$float(loc.lon)
						},
						_1: {ctor: '[]'}
					}
				}));
		var url = 'http://localhost:3001/api/users/save_loc';
		return A2(
			_elm_lang$http$Http$send,
			_user$project$Msgs$SaveLocRespone,
			A4(_user$project$Api_ApiRequest$apiPostRequest, _elm_lang$core$Maybe$Nothing, token, url, body));
	});
var _user$project$App_User_UserCommands$getIpLocalisation = A2(
	_elm_lang$core$Platform_Cmd$map,
	_user$project$Msgs$GetIpLocalisationResponse,
	_krisajenkins$remotedata$RemoteData$sendRequest(
		A2(_elm_lang$http$Http$get, 'http://ip-api.com/json', _user$project$App_User_UserDecoder$decodeLocalisationResponse)));
var _user$project$App_User_UserCommands$sendVisitNotif = F2(
	function (token, to) {
		var body = A2(
			_elm_lang$core$Json_Encode$encode,
			0,
			_elm_lang$core$Json_Encode$object(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'jwt',
						_1: _elm_lang$core$Json_Encode$string(token)
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'action',
							_1: _elm_lang$core$Json_Encode$string('visit')
						},
						_1: {
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'to',
								_1: _elm_lang$core$Json_Encode$string(to)
							},
							_1: {ctor: '[]'}
						}
					}
				}));
		return A2(_elm_lang$websocket$WebSocket$send, 'ws://localhost:3001/ws', body);
	});
var _user$project$App_User_UserCommands$sendUnlikeNotif = F2(
	function (token, to) {
		var body = A2(
			_elm_lang$core$Json_Encode$encode,
			0,
			_elm_lang$core$Json_Encode$object(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'jwt',
						_1: _elm_lang$core$Json_Encode$string(token)
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'action',
							_1: _elm_lang$core$Json_Encode$string('unlike')
						},
						_1: {
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'to',
								_1: _elm_lang$core$Json_Encode$string(to)
							},
							_1: {ctor: '[]'}
						}
					}
				}));
		return A2(_elm_lang$websocket$WebSocket$send, 'ws://localhost:3001/ws', body);
	});
var _user$project$App_User_UserCommands$sendLikeNotif = F2(
	function (token, to) {
		var body = A2(
			_elm_lang$core$Json_Encode$encode,
			0,
			_elm_lang$core$Json_Encode$object(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'jwt',
						_1: _elm_lang$core$Json_Encode$string(token)
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'action',
							_1: _elm_lang$core$Json_Encode$string('like')
						},
						_1: {
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'to',
								_1: _elm_lang$core$Json_Encode$string(to)
							},
							_1: {ctor: '[]'}
						}
					}
				}));
		return A2(_elm_lang$websocket$WebSocket$send, 'ws://localhost:3001/ws', body);
	});
var _user$project$App_User_UserCommands$blockUser = F2(
	function (user, token) {
		var url = A2(_elm_lang$core$Basics_ops['++'], 'http://localhost:3001/api/users/block/', user);
		return A2(
			_elm_lang$http$Http$send,
			_user$project$Msgs$NoDataApiResponse,
			A3(_user$project$Api_ApiRequest$apiGetRequest, _elm_lang$core$Maybe$Nothing, token, url));
	});
var _user$project$App_User_UserCommands$reportUser = F2(
	function (user, token) {
		var url = A2(_elm_lang$core$Basics_ops['++'], 'http://localhost:3001/api/users/report/', user);
		return A2(
			_elm_lang$http$Http$send,
			_user$project$Msgs$NoDataApiResponse,
			A3(_user$project$Api_ApiRequest$apiGetRequest, _elm_lang$core$Maybe$Nothing, token, url));
	});
var _user$project$App_User_UserCommands$toggleLike = F2(
	function (username, token) {
		var body = _elm_lang$http$Http$jsonBody(
			_elm_lang$core$Json_Encode$object(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'username',
						_1: _elm_lang$core$Json_Encode$string(username)
					},
					_1: {ctor: '[]'}
				}));
		var url = 'http://localhost:3001/api/users/toggle_like';
		return A2(
			_elm_lang$http$Http$send,
			_user$project$Msgs$LikeResponse,
			A4(
				_user$project$Api_ApiRequest$apiPostRequest,
				_elm_lang$core$Maybe$Just(_user$project$App_User_UserDecoder$decodeUser),
				token,
				url,
				body));
	});
var _user$project$App_User_UserCommands$updateAccountInfos = F5(
	function (fname, lname, email, bio, token) {
		var body = _elm_lang$http$Http$jsonBody(
			_elm_lang$core$Json_Encode$object(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'email',
						_1: _elm_lang$core$Json_Encode$string(email)
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'fname',
							_1: _elm_lang$core$Json_Encode$string(fname)
						},
						_1: {
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'lname',
								_1: _elm_lang$core$Json_Encode$string(lname)
							},
							_1: {
								ctor: '::',
								_0: {
									ctor: '_Tuple2',
									_0: 'bio',
									_1: _elm_lang$core$Json_Encode$string(bio)
								},
								_1: {ctor: '[]'}
							}
						}
					}
				}));
		var url = 'http://localhost:3001/api/users/update';
		return A2(
			_elm_lang$http$Http$send,
			A4(_user$project$Msgs$EditAccountResponse, email, fname, lname, bio),
			A4(_user$project$Api_ApiRequest$apiPostRequest, _elm_lang$core$Maybe$Nothing, token, url, body));
	});
var _user$project$App_User_UserCommands$getSessionUser = function (token) {
	var url = 'http://localhost:3001/api/users/connected_user';
	return A2(
		_elm_lang$http$Http$send,
		_user$project$Msgs$SessionUserResponse(token),
		A3(
			_user$project$Api_ApiRequest$apiGetRequest,
			_elm_lang$core$Maybe$Just(_user$project$App_User_UserDecoder$decodeSessionUser),
			token,
			url));
};
var _user$project$App_User_UserCommands$getUser = F2(
	function (user, token) {
		var url = A2(_elm_lang$core$Basics_ops['++'], 'http://localhost:3001/api/users/user/', user);
		return A2(
			_elm_lang$http$Http$send,
			_user$project$Msgs$UserResponse,
			A3(
				_user$project$Api_ApiRequest$apiGetRequest,
				_elm_lang$core$Maybe$Just(_user$project$App_User_UserDecoder$decodeUser),
				token,
				url));
	});
var _user$project$App_User_UserCommands$searchUser = F2(
	function (search, token) {
		var maxDist = function () {
			var _p0 = search.loc;
			if (_p0.ctor === 'Just') {
				return _elm_lang$core$Json_Encode$int(_p0._0);
			} else {
				return _elm_lang$core$Json_Encode$bool(false);
			}
		}();
		var maxYear = function () {
			var _p1 = search.yearMax;
			if (_p1.ctor === 'Just') {
				return 2018 - _p1._0;
			} else {
				return 0;
			}
		}();
		var minYear = function () {
			var _p2 = search.yearMin;
			if (_p2.ctor === 'Just') {
				return 2018 - _p2._0;
			} else {
				return 2018;
			}
		}();
		var body = _elm_lang$http$Http$jsonBody(
			_elm_lang$core$Json_Encode$object(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'searchLogin',
						_1: _elm_lang$core$Json_Encode$string(search.login)
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'searchTags',
							_1: _elm_lang$core$Json_Encode$list(
								A2(_elm_lang$core$List$map, _elm_lang$core$Json_Encode$string, search.tags))
						},
						_1: {
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'searchMax',
								_1: _elm_lang$core$Json_Encode$int(minYear)
							},
							_1: {
								ctor: '::',
								_0: {
									ctor: '_Tuple2',
									_0: 'searchMin',
									_1: _elm_lang$core$Json_Encode$int(maxYear)
								},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'searchLoc', _1: maxDist},
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}));
		var url = 'http://localhost:3001/api/users/search';
		return A2(
			_elm_lang$http$Http$send,
			_user$project$Msgs$SearchResponse,
			A4(
				_user$project$Api_ApiRequest$apiPostRequest,
				_elm_lang$core$Maybe$Just(_user$project$App_User_UserDecoder$usersDecoder),
				token,
				url,
				body));
	});
var _user$project$App_User_UserCommands$getRelevantUsers = F2(
	function (users, token) {
		var url = function () {
			var _p3 = users;
			switch (_p3) {
				case 'visitors':
					return 'http://localhost:3001/api/users/visitors';
				case 'likers':
					return 'http://localhost:3001/api/users/likers';
				case 'matchers':
					return 'http://localhost:3001/api/users/matchers';
				default:
					return 'http://localhost:3001/api/users/relevant_users';
			}
		}();
		return A2(
			_elm_lang$http$Http$send,
			_user$project$Msgs$UsersResponse,
			A3(
				_user$project$Api_ApiRequest$apiGetRequest,
				_elm_lang$core$Maybe$Just(_user$project$App_User_UserDecoder$usersDecoder),
				token,
				url));
	});

var _user$project$App_User_UserHelper$updateTagListFilter = F2(
	function (filters, tag_) {
		return A2(
			_elm_lang$core$List$map,
			function (f) {
				var _p0 = f;
				if (_p0.ctor === 'F_Tags') {
					var _p1 = _p0._0;
					return A2(_elm_lang$core$List$member, tag_, _p1) ? _user$project$App_User_UserModel$F_Tags(
						A2(
							_elm_lang$core$List$filter,
							function (t) {
								return !_elm_lang$core$Native_Utils.eq(t, tag_);
							},
							_p1)) : _user$project$App_User_UserModel$F_Tags(
						{ctor: '::', _0: tag_, _1: _p1});
				} else {
					return f;
				}
			},
			filters);
	});
var _user$project$App_User_UserHelper$isLocFilter = function (filter_) {
	var _p2 = filter_;
	if (_p2.ctor === 'F_Loc') {
		return true;
	} else {
		return false;
	}
};
var _user$project$App_User_UserHelper$updateLocFilter = F2(
	function (filters, dist) {
		var _p3 = A2(_elm_lang$core$List$filter, _user$project$App_User_UserHelper$isLocFilter, filters);
		if (_p3.ctor === '::') {
			return {
				ctor: '::',
				_0: _user$project$App_User_UserModel$F_Loc(dist),
				_1: A2(
					_elm_lang$core$List$filter,
					function (f) {
						return !_user$project$App_User_UserHelper$isLocFilter(f);
					},
					filters)
			};
		} else {
			return {
				ctor: '::',
				_0: _user$project$App_User_UserModel$F_Loc(dist),
				_1: filters
			};
		}
	});
var _user$project$App_User_UserHelper$isMaxFilter = function (filter_) {
	var _p4 = filter_;
	if (_p4.ctor === 'F_MaxAge') {
		return true;
	} else {
		return false;
	}
};
var _user$project$App_User_UserHelper$updateMaxAgeFilter = F2(
	function (filters, age) {
		var _p5 = A2(_elm_lang$core$List$filter, _user$project$App_User_UserHelper$isMaxFilter, filters);
		if (_p5.ctor === '::') {
			return {
				ctor: '::',
				_0: _user$project$App_User_UserModel$F_MaxAge(age),
				_1: A2(
					_elm_lang$core$List$filter,
					function (f) {
						return !_user$project$App_User_UserHelper$isMaxFilter(f);
					},
					filters)
			};
		} else {
			return {
				ctor: '::',
				_0: _user$project$App_User_UserModel$F_MaxAge(age),
				_1: filters
			};
		}
	});
var _user$project$App_User_UserHelper$isMinFilter = function (filter_) {
	var _p6 = filter_;
	if (_p6.ctor === 'F_MinAge') {
		return true;
	} else {
		return false;
	}
};
var _user$project$App_User_UserHelper$updateMinAgeFilter = F2(
	function (filters, age) {
		var _p7 = A2(_elm_lang$core$List$filter, _user$project$App_User_UserHelper$isMinFilter, filters);
		if (_p7.ctor === '::') {
			return {
				ctor: '::',
				_0: _user$project$App_User_UserModel$F_MinAge(age),
				_1: A2(
					_elm_lang$core$List$filter,
					function (f) {
						return !_user$project$App_User_UserHelper$isMinFilter(f);
					},
					filters)
			};
		} else {
			return {
				ctor: '::',
				_0: _user$project$App_User_UserModel$F_MinAge(age),
				_1: filters
			};
		}
	});
var _user$project$App_User_UserHelper$isFilterTag = function (filter_) {
	var _p8 = filter_;
	if (_p8.ctor === 'F_Tags') {
		return true;
	} else {
		return false;
	}
};
var _user$project$App_User_UserHelper$updateFilterTag = F2(
	function (filters, tag_) {
		var _p9 = A2(_elm_lang$core$List$filter, _user$project$App_User_UserHelper$isFilterTag, filters);
		if (_p9.ctor === '::') {
			return A2(_user$project$App_User_UserHelper$updateTagListFilter, filters, tag_);
		} else {
			return {
				ctor: '::',
				_0: _user$project$App_User_UserModel$F_Tags(
					{
						ctor: '::',
						_0: tag_,
						_1: {ctor: '[]'}
					}),
				_1: filters
			};
		}
	});
var _user$project$App_User_UserHelper$getFilterTags = function (filters) {
	var _p10 = A2(_elm_lang$core$List$filter, _user$project$App_User_UserHelper$isFilterTag, filters);
	if ((_p10.ctor === '::') && (_p10._0.ctor === 'F_Tags')) {
		return _p10._0._0;
	} else {
		return {ctor: '[]'};
	}
};
var _user$project$App_User_UserHelper$filterTags = F2(
	function (tags, user) {
		return A3(
			_elm_lang$core$List$foldl,
			F2(
				function (x, y) {
					return x && y;
				}),
			true,
			A2(
				_elm_lang$core$List$map,
				function (t) {
					return A2(_elm_lang$core$List$member, t, user.tags);
				},
				tags));
	});
var _user$project$App_User_UserHelper$filterLoc = F2(
	function (dist, user) {
		return _elm_lang$core$Native_Utils.cmp(user.distance, dist) < 1;
	});
var _user$project$App_User_UserHelper$filterMaxAge = F2(
	function (max_, user) {
		var age = 2018 - user.date_of_birth;
		return _elm_lang$core$Native_Utils.cmp(age, max_) < 1;
	});
var _user$project$App_User_UserHelper$filterMinAge = F2(
	function (min_, user) {
		var age = 2018 - user.date_of_birth;
		return _elm_lang$core$Native_Utils.cmp(age, min_) > -1;
	});
var _user$project$App_User_UserHelper$applyUserFilter = F2(
	function (fil, u) {
		var _p11 = fil;
		switch (_p11.ctor) {
			case 'F_MinAge':
				return A2(_user$project$App_User_UserHelper$filterMinAge, _p11._0, u);
			case 'F_MaxAge':
				return A2(_user$project$App_User_UserHelper$filterMaxAge, _p11._0, u);
			case 'F_Loc':
				return A2(_user$project$App_User_UserHelper$filterLoc, _p11._0, u);
			default:
				return A2(_user$project$App_User_UserHelper$filterTags, _p11._0, u);
		}
	});
var _user$project$App_User_UserHelper$filterUser = F2(
	function (filters, u) {
		return A3(
			_elm_lang$core$List$foldl,
			F2(
				function (x, y) {
					return x && y;
				}),
			true,
			A2(
				_elm_lang$core$List$map,
				function (f) {
					return A2(_user$project$App_User_UserHelper$applyUserFilter, f, u);
				},
				filters));
	});
var _user$project$App_User_UserHelper$toggleOrder = function (order) {
	return _elm_lang$core$Native_Utils.eq(order, _user$project$App_User_UserModel$ASC) ? _user$project$App_User_UserModel$DESC : _user$project$App_User_UserModel$ASC;
};
var _user$project$App_User_UserHelper$getCommonTags = F2(
	function (tags1, tags2) {
		return _elm_lang$core$List$sum(
			A2(
				_elm_lang$core$List$map,
				function (t) {
					return A2(_elm_lang$core$List$member, t, tags1) ? 1 : 0;
				},
				tags2));
	});
var _user$project$App_User_UserHelper$getAffinityScore = F2(
	function (me, user) {
		return (((1 / (user.distance + 1)) * 0.4) + (_elm_lang$core$Basics$toFloat(
			user.likes * A2(_user$project$App_User_UserHelper$getCommonTags, me.tags, user.tags)) * 0.5)) + (_elm_lang$core$Basics$toFloat(user.likes) * 0.1);
	});
var _user$project$App_User_UserHelper$getMatchStatus = function (user) {
	var _p12 = {ctor: '_Tuple2', _0: user.liked, _1: user.liking};
	if (_p12._0 === false) {
		if (_p12._1 === false) {
			return _user$project$App_User_UserModel$None;
		} else {
			return _user$project$App_User_UserModel$To;
		}
	} else {
		if (_p12._1 === false) {
			return _user$project$App_User_UserModel$From;
		} else {
			return _user$project$App_User_UserModel$Match;
		}
	}
};
var _user$project$App_User_UserHelper$findUserByName = F2(
	function (username, users) {
		return _elm_lang$core$List$head(
			A2(
				_elm_lang$core$List$filter,
				function (u) {
					return _elm_lang$core$Native_Utils.eq(username, u.username);
				},
				users));
	});
var _user$project$App_User_UserHelper$getOnlineStatus = F2(
	function (model, user) {
		var _p13 = {
			ctor: '_Tuple2',
			_0: _elm_lang$core$String$toFloat(user.lastOn),
			_1: model.currentTime
		};
		if (((_p13.ctor === '_Tuple2') && (_p13._0.ctor === 'Ok')) && (_p13._1.ctor === 'Just')) {
			return ((_elm_lang$core$Native_Utils.cmp(_p13._0._0, _p13._1._0 - 7200000) > 0) && user.online) ? true : false;
		} else {
			return false;
		}
	});

var _user$project$App_User_UserUpdate$updateUser = F2(
	function (model, user) {
		return _elm_lang$core$Native_Utils.update(
			model,
			{
				users: A2(
					_elm_lang$core$List$map,
					function (u) {
						return _elm_lang$core$Native_Utils.eq(user.username, u.username) ? user : u;
					},
					model.users)
			});
	});
var _user$project$App_User_UserUpdate$updateUsers = F2(
	function (model, users) {
		return _elm_lang$core$Native_Utils.update(
			model,
			{users: users});
	});
var _user$project$App_User_UserUpdate$changeUserImage = F2(
	function (to, user) {
		var _p0 = {ctor: '_Tuple2', _0: user.photos, _1: to};
		_v0_2:
		do {
			if (_p0.ctor === '_Tuple2') {
				switch (_p0._1) {
					case 1:
						if (_p0._0.ctor === '::') {
							return _elm_lang$core$Native_Utils.update(
								user,
								{
									photos: A2(
										_elm_lang$core$Basics_ops['++'],
										_p0._0._1,
										{
											ctor: '::',
											_0: _p0._0._0,
											_1: {ctor: '[]'}
										})
								});
						} else {
							break _v0_2;
						}
					case -1:
						var _p1 = _p0._0;
						return _elm_lang$core$Native_Utils.update(
							user,
							{
								photos: A2(
									_elm_lang$core$Basics_ops['++'],
									A2(
										_elm_lang$core$List$drop,
										_elm_lang$core$List$length(_p1) - 1,
										_p1),
									A2(
										_elm_lang$core$List$take,
										_elm_lang$core$List$length(_p1) - 1,
										_p1))
							});
					default:
						break _v0_2;
				}
			} else {
				break _v0_2;
			}
		} while(false);
		return user;
	});
var _user$project$App_User_UserUpdate$showImage = F3(
	function (to, user, users) {
		return A2(
			_elm_lang$core$List$map,
			function (u) {
				return _elm_lang$core$Native_Utils.eq(user.username, u.username) ? A2(_user$project$App_User_UserUpdate$changeUserImage, to, user) : u;
			},
			users);
	});

var _user$project$Login_LoginCommands$sendFastNewUser = F7(
	function (username, fname, lname, email, pwd, repwd, loc) {
		var body = _elm_lang$http$Http$jsonBody(
			_elm_lang$core$Json_Encode$object(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'username',
						_1: _elm_lang$core$Json_Encode$string(username)
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'fname',
							_1: _elm_lang$core$Json_Encode$string(fname)
						},
						_1: {
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'lname',
								_1: _elm_lang$core$Json_Encode$string(lname)
							},
							_1: {
								ctor: '::',
								_0: {
									ctor: '_Tuple2',
									_0: 'email',
									_1: _elm_lang$core$Json_Encode$string(email)
								},
								_1: {
									ctor: '::',
									_0: {
										ctor: '_Tuple2',
										_0: 'password',
										_1: _elm_lang$core$Json_Encode$string(pwd)
									},
									_1: {
										ctor: '::',
										_0: {
											ctor: '_Tuple2',
											_0: 'rePassword',
											_1: _elm_lang$core$Json_Encode$string(repwd)
										},
										_1: {
											ctor: '::',
											_0: {
												ctor: '_Tuple2',
												_0: 'lon',
												_1: _elm_lang$core$Json_Encode$float(loc.lon)
											},
											_1: {
												ctor: '::',
												_0: {
													ctor: '_Tuple2',
													_0: 'lat',
													_1: _elm_lang$core$Json_Encode$float(loc.lat)
												},
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						}
					}
				}));
		return A2(
			_elm_lang$core$Platform_Cmd$map,
			_user$project$Msgs$NewUserResponse,
			_krisajenkins$remotedata$RemoteData$sendRequest(
				A3(
					_elm_lang$http$Http$post,
					'http://localhost:3001/auth/new',
					body,
					_user$project$Api_ApiDecoder$decodeApiResponse(_elm_lang$core$Maybe$Nothing))));
	});
var _user$project$Login_LoginCommands$resetPwd = F2(
	function (login, email) {
		var body = _elm_lang$http$Http$jsonBody(
			_elm_lang$core$Json_Encode$object(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'username',
						_1: _elm_lang$core$Json_Encode$string(login)
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'email',
							_1: _elm_lang$core$Json_Encode$string(email)
						},
						_1: {ctor: '[]'}
					}
				}));
		return A2(
			_elm_lang$core$Platform_Cmd$map,
			_user$project$Msgs$ResetPwdResponse,
			_krisajenkins$remotedata$RemoteData$sendRequest(
				A3(
					_elm_lang$http$Http$post,
					'http://localhost:3001/auth/reset_password',
					body,
					_user$project$Api_ApiDecoder$decodeApiResponse(_elm_lang$core$Maybe$Nothing))));
	});
var _user$project$Login_LoginCommands$decodeAuthResponse = A5(
	_elm_lang$core$Json_Decode$map4,
	_user$project$Models$AuthResponse,
	A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'status',
			_1: {ctor: '[]'}
		},
		_elm_lang$core$Json_Decode$bool),
	_elm_lang$core$Json_Decode$maybe(
		A2(
			_elm_lang$core$Json_Decode$at,
			{
				ctor: '::',
				_0: 'msg',
				_1: {ctor: '[]'}
			},
			_elm_lang$core$Json_Decode$string)),
	_elm_lang$core$Json_Decode$maybe(
		A2(
			_elm_lang$core$Json_Decode$at,
			{
				ctor: '::',
				_0: 'token',
				_1: {ctor: '[]'}
			},
			_elm_lang$core$Json_Decode$string)),
	_elm_lang$core$Json_Decode$maybe(
		A2(
			_elm_lang$core$Json_Decode$at,
			{
				ctor: '::',
				_0: 'data',
				_1: {ctor: '[]'}
			},
			_user$project$App_User_UserDecoder$decodeSessionUser)));
var _user$project$Login_LoginCommands$sendLogin = F2(
	function (login, pwd) {
		var body = _elm_lang$http$Http$jsonBody(
			_elm_lang$core$Json_Encode$object(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'login',
						_1: _elm_lang$core$Json_Encode$string(login)
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'password',
							_1: _elm_lang$core$Json_Encode$string(pwd)
						},
						_1: {ctor: '[]'}
					}
				}));
		return A2(
			_elm_lang$core$Platform_Cmd$map,
			_user$project$Msgs$LoginResponse,
			_krisajenkins$remotedata$RemoteData$sendRequest(
				A3(_elm_lang$http$Http$post, 'http://localhost:3001/auth/token', body, _user$project$Login_LoginCommands$decodeAuthResponse)));
	});

var _user$project$Routing$matchersApp = _evancz$url_parser$UrlParser$oneOf(
	{
		ctor: '::',
		_0: A2(
			_evancz$url_parser$UrlParser$map,
			_user$project$App_AppModels$UsersRoute('all'),
			_evancz$url_parser$UrlParser$top),
		_1: {
			ctor: '::',
			_0: A2(
				_evancz$url_parser$UrlParser$map,
				_user$project$App_AppModels$UsersRoute('all'),
				_evancz$url_parser$UrlParser$s('users')),
			_1: {
				ctor: '::',
				_0: A2(
					_evancz$url_parser$UrlParser$map,
					_user$project$App_AppModels$UsersRoute,
					A2(
						_evancz$url_parser$UrlParser_ops['</>'],
						_evancz$url_parser$UrlParser$s('users'),
						_evancz$url_parser$UrlParser$string)),
				_1: {
					ctor: '::',
					_0: A2(
						_evancz$url_parser$UrlParser$map,
						_user$project$App_AppModels$SearchRoute,
						_evancz$url_parser$UrlParser$s('search')),
					_1: {ctor: '[]'}
				}
			}
		}
	});
var _user$project$Routing$parseAppLocation = function (location) {
	var _p0 = A2(_evancz$url_parser$UrlParser$parseHash, _user$project$Routing$matchersApp, location);
	if (_p0.ctor === 'Just') {
		return _p0._0;
	} else {
		return _user$project$App_AppModels$NotFoundAppRoute;
	}
};
var _user$project$Routing$matchersLogin = _evancz$url_parser$UrlParser$oneOf(
	{
		ctor: '::',
		_0: A2(_evancz$url_parser$UrlParser$map, _user$project$Login_LoginModels$LoginRoute, _evancz$url_parser$UrlParser$top),
		_1: {
			ctor: '::',
			_0: A2(
				_evancz$url_parser$UrlParser$map,
				_user$project$Login_LoginModels$LoginRoute,
				_evancz$url_parser$UrlParser$s('login')),
			_1: {
				ctor: '::',
				_0: A2(
					_evancz$url_parser$UrlParser$map,
					_user$project$Login_LoginModels$SigninRoute,
					_evancz$url_parser$UrlParser$s('signup')),
				_1: {
					ctor: '::',
					_0: A2(
						_evancz$url_parser$UrlParser$map,
						_user$project$Login_LoginModels$ResetPwdRoute,
						_evancz$url_parser$UrlParser$s('password_reset')),
					_1: {ctor: '[]'}
				}
			}
		}
	});
var _user$project$Routing$parseLoginLocation = function (location) {
	var _p1 = A2(_evancz$url_parser$UrlParser$parseHash, _user$project$Routing$matchersLogin, location);
	if (_p1.ctor === 'Just') {
		return _p1._0;
	} else {
		return _user$project$Login_LoginModels$NotFoundLoginRoute;
	}
};

var _user$project$Utils$onClickCustom = F3(
	function (pd, sp, msg) {
		return A3(
			_elm_lang$html$Html_Events$onWithOptions,
			'click',
			{preventDefault: pd, stopPropagation: sp},
			_elm_lang$core$Json_Decode$succeed(msg));
	});
var _user$project$Utils$genderToIcon = function (g) {
	var _p0 = g;
	if (_p0.ctor === 'Just') {
		switch (_p0._0.ctor) {
			case 'M':
				return A3(
					_elm_lang$html$Html_Keyed$node,
					'male',
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('fas fa-mars'),
						_1: {ctor: '[]'}
					},
					{ctor: '[]'});
			case 'F':
				return A3(
					_elm_lang$html$Html_Keyed$node,
					'female',
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('fas fa-venus'),
						_1: {ctor: '[]'}
					},
					{ctor: '[]'});
			case 'NB':
				return A3(
					_elm_lang$html$Html_Keyed$node,
					'non-binary',
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('fas fa-transgender-alt'),
						_1: {ctor: '[]'}
					},
					{ctor: '[]'});
			default:
				return A3(
					_elm_lang$html$Html_Keyed$node,
					'other',
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('fas fa-genderless'),
						_1: {ctor: '[]'}
					},
					{ctor: '[]'});
		}
	} else {
		return A2(
			_elm_lang$html$Html$span,
			{ctor: '[]'},
			{ctor: '[]'});
	}
};
var _user$project$Utils$icon = function (fa) {
	return A2(
		_elm_lang$html$Html$i,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class(fa),
			_1: {ctor: '[]'}
		},
		{ctor: '[]'});
};
var _user$project$Utils$notif = function (notif) {
	return (_elm_lang$core$Native_Utils.cmp(notif, 0) > 0) ? A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('notif'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(
				_elm_lang$core$Basics$toString(notif)),
			_1: {ctor: '[]'}
		}) : A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{ctor: '[]'});
};
var _user$project$Utils$now = A2(
	_elm_lang$core$Task$perform,
	function (_p1) {
		return _user$project$Msgs$SetCurrentTime(
			_elm_lang$core$Maybe$Just(_p1));
	},
	_elm_lang$core$Time$now);
var _user$project$Utils$formatDate = function (date) {
	var s = _elm_lang$core$Basics$toString(
		_elm_lang$core$Date$second(date));
	var m = _elm_lang$core$Basics$toString(
		_elm_lang$core$Date$minute(date));
	var h = _elm_lang$core$Basics$toString(
		_elm_lang$core$Date$hour(date));
	var day = _elm_lang$core$Basics$toString(
		_elm_lang$core$Date$day(date));
	var month = function () {
		var _p2 = _elm_lang$core$Date$month(date);
		switch (_p2.ctor) {
			case 'Jan':
				return 'jan';
			case 'Feb':
				return 'feb';
			case 'Mar':
				return 'mar';
			case 'Apr':
				return 'apr';
			case 'May':
				return 'may';
			case 'Jun':
				return 'jun';
			case 'Jul':
				return 'jul';
			case 'Aug':
				return 'aug';
			case 'Sep':
				return 'sep';
			case 'Oct':
				return 'oct';
			case 'Nov':
				return 'nov';
			default:
				return 'dec';
		}
	}();
	var year = _elm_lang$core$Basics$toString(
		_elm_lang$core$Date$year(date));
	return A2(
		_elm_lang$core$Basics_ops['++'],
		day,
		A2(
			_elm_lang$core$Basics_ops['++'],
			' ',
			A2(
				_elm_lang$core$Basics_ops['++'],
				month,
				A2(
					_elm_lang$core$Basics_ops['++'],
					' ',
					A2(
						_elm_lang$core$Basics_ops['++'],
						year,
						A2(
							_elm_lang$core$Basics_ops['++'],
							' ',
							A2(
								_elm_lang$core$Basics_ops['++'],
								h,
								A2(
									_elm_lang$core$Basics_ops['++'],
									':',
									A2(
										_elm_lang$core$Basics_ops['++'],
										m,
										A2(_elm_lang$core$Basics_ops['++'], ':', s))))))))));
};

var _user$project$App_AppUpdate$updateTalksModel = F2(
	function (newTalks, model) {
		var _p0 = model;
		if (_p0.ctor === 'Connected') {
			return A5(_user$project$Models$Connected, _p0._0, _p0._1, _p0._2, _p0._3, newTalks);
		} else {
			return model;
		}
	});
var _user$project$App_AppUpdate$updateUsersModel = F2(
	function (newUsers, model) {
		var _p1 = model;
		if (_p1.ctor === 'Connected') {
			return A5(_user$project$Models$Connected, _p1._0, _p1._1, _p1._2, newUsers, _p1._4);
		} else {
			return model;
		}
	});
var _user$project$App_AppUpdate$updateSessionModel = F2(
	function (newSessionModel, model) {
		var _p2 = model;
		if (_p2.ctor === 'Connected') {
			return A5(_user$project$Models$Connected, _p2._0, newSessionModel, _p2._2, _p2._3, _p2._4);
		} else {
			return model;
		}
	});
var _user$project$App_AppUpdate$updateAppModel = F2(
	function (newAppModel, model) {
		var _p3 = model;
		if (_p3.ctor === 'Connected') {
			return A5(_user$project$Models$Connected, _p3._0, _p3._1, newAppModel, _p3._3, _p3._4);
		} else {
			return model;
		}
	});
var _user$project$App_AppUpdate$updateAlertMsg = F2(
	function (msg, model) {
		var _p4 = model;
		if (_p4.ctor === 'Connected') {
			return A2(
				_user$project$App_AppUpdate$updateAppModel,
				_elm_lang$core$Native_Utils.update(
					_p4._2,
					{
						message: _elm_lang$core$Maybe$Just(msg)
					}),
				model);
		} else {
			return model;
		}
	});
var _user$project$App_AppUpdate$handleApiResponse = F6(
	function (response, updateData, successUpdate, errorMsg, cmd, model) {
		var _p5 = response;
		if (_p5.ctor === 'Ok') {
			var _p7 = _p5._0;
			var _p6 = {ctor: '_Tuple3', _0: _p7.status, _1: _p7.data, _2: _p7.message};
			_v6_2:
			do {
				if (_p6.ctor === '_Tuple3') {
					if (_p6._0 === true) {
						if (_p6._1.ctor === 'Just') {
							return {
								ctor: '_Tuple2',
								_0: A2(
									successUpdate,
									updateData(_p6._1._0),
									model),
								_1: cmd
							};
						} else {
							break _v6_2;
						}
					} else {
						if (_p6._2.ctor === 'Just') {
							return {
								ctor: '_Tuple2',
								_0: A2(_user$project$App_AppUpdate$updateAlertMsg, _p6._2._0, model),
								_1: _elm_lang$core$Platform_Cmd$none
							};
						} else {
							break _v6_2;
						}
					}
				} else {
					break _v6_2;
				}
			} while(false);
			return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		} else {
			return {
				ctor: '_Tuple2',
				_0: A2(_user$project$App_AppUpdate$updateAlertMsg, 'Error server', model),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		}
	});
var _user$project$App_AppUpdate$updateApp = F6(
	function (msg, route, session, appModel, usersModel, talksModel) {
		var disconnect = {
			ctor: '_Tuple2',
			_0: _user$project$Models$initialModel(_user$project$Login_LoginModels$LoginRoute),
			_1: _elm_lang$navigation$Navigation$newUrl('/#/login')
		};
		var model = A5(_user$project$Models$Connected, route, session, appModel, usersModel, talksModel);
		var _p8 = msg;
		switch (_p8.ctor) {
			case 'NoOp':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'Logout':
				return {
					ctor: '_Tuple2',
					_0: _user$project$Models$initialModel(_user$project$Login_LoginModels$LoginRoute),
					_1: _elm_lang$core$Platform_Cmd$batch(
						{
							ctor: '::',
							_0: _elm_lang$navigation$Navigation$newUrl('/#/login'),
							_1: {
								ctor: '::',
								_0: _user$project$Ports$deleteSession(
									{ctor: '_Tuple0'}),
								_1: {
									ctor: '::',
									_0: _user$project$App_User_UserCommands$logout(session.token),
									_1: {ctor: '[]'}
								}
							}
						})
				};
			case 'NoDataApiResponse':
				var _p9 = route;
				if (_p9.ctor === 'UsersRoute') {
					return {
						ctor: '_Tuple2',
						_0: model,
						_1: _elm_lang$core$Platform_Cmd$batch(
							{
								ctor: '::',
								_0: A2(_user$project$App_User_UserCommands$getRelevantUsers, _p9._0, session.token),
								_1: {
									ctor: '::',
									_0: _user$project$App_Talk_TalkCommands$getTalks(session.token),
									_1: {ctor: '[]'}
								}
							})
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'ChangePwdRespone':
				var _p10 = _p8._0;
				if (_p10.ctor === 'Ok') {
					var _p12 = _p10._0;
					var _p11 = {ctor: '_Tuple2', _0: _p12.status, _1: _p12.message};
					_v10_2:
					do {
						if (_p11.ctor === '_Tuple2') {
							if (_p11._0 === true) {
								return {
									ctor: '_Tuple2',
									_0: A2(_user$project$App_AppUpdate$updateAlertMsg, 'The password was succefully updated', model),
									_1: _elm_lang$navigation$Navigation$newUrl('/#/users/all')
								};
							} else {
								if (_p11._1.ctor === 'Just') {
									return {
										ctor: '_Tuple2',
										_0: A2(_user$project$App_AppUpdate$updateAlertMsg, _p11._1._0, model),
										_1: _elm_lang$core$Platform_Cmd$none
									};
								} else {
									break _v10_2;
								}
							}
						} else {
							break _v10_2;
						}
					} while(false);
					return {
						ctor: '_Tuple2',
						_0: A2(_user$project$App_AppUpdate$updateAlertMsg, 'Network error. Please try again', model),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: A2(_user$project$App_AppUpdate$updateAlertMsg, 'Network error. Please try again', model),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'ReqTagResponse':
				var _p13 = _p8._0;
				if (_p13.ctor === 'Ok') {
					var _p15 = _p13._0;
					var _p14 = {ctor: '_Tuple2', _0: _p15.status, _1: _p15.data};
					if (((_p14.ctor === '_Tuple2') && (_p14._0 === true)) && (_p14._1.ctor === 'Just')) {
						var u = session.user;
						var newUser = _elm_lang$core$Native_Utils.update(
							u,
							{tags: _p14._1._0});
						var newSession = _elm_lang$core$Native_Utils.update(
							session,
							{user: newUser});
						return {
							ctor: '_Tuple2',
							_0: A2(_user$project$App_AppUpdate$updateSessionModel, newSession, model),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					} else {
						return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
					}
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'SearchTagResponse':
				var _p16 = _p8._0;
				if (_p16.ctor === 'Ok') {
					var _p18 = _p16._0;
					var _p17 = {ctor: '_Tuple2', _0: _p18.status, _1: _p18.data};
					if (((_p17.ctor === '_Tuple2') && (_p17._0 === true)) && (_p17._1.ctor === 'Just')) {
						return {
							ctor: '_Tuple2',
							_0: A2(
								_user$project$App_AppUpdate$updateAppModel,
								_elm_lang$core$Native_Utils.update(
									appModel,
									{searchTag: _p17._1._0}),
								model),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					} else {
						return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
					}
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'UpdateFieldResponse':
				var _p19 = _p8._0;
				if (_p19.ctor === 'Ok') {
					var _p22 = _p19._0;
					var _p20 = {ctor: '_Tuple3', _0: _p22.status, _1: _p22.data, _2: _p22.message};
					_v16_2:
					do {
						if (_p20.ctor === '_Tuple3') {
							if (_p20._0 === true) {
								if (_p20._1.ctor === 'Just') {
									var cmd = function () {
										var _p21 = route;
										if (_p21.ctor === 'UsersRoute') {
											return A2(_user$project$App_User_UserCommands$getRelevantUsers, _p21._0, session.token);
										} else {
											return _elm_lang$core$Platform_Cmd$none;
										}
									}();
									return {
										ctor: '_Tuple2',
										_0: A2(
											_user$project$App_AppUpdate$updateSessionModel,
											_elm_lang$core$Native_Utils.update(
												session,
												{user: _p20._1._0}),
											A2(
												_user$project$App_AppUpdate$updateAppModel,
												_elm_lang$core$Native_Utils.update(
													appModel,
													{mImage: _elm_lang$core$Maybe$Nothing}),
												model)),
										_1: cmd
									};
								} else {
									break _v16_2;
								}
							} else {
								if (_p20._2.ctor === 'Just') {
									return {
										ctor: '_Tuple2',
										_0: A5(
											_user$project$Models$Connected,
											route,
											session,
											_elm_lang$core$Native_Utils.update(
												appModel,
												{
													message: _elm_lang$core$Maybe$Just(_p20._2._0)
												}),
											usersModel,
											talksModel),
										_1: _elm_lang$core$Platform_Cmd$none
									};
								} else {
									break _v16_2;
								}
							}
						} else {
							break _v16_2;
						}
					} while(false);
					return {
						ctor: '_Tuple2',
						_0: A5(
							_user$project$Models$Connected,
							route,
							session,
							_elm_lang$core$Native_Utils.update(
								appModel,
								{
									message: _elm_lang$core$Maybe$Just('Network error. Please try again'),
									mImage: _elm_lang$core$Maybe$Nothing
								}),
							usersModel,
							talksModel),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: A5(
							_user$project$Models$Connected,
							route,
							session,
							_elm_lang$core$Native_Utils.update(
								appModel,
								{
									message: _elm_lang$core$Maybe$Just('Network error. Please try again'),
									mImage: _elm_lang$core$Maybe$Nothing
								}),
							usersModel,
							talksModel),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'UsersResponse':
				return A6(
					_user$project$App_AppUpdate$handleApiResponse,
					_p8._0,
					_user$project$App_User_UserUpdate$updateUsers(usersModel),
					_user$project$App_AppUpdate$updateUsersModel,
					'Impossible to retrieve users',
					_elm_lang$core$Platform_Cmd$none,
					model);
			case 'SearchResponse':
				var _p23 = _p8._0;
				if (_p23.ctor === 'Ok') {
					var _p26 = _p23._0;
					var _p24 = {ctor: '_Tuple3', _0: _p26.status, _1: _p26.data, _2: _p26.message};
					_v19_2:
					do {
						if (_p24.ctor === '_Tuple3') {
							if (_p24._0 === true) {
								if (_p24._1.ctor === 'Just') {
									var _p25 = _p24._1._0;
									return _elm_lang$core$Native_Utils.eq(
										_p25,
										{ctor: '[]'}) ? {
										ctor: '_Tuple2',
										_0: A2(_user$project$App_AppUpdate$updateAlertMsg, 'No users found', model),
										_1: _elm_lang$core$Platform_Cmd$none
									} : {
										ctor: '_Tuple2',
										_0: A5(
											_user$project$Models$Connected,
											route,
											session,
											_elm_lang$core$Native_Utils.update(
												appModel,
												{message: _elm_lang$core$Maybe$Nothing}),
											A2(_user$project$App_User_UserUpdate$updateUsers, usersModel, _p25),
											talksModel),
										_1: _elm_lang$core$Platform_Cmd$none
									};
								} else {
									break _v19_2;
								}
							} else {
								if (_p24._2.ctor === 'Just') {
									return {
										ctor: '_Tuple2',
										_0: A2(_user$project$App_AppUpdate$updateAlertMsg, 'Server error', model),
										_1: _elm_lang$core$Platform_Cmd$none
									};
								} else {
									break _v19_2;
								}
							}
						} else {
							break _v19_2;
						}
					} while(false);
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				} else {
					return {
						ctor: '_Tuple2',
						_0: A2(_user$project$App_AppUpdate$updateAlertMsg, 'Server error', model),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'UserResponse':
				return A6(
					_user$project$App_AppUpdate$handleApiResponse,
					_p8._0,
					_user$project$App_User_UserUpdate$updateUser(usersModel),
					_user$project$App_AppUpdate$updateUsersModel,
					'User not found',
					_elm_lang$core$Platform_Cmd$none,
					model);
			case 'LikeResponse':
				var _p27 = _p8._0;
				if (_p27.ctor === 'Ok') {
					var _p30 = _p27._0;
					var _p28 = {ctor: '_Tuple2', _0: _p30.status, _1: _p30.data};
					_v21_2:
					do {
						if (_p28.ctor === '_Tuple2') {
							if (_p28._0 === true) {
								if (_p28._1.ctor === 'Just') {
									var _p29 = _p28._1._0;
									return {
										ctor: '_Tuple2',
										_0: A5(
											_user$project$Models$Connected,
											route,
											session,
											_elm_lang$core$Native_Utils.update(
												appModel,
												{message: _elm_lang$core$Maybe$Nothing}),
											A2(_user$project$App_User_UserUpdate$updateUser, usersModel, _p29),
											talksModel),
										_1: _elm_lang$core$Platform_Cmd$batch(
											{
												ctor: '::',
												_0: A2(_user$project$App_User_UserCommands$sendUnlikeNotif, session.token, _p29.username),
												_1: {
													ctor: '::',
													_0: A2(_user$project$App_User_UserCommands$sendLikeNotif, session.token, _p29.username),
													_1: {ctor: '[]'}
												}
											})
									};
								} else {
									break _v21_2;
								}
							} else {
								return {
									ctor: '_Tuple2',
									_0: A2(_user$project$App_AppUpdate$updateAlertMsg, 'Server error', model),
									_1: _elm_lang$core$Platform_Cmd$none
								};
							}
						} else {
							break _v21_2;
						}
					} while(false);
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				} else {
					return {
						ctor: '_Tuple2',
						_0: A2(_user$project$App_AppUpdate$updateAlertMsg, 'Server error', model),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'EditAccountResponse':
				var _p31 = _p8._4;
				if (_p31.ctor === 'Ok') {
					var _p33 = _p31._0;
					var _p32 = _p33.status;
					if (_p32 === true) {
						var user = session.user;
						var newUser = _elm_lang$core$Native_Utils.update(
							user,
							{
								email: _p8._0,
								fname: _p8._1,
								lname: _p8._2,
								bio: _elm_lang$core$Maybe$Just(_p8._3)
							});
						return {
							ctor: '_Tuple2',
							_0: A5(
								_user$project$Models$Connected,
								route,
								_elm_lang$core$Native_Utils.update(
									session,
									{user: newUser}),
								_elm_lang$core$Native_Utils.update(
									appModel,
									{
										message: _elm_lang$core$Maybe$Just('Information saved'),
										showEditAccountForm: false
									}),
								usersModel,
								talksModel),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					} else {
						return {
							ctor: '_Tuple2',
							_0: A5(
								_user$project$Models$Connected,
								route,
								session,
								_elm_lang$core$Native_Utils.update(
									appModel,
									{message: _p33.message}),
								usersModel,
								talksModel),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					}
				} else {
					return disconnect;
				}
			case 'GetTalkResponse':
				return A6(
					_user$project$App_AppUpdate$handleApiResponse,
					_p8._0,
					_user$project$App_Talk_TalkUtils$updateTalks(talksModel),
					_user$project$App_AppUpdate$updateTalksModel,
					'Talk not found',
					A2(
						_elm_lang$core$Task$attempt,
						_elm_lang$core$Basics$always(_user$project$Msgs$NoOp),
						_elm_lang$dom$Dom_Scroll$toBottom('talk-list')),
					model);
			case 'GetTalksResponse':
				var _p34 = _p8._0;
				if (_p34.ctor === 'Ok') {
					var _p37 = _p34._0;
					var _p35 = {ctor: '_Tuple2', _0: _p37.status, _1: _p37.data};
					if (((_p35.ctor === '_Tuple2') && (_p35._0 === true)) && (_p35._1.ctor === 'Just')) {
						var _p36 = _p35._1._0;
						return {
							ctor: '_Tuple2',
							_0: A5(
								_user$project$Models$Connected,
								route,
								session,
								appModel,
								usersModel,
								_elm_lang$core$Native_Utils.update(
									talksModel,
									{talks: _p36})),
							_1: _elm_lang$core$Platform_Cmd$batch(
								A2(
									_elm_lang$core$List$map,
									function (t) {
										return A3(
											_user$project$App_Talk_TalkCommands$getTalk,
											t.username_with,
											_elm_lang$core$Native_Utils.eq(
												talksModel.currentTalk,
												_elm_lang$core$Maybe$Just(t.username_with)),
											session.token);
									},
									_p36))
						};
					} else {
						return {
							ctor: '_Tuple2',
							_0: A5(
								_user$project$Models$Connected,
								route,
								session,
								_elm_lang$core$Native_Utils.update(
									appModel,
									{
										message: _elm_lang$core$Maybe$Just('user not found')
									}),
								usersModel,
								talksModel),
							_1: _elm_lang$navigation$Navigation$newUrl('/#/users')
						};
					}
				} else {
					return disconnect;
				}
			case 'SaveLocRespone':
				var _p38 = _p8._0;
				if (_p38.ctor === 'Ok') {
					var _p39 = {ctor: '_Tuple2', _0: _p38._0.status, _1: appModel.current_location};
					if (((_p39.ctor === '_Tuple2') && (_p39._0 === true)) && (_p39._1.ctor === 'Just')) {
						var cmd = function () {
							var _p40 = route;
							if (_p40.ctor === 'UsersRoute') {
								return A2(_user$project$App_User_UserCommands$getRelevantUsers, _p40._0, session.token);
							} else {
								return _elm_lang$core$Platform_Cmd$none;
							}
						}();
						var user = session.user;
						var newSession = _elm_lang$core$Native_Utils.update(
							session,
							{
								user: _elm_lang$core$Native_Utils.update(
									user,
									{localisation: _p39._1._0})
							});
						return {
							ctor: '_Tuple2',
							_0: A5(
								_user$project$Models$Connected,
								route,
								newSession,
								_elm_lang$core$Native_Utils.update(
									appModel,
									{localizing: false}),
								usersModel,
								talksModel),
							_1: cmd
						};
					} else {
						return {
							ctor: '_Tuple2',
							_0: A5(
								_user$project$Models$Connected,
								route,
								session,
								_elm_lang$core$Native_Utils.update(
									appModel,
									{
										message: _elm_lang$core$Maybe$Just('Error while saving localisation. Try again'),
										localizing: false
									}),
								usersModel,
								talksModel),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					}
				} else {
					return {
						ctor: '_Tuple2',
						_0: A5(
							_user$project$Models$Connected,
							route,
							session,
							_elm_lang$core$Native_Utils.update(
								appModel,
								{
									message: _elm_lang$core$Maybe$Just('Error while saving localisation. Try again'),
									localizing: false
								}),
							usersModel,
							talksModel),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'OnLocationChange':
				var newModel = _elm_lang$core$Native_Utils.update(
					appModel,
					{message: _elm_lang$core$Maybe$Nothing, showEmoList: false, showAccountMenu: false, showAdvanceFilters: false, search: _user$project$App_AppModels$initialSearchModel, showTalksList: false});
				var newRoute = _user$project$Routing$parseAppLocation(_p8._0);
				var _p41 = newRoute;
				switch (_p41.ctor) {
					case 'UsersRoute':
						var _p42 = _p41._0;
						var visitNotif = _elm_lang$core$Native_Utils.eq(_p42, 'visitors') ? 0 : appModel.notifVisit;
						var unLikeNotif = _elm_lang$core$Native_Utils.eq(
							route,
							_user$project$App_AppModels$UsersRoute('likers')) ? {ctor: '[]'} : appModel.notifUnlike;
						var likeNotif = _elm_lang$core$Native_Utils.eq(_p42, 'likers') ? 0 : appModel.notifLike;
						return {
							ctor: '_Tuple2',
							_0: A5(
								_user$project$Models$Connected,
								newRoute,
								session,
								_elm_lang$core$Native_Utils.update(
									newModel,
									{notifLike: likeNotif, notifVisit: visitNotif, notifUnlike: unLikeNotif}),
								usersModel,
								talksModel),
							_1: A2(_user$project$App_User_UserCommands$getRelevantUsers, _p42, session.token)
						};
					case 'SearchRoute':
						return {
							ctor: '_Tuple2',
							_0: A5(_user$project$Models$Connected, newRoute, session, newModel, usersModel, talksModel),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					default:
						return {
							ctor: '_Tuple2',
							_0: A5(_user$project$Models$Connected, newRoute, session, newModel, usersModel, talksModel),
							_1: _elm_lang$core$Platform_Cmd$none
						};
				}
			case 'GoBack':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _elm_lang$navigation$Navigation$back(_p8._0)
				};
			case 'ToggleLike':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(_user$project$App_User_UserCommands$toggleLike, _p8._0, session.token)
				};
			case 'ShowUser':
				var _p43 = _p8._0;
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						_elm_lang$core$Native_Utils.update(
							appModel,
							{showTalksList: false, showAccountMenu: false}),
						_elm_lang$core$Native_Utils.update(
							usersModel,
							{
								currentUser: _elm_lang$core$Maybe$Just(_p43)
							}),
						talksModel),
					_1: _elm_lang$core$Platform_Cmd$batch(
						{
							ctor: '::',
							_0: A2(_user$project$App_User_UserCommands$sendVisitNotif, session.token, _p43),
							_1: {
								ctor: '::',
								_0: A2(_user$project$App_User_UserCommands$getUser, _p43, session.token),
								_1: {ctor: '[]'}
							}
						})
				};
			case 'UnshowAll':
				var curU = (appModel.showTalksList || appModel.showAccountMenu) ? usersModel.currentUser : _elm_lang$core$Maybe$Nothing;
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						_elm_lang$core$Native_Utils.update(
							appModel,
							{showTalksList: false, showAccountMenu: false, map_state: _user$project$App_AppModels$NoMap}),
						_elm_lang$core$Native_Utils.update(
							usersModel,
							{currentUser: curU}),
						talksModel),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'UpdateNewMessage':
				var _p44 = talksModel.currentTalk;
				if (_p44.ctor === 'Just') {
					var newTalksModel = function () {
						var _p45 = A2(_user$project$App_Talk_TalkUtils$getTalkWith, _p44._0, talksModel.talks);
						if (_p45.ctor === 'Just') {
							return A2(
								_user$project$App_Talk_TalkUtils$updateTalks,
								talksModel,
								_elm_lang$core$Native_Utils.update(
									_p45._0,
									{new_message: _p8._0}));
						} else {
							return talksModel;
						}
					}();
					return {
						ctor: '_Tuple2',
						_0: A5(_user$project$Models$Connected, route, session, appModel, usersModel, newTalksModel),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'SendNewMessage':
				var _p46 = talksModel.currentTalk;
				if (_p46.ctor === 'Just') {
					var _p47 = A2(_user$project$App_Talk_TalkUtils$getTalkWith, _p46._0, talksModel.talks);
					if (_p47.ctor === 'Just') {
						var _p48 = _p47._0;
						return (!_elm_lang$core$Native_Utils.eq(
							_elm_lang$core$String$trim(_p48.new_message),
							'')) ? {
							ctor: '_Tuple2',
							_0: A2(
								_user$project$App_AppUpdate$updateAppModel,
								_elm_lang$core$Native_Utils.update(
									appModel,
									{showEmoList: false}),
								model),
							_1: A3(_user$project$App_Talk_TalkCommands$sendMessage, session.token, _p48.username_with, _p48.new_message)
						} : {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
					} else {
						return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
					}
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'NewMessage':
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						_elm_lang$core$Native_Utils.update(
							appModel,
							{
								message: _elm_lang$core$Maybe$Just(_p8._0)
							}),
						usersModel,
						talksModel),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'FetchTalk':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'LoadMap':
				var _p49 = appModel.map_state;
				if (_p49.ctor === 'Loading') {
					return {
						ctor: '_Tuple2',
						_0: A5(
							_user$project$Models$Connected,
							route,
							session,
							_elm_lang$core$Native_Utils.update(
								appModel,
								{map_state: _user$project$App_AppModels$Rendered}),
							usersModel,
							talksModel),
						_1: _user$project$Ports$localize(
							{
								ctor: '::',
								_0: session.user.localisation.lon,
								_1: {
									ctor: '::',
									_0: session.user.localisation.lat,
									_1: {ctor: '[]'}
								}
							})
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'Localize':
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						_elm_lang$core$Native_Utils.update(
							appModel,
							{localizing: true}),
						usersModel,
						talksModel),
					_1: _user$project$Ports$tryToLocalize(
						{ctor: '_Tuple0'})
				};
			case 'LocalizeIp':
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						_elm_lang$core$Native_Utils.update(
							appModel,
							{localizing: true}),
						usersModel,
						talksModel),
					_1: _user$project$App_User_UserCommands$getIpLocalisation
				};
			case 'SaveLocalisation':
				var _p50 = _p8._0;
				if (((_p50.ctor === '::') && (_p50._1.ctor === '::')) && (_p50._1._1.ctor === '[]')) {
					var _p52 = _p50._0;
					var _p51 = _p50._1._0;
					return {
						ctor: '_Tuple2',
						_0: A5(
							_user$project$Models$Connected,
							route,
							session,
							_elm_lang$core$Native_Utils.update(
								appModel,
								{
									current_location: _elm_lang$core$Maybe$Just(
										A2(_user$project$App_User_UserModel$Localisation, _p52, _p51))
								}),
							usersModel,
							talksModel),
						_1: A2(
							_user$project$App_User_UserCommands$saveLocation,
							A2(_user$project$App_User_UserModel$Localisation, _p52, _p51),
							session.token)
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'NewLoc':
				var _p53 = {ctor: '_Tuple2', _0: _p8._0, _1: appModel.map_state};
				if ((((_p53.ctor === '_Tuple2') && (_p53._0.ctor === '::')) && (_p53._0._1.ctor === '::')) && (_p53._0._1._1.ctor === '[]')) {
					if (_p53._1.ctor === 'Rendered') {
						var _p55 = _p53._0._0;
						var _p54 = _p53._0._1._0;
						return {
							ctor: '_Tuple2',
							_0: A5(
								_user$project$Models$Connected,
								route,
								session,
								_elm_lang$core$Native_Utils.update(
									appModel,
									{
										current_location: _elm_lang$core$Maybe$Just(
											A2(_user$project$App_User_UserModel$Localisation, _p55, _p54)),
										localizing: false
									}),
								usersModel,
								talksModel),
							_1: _elm_lang$core$Platform_Cmd$batch(
								{
									ctor: '::',
									_0: _user$project$Ports$localize(
										{
											ctor: '::',
											_0: _p55,
											_1: {
												ctor: '::',
												_0: _p54,
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_user$project$App_User_UserCommands$saveLocation,
											A2(_user$project$App_User_UserModel$Localisation, _p55, _p54),
											session.token),
										_1: {ctor: '[]'}
									}
								})
						};
					} else {
						var _p57 = _p53._0._0;
						var _p56 = _p53._0._1._0;
						return {
							ctor: '_Tuple2',
							_0: A5(
								_user$project$Models$Connected,
								route,
								session,
								_elm_lang$core$Native_Utils.update(
									appModel,
									{
										current_location: _elm_lang$core$Maybe$Just(
											A2(_user$project$App_User_UserModel$Localisation, _p57, _p56)),
										localizing: false
									}),
								usersModel,
								talksModel),
							_1: A2(
								_user$project$App_User_UserCommands$saveLocation,
								A2(_user$project$App_User_UserModel$Localisation, _p57, _p56),
								session.token)
						};
					}
				} else {
					return {
						ctor: '_Tuple2',
						_0: A5(
							_user$project$Models$Connected,
							route,
							session,
							_elm_lang$core$Native_Utils.update(
								appModel,
								{localizing: false}),
							usersModel,
							talksModel),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'GetIpLocalisationResponse':
				var _p58 = _p8._0;
				if (_p58.ctor === 'Success') {
					var _p62 = _p58._0;
					var loc = function () {
						var _p59 = {
							ctor: '_Tuple3',
							_0: _elm_lang$core$Native_Utils.eq(_p62.status, 'success'),
							_1: _p62.lon,
							_2: _p62.lat
						};
						if ((((_p59.ctor === '_Tuple3') && (_p59._0 === true)) && (_p59._1.ctor === 'Just')) && (_p59._2.ctor === 'Just')) {
							return _elm_lang$core$Maybe$Just(
								A2(_user$project$App_User_UserModel$Localisation, _p59._1._0, _p59._2._0));
						} else {
							return _elm_lang$core$Maybe$Nothing;
						}
					}();
					var cmd = function () {
						var _p60 = loc;
						if (_p60.ctor === 'Just') {
							var _p61 = _p60._0;
							return _elm_lang$core$Native_Utils.eq(appModel.map_state, _user$project$App_AppModels$Rendered) ? _elm_lang$core$Platform_Cmd$batch(
								{
									ctor: '::',
									_0: _user$project$Ports$localize(
										{
											ctor: '::',
											_0: _p61.lon,
											_1: {
												ctor: '::',
												_0: _p61.lat,
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_user$project$App_User_UserCommands$saveLocation,
											A2(_user$project$App_User_UserModel$Localisation, _p61.lon, _p61.lat),
											session.token),
										_1: {ctor: '[]'}
									}
								}) : A2(
								_user$project$App_User_UserCommands$saveLocation,
								A2(_user$project$App_User_UserModel$Localisation, _p61.lon, _p61.lat),
								session.token);
						} else {
							return _elm_lang$core$Platform_Cmd$none;
						}
					}();
					return {
						ctor: '_Tuple2',
						_0: A5(
							_user$project$Models$Connected,
							route,
							session,
							_elm_lang$core$Native_Utils.update(
								appModel,
								{current_location: loc, localizing: false}),
							usersModel,
							talksModel),
						_1: cmd
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: A5(
							_user$project$Models$Connected,
							route,
							session,
							_elm_lang$core$Native_Utils.update(
								appModel,
								{localizing: false}),
							usersModel,
							talksModel),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'UpdateEditAccountForm':
				var form_ = appModel.editAccountForm;
				var newForm = A3(
					_user$project$FormUtils$updateInput,
					form_,
					_p8._0,
					_elm_lang$core$Maybe$Just(_p8._1));
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						_elm_lang$core$Native_Utils.update(
							appModel,
							{editAccountForm: newForm}),
						usersModel,
						talksModel),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'UpdateAnim':
				var newAnim = function () {
					var _p63 = appModel.matchAnim;
					if (_p63.ctor === 'Just') {
						var _p64 = _p63._0;
						return (_elm_lang$core$Native_Utils.cmp(_p64 - 1.0e-2, 0) > 0) ? _elm_lang$core$Maybe$Just(_p64 - 1.0e-2) : _elm_lang$core$Maybe$Nothing;
					} else {
						return _elm_lang$core$Maybe$Nothing;
					}
				}();
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						_elm_lang$core$Native_Utils.update(
							appModel,
							{matchAnim: newAnim}),
						usersModel,
						talksModel),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'SaveAccountUpdates':
				var values = A2(
					_elm_lang$core$List$map,
					function (i) {
						return i.status;
					},
					appModel.editAccountForm);
				var cmd = function () {
					var _p65 = values;
					if (((((((((_p65.ctor === '::') && (_p65._0.ctor === 'Valid')) && (_p65._1.ctor === '::')) && (_p65._1._0.ctor === 'Valid')) && (_p65._1._1.ctor === '::')) && (_p65._1._1._0.ctor === 'Valid')) && (_p65._1._1._1.ctor === '::')) && (_p65._1._1._1._0.ctor === 'Valid')) && (_p65._1._1._1._1.ctor === '[]')) {
						return A5(_user$project$App_User_UserCommands$updateAccountInfos, _p65._0._0, _p65._1._0._0, _p65._1._1._0._0, _p65._1._1._1._0._0, session.token);
					} else {
						return _elm_lang$core$Platform_Cmd$none;
					}
				}();
				return {ctor: '_Tuple2', _0: model, _1: cmd};
			case 'UpdateEditPwdForm':
				var form_ = appModel.changePwdForm;
				var newForm = A3(
					_user$project$FormUtils$updateInput,
					form_,
					_p8._0,
					_elm_lang$core$Maybe$Just(_p8._1));
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						_elm_lang$core$Native_Utils.update(
							appModel,
							{changePwdForm: newForm}),
						usersModel,
						talksModel),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'ChangePwd':
				var values = A2(
					_elm_lang$core$List$map,
					function (i) {
						return i.status;
					},
					appModel.changePwdForm);
				var cmd = function () {
					var _p66 = values;
					if (((((((_p66.ctor === '::') && (_p66._0.ctor === 'Valid')) && (_p66._1.ctor === '::')) && (_p66._1._0.ctor === 'Valid')) && (_p66._1._1.ctor === '::')) && (_p66._1._1._0.ctor === 'Valid')) && (_p66._1._1._1.ctor === '[]')) {
						return A4(_user$project$App_User_UserCommands$changePwd, _p66._0._0, _p66._1._0._0, _p66._1._1._0._0, session.token);
					} else {
						return _elm_lang$core$Platform_Cmd$none;
					}
				}();
				return {ctor: '_Tuple2', _0: model, _1: cmd};
			case 'UpdateGender':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(_user$project$App_User_UserCommands$updateGender, _p8._0, session.token)
				};
			case 'UpdateIntIn':
				var _p67 = _p8._0;
				var newIntIn = A2(_elm_lang$core$List$member, _p67, session.user.intIn) ? A2(
					_elm_lang$core$List$filter,
					F2(
						function (x, y) {
							return !_elm_lang$core$Native_Utils.eq(x, y);
						})(_p67),
					session.user.intIn) : {ctor: '::', _0: _p67, _1: session.user.intIn};
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(_user$project$App_User_UserCommands$updateIntIn, newIntIn, session.token)
				};
			case 'SearchTag':
				var _p69 = _p8._0;
				var _p68 = {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.cmp(
						_elm_lang$core$String$length(_p69),
						1) > 0,
					_1: _user$project$FormUtils$validTag(
						_elm_lang$core$Maybe$Just(_p69))
				};
				_v43_2:
				do {
					if (_p68.ctor === '_Tuple2') {
						switch (_p68._1.ctor) {
							case 'Valid':
								if (_p68._0 === true) {
									return {
										ctor: '_Tuple2',
										_0: A5(
											_user$project$Models$Connected,
											route,
											session,
											_elm_lang$core$Native_Utils.update(
												appModel,
												{tagInput: _p69}),
											usersModel,
											talksModel),
										_1: A2(_user$project$App_User_UserCommands$searchTag, session.token, _p69)
									};
								} else {
									break _v43_2;
								}
							case 'NotValid':
								return {
									ctor: '_Tuple2',
									_0: A5(
										_user$project$Models$Connected,
										route,
										session,
										_elm_lang$core$Native_Utils.update(
											appModel,
											{tagInput: _p69}),
										usersModel,
										talksModel),
									_1: A2(_user$project$App_User_UserCommands$searchTag, session.token, _p69)
								};
							default:
								break _v43_2;
						}
					} else {
						break _v43_2;
					}
				} while(false);
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						_elm_lang$core$Native_Utils.update(
							appModel,
							{tagInput: _p69}),
						usersModel,
						talksModel),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'AddTag':
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						_elm_lang$core$Native_Utils.update(
							appModel,
							{
								tagInput: '',
								searchTag: {ctor: '[]'}
							}),
						usersModel,
						talksModel),
					_1: A2(_user$project$App_User_UserCommands$addTag, _p8._0, session.token)
				};
			case 'AddNewTag':
				var _p70 = _user$project$FormUtils$validTag(
					_elm_lang$core$Maybe$Just(appModel.tagInput));
				if (_p70.ctor === 'Valid') {
					return {
						ctor: '_Tuple2',
						_0: A5(
							_user$project$Models$Connected,
							route,
							session,
							_elm_lang$core$Native_Utils.update(
								appModel,
								{
									tagInput: '',
									searchTag: {ctor: '[]'}
								}),
							usersModel,
							talksModel),
						_1: A2(_user$project$App_User_UserCommands$addTag, _p70._0, session.token)
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'RemoveTag':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(_user$project$App_User_UserCommands$removeTag, _p8._0, session.token)
				};
			case 'ImageSelected':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _user$project$Ports$fileSelected(appModel.idImg)
				};
			case 'ImageRead':
				var _p71 = _p8._0;
				var newImage = {contents: _p71.contents, filename: _p71.filename};
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						_elm_lang$core$Native_Utils.update(
							appModel,
							{
								mImage: _elm_lang$core$Maybe$Just(newImage)
							}),
						usersModel,
						talksModel),
					_1: A2(_user$project$App_User_UserCommands$uploadImage, _p71.contents, session.token)
				};
			case 'DeleteImg':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(_user$project$App_User_UserCommands$delImg, _p8._0, session.token)
				};
			case 'SetCurrentTime':
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						_elm_lang$core$Native_Utils.update(
							appModel,
							{currentTime: _p8._0}),
						usersModel,
						talksModel),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'UpdateCurrentTime':
				return {ctor: '_Tuple2', _0: model, _1: _user$project$Utils$now};
			case 'ToggleAccountMenu':
				var newAcc = !appModel.showAccountMenu;
				var mapStatus = newAcc ? _user$project$App_AppModels$Loading : _user$project$App_AppModels$NoMap;
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						_elm_lang$core$Native_Utils.update(
							appModel,
							{showAccountMenu: newAcc, showTalksList: false, map_state: mapStatus, showResetPwdForm: false, showEditAccountForm: false}),
						usersModel,
						talksModel),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'ChangeImage':
				var newUsers = A3(_user$project$App_User_UserUpdate$showImage, _p8._1, _p8._0, usersModel.users);
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						appModel,
						_elm_lang$core$Native_Utils.update(
							usersModel,
							{users: newUsers}),
						talksModel),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'GoTo':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _elm_lang$navigation$Navigation$newUrl(_p8._0)
				};
			case 'ChangeSort':
				var _p72 = _p8._0;
				var orderSort = _elm_lang$core$Native_Utils.eq(_p72, usersModel.userSort) ? _user$project$App_User_UserHelper$toggleOrder(usersModel.orderSort) : _user$project$App_User_UserModel$ASC;
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						appModel,
						_elm_lang$core$Native_Utils.update(
							usersModel,
							{userSort: _p72, orderSort: orderSort}),
						talksModel),
					_1: A2(
						_elm_lang$core$Task$attempt,
						_elm_lang$core$Basics$always(_user$project$Msgs$NoOp),
						_elm_lang$dom$Dom_Scroll$toTop('main'))
				};
			case 'Notification':
				var _p73 = A2(_elm_lang$core$Json_Decode$decodeString, _user$project$App_Notif_NotifDecoder$notificationDecoder, _p8._0);
				if (_p73.ctor === 'Ok') {
					var _p75 = _p73._0;
					var _p74 = _p75.type_;
					switch (_p74.ctor) {
						case 'NotifMessage':
							var update = (_elm_lang$core$Native_Utils.eq(
								talksModel.currentTalk,
								_elm_lang$core$Maybe$Just(_p75.from)) || _elm_lang$core$Native_Utils.eq(
								talksModel.currentTalk,
								_elm_lang$core$Maybe$Just(_p75.to))) ? true : false;
							return _elm_lang$core$Native_Utils.eq(_p75.to, session.user.username) ? {
								ctor: '_Tuple2',
								_0: model,
								_1: _elm_lang$core$Platform_Cmd$batch(
									{
										ctor: '::',
										_0: A3(_user$project$App_Talk_TalkCommands$getTalk, _p75.from, update, session.token),
										_1: {
											ctor: '::',
											_0: _user$project$App_Talk_TalkCommands$getTalks(session.token),
											_1: {ctor: '[]'}
										}
									})
							} : (_elm_lang$core$Native_Utils.eq(_p75.from, session.user.username) ? {
								ctor: '_Tuple2',
								_0: model,
								_1: A3(_user$project$App_Talk_TalkCommands$getTalk, _p75.to, update, session.token)
							} : {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none});
						case 'NotifLike':
							return (_elm_lang$core$Native_Utils.eq(_p75.to, session.user.username) && (!_elm_lang$core$Native_Utils.eq(
								route,
								_user$project$App_AppModels$UsersRoute('likers')))) ? {
								ctor: '_Tuple2',
								_0: A5(
									_user$project$Models$Connected,
									route,
									session,
									_elm_lang$core$Native_Utils.update(
										appModel,
										{
											notifLike: _elm_lang$core$List$length(_p75.notif)
										}),
									usersModel,
									talksModel),
								_1: _elm_lang$core$Platform_Cmd$none
							} : ((_elm_lang$core$Native_Utils.eq(_p75.to, session.user.username) && _elm_lang$core$Native_Utils.eq(
								route,
								_user$project$App_AppModels$UsersRoute('likers'))) ? {
								ctor: '_Tuple2',
								_0: model,
								_1: A2(_user$project$App_User_UserCommands$getRelevantUsers, 'likers', session.token)
							} : {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none});
						case 'NotifUnlike':
							return (_elm_lang$core$Native_Utils.eq(_p75.to, session.user.username) && (!_elm_lang$core$Native_Utils.eq(
								route,
								_user$project$App_AppModels$UsersRoute('likers')))) ? {
								ctor: '_Tuple2',
								_0: A5(
									_user$project$Models$Connected,
									route,
									session,
									_elm_lang$core$Native_Utils.update(
										appModel,
										{notifUnlike: _p75.notif}),
									usersModel,
									talksModel),
								_1: _elm_lang$core$Platform_Cmd$none
							} : ((_elm_lang$core$Native_Utils.eq(_p75.to, session.user.username) && _elm_lang$core$Native_Utils.eq(
								route,
								_user$project$App_AppModels$UsersRoute('likers'))) ? {
								ctor: '_Tuple2',
								_0: A5(
									_user$project$Models$Connected,
									route,
									session,
									_elm_lang$core$Native_Utils.update(
										appModel,
										{notifUnlike: _p75.notif}),
									usersModel,
									talksModel),
								_1: A2(_user$project$App_User_UserCommands$getRelevantUsers, 'likers', session.token)
							} : {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none});
						default:
							return (_elm_lang$core$Native_Utils.eq(_p75.to, session.user.username) && (!_elm_lang$core$Native_Utils.eq(
								route,
								_user$project$App_AppModels$UsersRoute('visitors')))) ? {
								ctor: '_Tuple2',
								_0: A5(
									_user$project$Models$Connected,
									route,
									session,
									_elm_lang$core$Native_Utils.update(
										appModel,
										{
											notifVisit: _elm_lang$core$List$length(_p75.notif)
										}),
									usersModel,
									talksModel),
								_1: _elm_lang$core$Platform_Cmd$none
							} : ((_elm_lang$core$Native_Utils.eq(_p75.to, session.user.username) && _elm_lang$core$Native_Utils.eq(
								route,
								_user$project$App_AppModels$UsersRoute('visitors'))) ? {
								ctor: '_Tuple2',
								_0: model,
								_1: A2(_user$project$App_User_UserCommands$getRelevantUsers, 'visitors', session.token)
							} : {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none});
					}
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'ToggleEmoList':
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						_elm_lang$core$Native_Utils.update(
							appModel,
							{showEmoList: !appModel.showEmoList}),
						usersModel,
						talksModel),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'AddEmo':
				var _p76 = A2(_user$project$App_Talk_TalkUtils$getTalkWith, _p8._0, talksModel.talks);
				if (_p76.ctor === 'Just') {
					var _p77 = _p76._0;
					var newTalk = _elm_lang$core$Native_Utils.update(
						_p77,
						{
							new_message: A2(
								_elm_lang$core$Basics_ops['++'],
								_p77.new_message,
								A2(
									_elm_lang$core$Basics_ops['++'],
									' ::__',
									A2(_elm_lang$core$Basics_ops['++'], _p8._1, '__::')))
						});
					var newTalksModel = A2(_user$project$App_Talk_TalkUtils$updateTalks, talksModel, newTalk);
					return {
						ctor: '_Tuple2',
						_0: A5(_user$project$Models$Connected, route, session, appModel, usersModel, newTalksModel),
						_1: A2(
							_elm_lang$core$Task$attempt,
							_elm_lang$core$Basics$always(_user$project$Msgs$NoOp),
							_elm_lang$dom$Dom$focus('input-msg'))
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'UpdateTagFilter':
				var filters = A2(_user$project$App_User_UserHelper$updateFilterTag, usersModel.userFilter, _p8._0);
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						appModel,
						_elm_lang$core$Native_Utils.update(
							usersModel,
							{userFilter: filters}),
						talksModel),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'UpdateMinAgeFilter':
				var filters = function () {
					var _p78 = _elm_lang$core$String$toInt(_p8._0);
					if (_p78.ctor === 'Ok') {
						return A2(_user$project$App_User_UserHelper$updateMinAgeFilter, usersModel.userFilter, _p78._0);
					} else {
						return A2(
							_elm_lang$core$List$filter,
							function (f) {
								return !_user$project$App_User_UserHelper$isMinFilter(f);
							},
							usersModel.userFilter);
					}
				}();
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						appModel,
						_elm_lang$core$Native_Utils.update(
							usersModel,
							{userFilter: filters}),
						talksModel),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'UpdateMaxAgeFilter':
				var filters = function () {
					var _p79 = _elm_lang$core$String$toInt(_p8._0);
					if (_p79.ctor === 'Ok') {
						return A2(_user$project$App_User_UserHelper$updateMaxAgeFilter, usersModel.userFilter, _p79._0);
					} else {
						return A2(
							_elm_lang$core$List$filter,
							function (f) {
								return !_user$project$App_User_UserHelper$isMaxFilter(f);
							},
							usersModel.userFilter);
					}
				}();
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						appModel,
						_elm_lang$core$Native_Utils.update(
							usersModel,
							{userFilter: filters}),
						talksModel),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'ToggleAdvanceFilters':
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						_elm_lang$core$Native_Utils.update(
							appModel,
							{showAdvanceFilters: !appModel.showAdvanceFilters}),
						usersModel,
						talksModel),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'ResetFilters':
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						appModel,
						_elm_lang$core$Native_Utils.update(
							usersModel,
							{
								userFilter: {ctor: '[]'}
							}),
						talksModel),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'UpdateLocFilter':
				var filters = function () {
					var _p80 = _elm_lang$core$String$toFloat(_p8._0);
					if (_p80.ctor === 'Ok') {
						return A2(_user$project$App_User_UserHelper$updateLocFilter, usersModel.userFilter, _p80._0);
					} else {
						return A2(
							_elm_lang$core$List$filter,
							function (f) {
								return !_user$project$App_User_UserHelper$isLocFilter(f);
							},
							usersModel.userFilter);
					}
				}();
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						appModel,
						_elm_lang$core$Native_Utils.update(
							usersModel,
							{userFilter: filters}),
						talksModel),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'SetCurrentTalk':
				var _p81 = _p8._0;
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						_elm_lang$core$Native_Utils.update(
							appModel,
							{showTalksList: false}),
						_elm_lang$core$Native_Utils.update(
							usersModel,
							{currentUser: _elm_lang$core$Maybe$Nothing}),
						_elm_lang$core$Native_Utils.update(
							talksModel,
							{
								currentTalk: _elm_lang$core$Maybe$Just(_p81)
							})),
					_1: A3(_user$project$App_Talk_TalkCommands$getTalk, _p81, true, session.token)
				};
			case 'CloseCurrentTalk':
				return {
					ctor: '_Tuple2',
					_0: A2(
						_user$project$App_AppUpdate$updateTalksModel,
						_elm_lang$core$Native_Utils.update(
							talksModel,
							{currentTalk: _elm_lang$core$Maybe$Nothing}),
						model),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'ToggleTalksList':
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						_elm_lang$core$Native_Utils.update(
							appModel,
							{showTalksList: !appModel.showTalksList, showAccountMenu: false}),
						usersModel,
						talksModel),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'ReportUser':
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						appModel,
						_elm_lang$core$Native_Utils.update(
							usersModel,
							{currentUser: _elm_lang$core$Maybe$Nothing}),
						talksModel),
					_1: A2(_user$project$App_User_UserCommands$reportUser, _p8._0, session.token)
				};
			case 'BlockUser':
				var _p82 = _p8._0;
				var cuT = _elm_lang$core$Native_Utils.eq(
					talksModel.currentTalk,
					_elm_lang$core$Maybe$Just(_p82)) ? _elm_lang$core$Maybe$Nothing : talksModel.currentTalk;
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						appModel,
						_elm_lang$core$Native_Utils.update(
							usersModel,
							{currentUser: _elm_lang$core$Maybe$Nothing}),
						_elm_lang$core$Native_Utils.update(
							talksModel,
							{currentTalk: cuT})),
					_1: A2(_user$project$App_User_UserCommands$blockUser, _p82, session.token)
				};
			case 'AdvanceSearch':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(_user$project$App_User_UserCommands$searchUser, appModel.search, session.token)
				};
			case 'UpdateSearchLogin':
				var searchModel = appModel.search;
				var newSearch = _elm_lang$core$Native_Utils.update(
					searchModel,
					{login: _p8._0});
				return {
					ctor: '_Tuple2',
					_0: A2(
						_user$project$App_AppUpdate$updateAppModel,
						_elm_lang$core$Native_Utils.update(
							appModel,
							{search: newSearch}),
						model),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'UpdateSearchTags':
				var _p83 = _p8._0;
				var searchModel = appModel.search;
				var newTags = A2(_elm_lang$core$List$member, _p83, searchModel.tags) ? A2(
					_elm_lang$core$List$filter,
					F2(
						function (x, y) {
							return !_elm_lang$core$Native_Utils.eq(x, y);
						})(_p83),
					searchModel.tags) : {ctor: '::', _0: _p83, _1: searchModel.tags};
				var newSearch = _elm_lang$core$Native_Utils.update(
					searchModel,
					{tags: newTags});
				return {
					ctor: '_Tuple2',
					_0: A2(
						_user$project$App_AppUpdate$updateAppModel,
						_elm_lang$core$Native_Utils.update(
							appModel,
							{search: newSearch}),
						model),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'UpdateMinYearSearch':
				var newYear = function () {
					var _p84 = _elm_lang$core$String$toInt(_p8._0);
					if (_p84.ctor === 'Ok') {
						return _elm_lang$core$Maybe$Just(_p84._0);
					} else {
						return _elm_lang$core$Maybe$Nothing;
					}
				}();
				var searchModel = appModel.search;
				var newSearch = _elm_lang$core$Native_Utils.update(
					searchModel,
					{yearMin: newYear});
				return {
					ctor: '_Tuple2',
					_0: A2(
						_user$project$App_AppUpdate$updateAppModel,
						_elm_lang$core$Native_Utils.update(
							appModel,
							{search: newSearch}),
						model),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'UpdateMaxYearSearch':
				var newYear = function () {
					var _p85 = _elm_lang$core$String$toInt(_p8._0);
					if (_p85.ctor === 'Ok') {
						return _elm_lang$core$Maybe$Just(_p85._0);
					} else {
						return _elm_lang$core$Maybe$Nothing;
					}
				}();
				var searchModel = appModel.search;
				var newSearch = _elm_lang$core$Native_Utils.update(
					searchModel,
					{yearMax: newYear});
				return {
					ctor: '_Tuple2',
					_0: A2(
						_user$project$App_AppUpdate$updateAppModel,
						_elm_lang$core$Native_Utils.update(
							appModel,
							{search: newSearch}),
						model),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'UpdateLocSearch':
				var newLoc = function () {
					var _p86 = _elm_lang$core$String$toInt(_p8._0);
					if (_p86.ctor === 'Ok') {
						return _elm_lang$core$Maybe$Just(_p86._0);
					} else {
						return _elm_lang$core$Maybe$Nothing;
					}
				}();
				var searchModel = appModel.search;
				var newSearch = _elm_lang$core$Native_Utils.update(
					searchModel,
					{loc: newLoc});
				return {
					ctor: '_Tuple2',
					_0: A2(
						_user$project$App_AppUpdate$updateAppModel,
						_elm_lang$core$Native_Utils.update(
							appModel,
							{search: newSearch}),
						model),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'ResetSearch':
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						_elm_lang$core$Native_Utils.update(
							appModel,
							{search: _user$project$App_AppModels$initialSearchModel}),
						_user$project$App_User_UserModel$initialUsersModel,
						talksModel),
					_1: _elm_lang$core$Native_Utils.eq(route, _user$project$App_AppModels$SearchRoute) ? _elm_lang$core$Platform_Cmd$none : _elm_lang$navigation$Navigation$newUrl('/#/search')
				};
			case 'UpdateBirth':
				var _p87 = _elm_lang$core$String$toInt(_p8._0);
				if (_p87.ctor === 'Ok') {
					var _p88 = _p87._0;
					var user = session.user;
					var newUser = _elm_lang$core$Native_Utils.update(
						user,
						{
							date_of_birth: _elm_lang$core$Maybe$Just(_p88)
						});
					return {
						ctor: '_Tuple2',
						_0: A5(
							_user$project$Models$Connected,
							route,
							_elm_lang$core$Native_Utils.update(
								session,
								{user: newUser}),
							appModel,
							usersModel,
							talksModel),
						_1: A2(_user$project$App_User_UserCommands$updateDateOfBirth, _p88, session.token)
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'UpdateMainImage':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(_user$project$App_User_UserCommands$mainImg, _p8._0, session.token)
				};
			case 'ToggleAccountForm':
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						_elm_lang$core$Native_Utils.update(
							appModel,
							{
								editAccountForm: _user$project$FormUtils$initEditAccountForm(session.user),
								showEditAccountForm: !appModel.showEditAccountForm,
								showResetPwdForm: false
							}),
						usersModel,
						talksModel),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'ToggleResetPwdForm':
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Models$Connected,
						route,
						session,
						_elm_lang$core$Native_Utils.update(
							appModel,
							{showResetPwdForm: !appModel.showResetPwdForm, showEditAccountForm: false}),
						usersModel,
						talksModel),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});

var _user$project$App_AppUtils$getAccountNotif = function (user) {
	var lst = function (a) {
		return _elm_lang$core$Native_Utils.eq(
			a,
			{ctor: '[]'}) ? 1 : 0;
	};
	var str = function (a) {
		var _p0 = a;
		if (_p0.ctor === 'Just') {
			if (_p0._0 === '') {
				return 1;
			} else {
				return 0;
			}
		} else {
			return 1;
		}
	};
	var may = function (a) {
		return _elm_lang$core$Native_Utils.eq(a, _elm_lang$core$Maybe$Nothing) ? 1 : 0;
	};
	var notif = (((may(user.date_of_birth) + str(user.bio)) + may(user.gender)) + lst(user.intIn)) + lst(user.photos);
	return notif;
};

var _user$project$App_Talk_TalkView$emoListView = F2(
	function (emo, talk) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$id('emo-list'),
				_1: {ctor: '[]'}
			},
			A2(
				_elm_lang$core$List$map,
				function (em) {
					return A2(
						_elm_lang$html$Html$i,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class(
								A2(_elm_lang$core$Basics_ops['++'], 'em ', em)),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(
									A2(_user$project$Msgs$AddEmo, talk, em)),
								_1: {ctor: '[]'}
							}
						},
						{ctor: '[]'});
				},
				emo));
	});
var _user$project$App_Talk_TalkView$messageEmoticonView = function (msg) {
	var reg = _elm_lang$core$Regex$regex('::(__em-.*?__)::');
	var listStr = A3(_elm_lang$core$Regex$split, _elm_lang$core$Regex$All, reg, msg);
	return A2(
		_elm_lang$core$List$map,
		function (s) {
			return A2(
				_elm_lang$core$Regex$contains,
				_elm_lang$core$Regex$regex('__em-.*?__'),
				s) ? _user$project$App_Talk_TalkUtils$emoticon(
				A3(_elm_lang$core$String$slice, 2, -2, s)) : _elm_lang$html$Html$text(s);
		},
		listStr);
};
var _user$project$App_Talk_TalkView$messageView = F2(
	function (to, msg) {
		var pos = _elm_lang$core$Native_Utils.eq(to, msg.user) ? 'them' : 'me';
		var date = function () {
			var _p0 = _elm_lang$core$String$toFloat(msg.date);
			if (_p0.ctor === 'Ok') {
				return _elm_lang$core$Date$fromTime(_p0._0);
			} else {
				return _elm_lang$core$Date$fromTime(0);
			}
		}();
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class(
					A2(_elm_lang$core$Basics_ops['++'], 'message message-', pos)),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('message-infos'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							A2(
								_elm_lang$core$Basics_ops['++'],
								_user$project$Utils$formatDate(date),
								' - ')),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html$text(msg.user),
							_1: {ctor: '[]'}
						}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('message-bubble'),
							_1: {ctor: '[]'}
						},
						_user$project$App_Talk_TalkView$messageEmoticonView(msg.message)),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$App_Talk_TalkView$talksListView = function (model) {
	var current = function () {
		var _p1 = model.currentTalk;
		if (_p1.ctor === 'Just') {
			return _p1._0;
		} else {
			return '';
		}
	}();
	return (_elm_lang$core$Native_Utils.cmp(
		_elm_lang$core$List$length(model.talks),
		0) > 0) ? A2(
		_elm_lang$html$Html$ul,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('talk-list'),
			_1: {ctor: '[]'}
		},
		A2(
			_elm_lang$core$List$map,
			function (t) {
				return A2(
					_elm_lang$html$Html$li,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class(
							_elm_lang$core$Native_Utils.eq(current, t.username_with) ? 'current' : ''),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$button,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('btn-no-style'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(
										_user$project$Msgs$SetCurrentTalk(t.username_with)),
									_1: {ctor: '[]'}
								}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(t.username_with),
								_1: {
									ctor: '::',
									_0: _user$project$Utils$notif(t.unreadMsgs),
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					});
			},
			model.talks)) : A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('content'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('You haven\'t talk to anyone yet'),
			_1: {ctor: '[]'}
		});
};
var _user$project$App_Talk_TalkView$viewMessageForm = function (t) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$id('new-mess'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$button,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(_user$project$Msgs$ToggleEmoList),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('emo-btn'),
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: _user$project$Utils$icon('em em-grinning'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$form,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$id('message-form'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('message-input'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$input,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$id('input-msg'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$type_('text'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Events$onInput(_user$project$Msgs$UpdateNewMessage),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$value(t.new_message),
													_1: {ctor: '[]'}
												}
											}
										}
									},
									{ctor: '[]'}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$button,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('send-btn'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$type_('submit'),
												_1: {
													ctor: '::',
													_0: A3(_user$project$Utils$onClickCustom, true, false, _user$project$Msgs$SendNewMessage),
													_1: {ctor: '[]'}
												}
											}
										},
										{
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$i,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class('fas fa-share'),
													_1: {ctor: '[]'}
												},
												{ctor: '[]'}),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$App_Talk_TalkView$getEmoListClass = function (sh) {
	return sh ? ' show-emo' : '';
};
var _user$project$App_Talk_TalkView$view = F3(
	function (talk, appModel, model) {
		var _p2 = A2(_user$project$App_Talk_TalkUtils$getTalkWith, talk, model.talks);
		if (_p2.ctor === 'Just') {
			var _p3 = _p2._0;
			var messages = A2(
				_elm_lang$core$List$sortBy,
				function (m) {
					return m.date;
				},
				_p3.messages);
			return {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$id('current-talk'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('layout-row flex'),
							_1: {ctor: '[]'}
						}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$id('talk'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class(
										A2(
											_elm_lang$core$Basics_ops['++'],
											'layout-column',
											_user$project$App_Talk_TalkView$getEmoListClass(appModel.showEmoList))),
									_1: {ctor: '[]'}
								}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$id('talk-title'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$h6,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text(talk),
												_1: {
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$button,
														{
															ctor: '::',
															_0: _elm_lang$html$Html_Events$onClick(_user$project$Msgs$CloseCurrentTalk),
															_1: {
																ctor: '::',
																_0: _elm_lang$html$Html_Attributes$class('pull-right btn-no-style'),
																_1: {ctor: '[]'}
															}
														},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text('x'),
															_1: {ctor: '[]'}
														}),
													_1: {ctor: '[]'}
												}
											}),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$div,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$id('talk-list'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('message-list content'),
												_1: {ctor: '[]'}
											}
										},
										A2(
											_elm_lang$core$List$map,
											_user$project$App_Talk_TalkView$messageView(_p3.username_with),
											messages)),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$div,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$id('talk-foot'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(_user$project$App_Talk_TalkView$emoListView, _user$project$App_Talk_TalkUtils$emoticonList, talk),
												_1: {
													ctor: '::',
													_0: _user$project$App_Talk_TalkView$viewMessageForm(_p3),
													_1: {ctor: '[]'}
												}
											}),
										_1: {ctor: '[]'}
									}
								}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			};
		} else {
			return {
				ctor: '::',
				_0: _elm_lang$html$Html$text('No talk'),
				_1: {ctor: '[]'}
			};
		}
	});

var _user$project$App_User_UserAccountView$viewEditPwdForm = function (formm) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('edit-form'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$form,
				{ctor: '[]'},
				A2(
					_elm_lang$core$Basics_ops['++'],
					A2(
						_elm_lang$core$List$map,
						function (i) {
							return A2(
								_user$project$FormUtils$viewInput,
								_user$project$Msgs$UpdateEditPwdForm(i.id),
								i);
						},
						formm),
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$input,
							{
								ctor: '::',
								_0: A3(_user$project$Utils$onClickCustom, true, true, _user$project$Msgs$ChangePwd),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('important-font'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$type_('submit'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$value('CHANGE PASSWORD'),
											_1: {ctor: '[]'}
										}
									}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					})),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: A3(_user$project$Utils$onClickCustom, true, true, _user$project$Msgs$ToggleResetPwdForm),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Cancel'),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$App_User_UserAccountView$viewDateOfBirthInput = function (user) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('center'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h3,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Date of birth'),
					_1: {ctor: '[]'}
				}),
			_1: A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Native_Utils.eq(user.date_of_birth, _elm_lang$core$Maybe$Nothing) ? {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('text-warning'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Please set your date of birth'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				} : {ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$select,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onInput(_user$project$Msgs$UpdateBirth),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$option,
								A2(
									_elm_lang$core$Basics_ops['++'],
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$value('NaN'),
										_1: {ctor: '[]'}
									},
									_elm_lang$core$Native_Utils.eq(user.date_of_birth, _elm_lang$core$Maybe$Nothing) ? {
										ctor: '::',
										_0: A2(_elm_lang$html$Html_Attributes$attribute, 'selected', 'selected'),
										_1: {ctor: '[]'}
									} : {ctor: '[]'}),
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('No'),
									_1: {ctor: '[]'}
								}),
							_1: A2(
								_elm_lang$core$List$map,
								function (a) {
									return A2(
										_elm_lang$html$Html$option,
										A2(
											_elm_lang$core$Basics_ops['++'],
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$value(
													_elm_lang$core$Basics$toString(a)),
												_1: {ctor: '[]'}
											},
											_elm_lang$core$Native_Utils.eq(
												user.date_of_birth,
												_elm_lang$core$Maybe$Just(a)) ? {
												ctor: '::',
												_0: A2(_elm_lang$html$Html_Attributes$attribute, 'selected', 'selected'),
												_1: {ctor: '[]'}
											} : {ctor: '[]'}),
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text(
												_elm_lang$core$Basics$toString(a)),
											_1: {ctor: '[]'}
										});
								},
								A2(_elm_lang$core$List$range, 1900, 2000))
						}),
					_1: {ctor: '[]'}
				})
		});
};
var _user$project$App_User_UserAccountView$viewEditAccountForm = F2(
	function (accountForm, user) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('edit-form'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$form,
					{ctor: '[]'},
					A2(
						_elm_lang$core$Basics_ops['++'],
						A2(
							_elm_lang$core$List$map,
							function (i) {
								return A2(
									_user$project$FormUtils$viewInput,
									_user$project$Msgs$UpdateEditAccountForm(i.id),
									i);
							},
							accountForm),
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$input,
								{
									ctor: '::',
									_0: A3(_user$project$Utils$onClickCustom, true, true, _user$project$Msgs$SaveAccountUpdates),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('important-font'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$type_('submit'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$value('SAVE'),
												_1: {ctor: '[]'}
											}
										}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$button,
									{
										ctor: '::',
										_0: A3(_user$project$Utils$onClickCustom, true, true, _user$project$Msgs$ToggleAccountForm),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('btn-no-style'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$style(
													{
														ctor: '::',
														_0: {ctor: '_Tuple2', _0: 'padding', _1: '5px'},
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}
										}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Cancel'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						})),
				_1: {ctor: '[]'}
			});
	});
var _user$project$App_User_UserAccountView$viewIntInForm = function (intIn) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('center'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h3,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('I am interested in'),
					_1: {ctor: '[]'}
				}),
			_1: A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Native_Utils.eq(
					intIn,
					{ctor: '[]'}) ? {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$span,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('text-warning'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Please select the gender(s) you like'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				} : {ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('row'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$label,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$for('imale'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class(
											A2(
												_elm_lang$core$Basics_ops['++'],
												'gender-btn three columns',
												A2(_elm_lang$core$List$member, _user$project$App_User_UserModel$M, intIn) ? ' active' : '')),
										_1: {ctor: '[]'}
									}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Males '),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$i,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('fas fa-mars'),
												_1: {ctor: '[]'}
											},
											{ctor: '[]'}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$input,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$name('intIn'),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$type_('checkbox'),
														_1: {
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$id('imale'),
															_1: {
																ctor: '::',
																_0: A3(
																	_user$project$Utils$onClickCustom,
																	false,
																	true,
																	_user$project$Msgs$UpdateIntIn(_user$project$App_User_UserModel$M)),
																_1: {
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$checked(
																		A2(_elm_lang$core$List$member, _user$project$App_User_UserModel$M, intIn)),
																	_1: {ctor: '[]'}
																}
															}
														}
													}
												},
												{ctor: '[]'}),
											_1: {ctor: '[]'}
										}
									}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$label,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$for('ifemale'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class(
												A2(
													_elm_lang$core$Basics_ops['++'],
													'gender-btn three columns',
													A2(_elm_lang$core$List$member, _user$project$App_User_UserModel$F, intIn) ? ' active' : '')),
											_1: {ctor: '[]'}
										}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Females '),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$i,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class('fas fa-venus'),
													_1: {ctor: '[]'}
												},
												{ctor: '[]'}),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$input,
													{
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$name('intIn'),
														_1: {
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$type_('checkbox'),
															_1: {
																ctor: '::',
																_0: _elm_lang$html$Html_Attributes$id('ifemale'),
																_1: {
																	ctor: '::',
																	_0: A3(
																		_user$project$Utils$onClickCustom,
																		false,
																		true,
																		_user$project$Msgs$UpdateIntIn(_user$project$App_User_UserModel$F)),
																	_1: {
																		ctor: '::',
																		_0: _elm_lang$html$Html_Attributes$checked(
																			A2(_elm_lang$core$List$member, _user$project$App_User_UserModel$F, intIn)),
																		_1: {ctor: '[]'}
																	}
																}
															}
														}
													},
													{ctor: '[]'}),
												_1: {ctor: '[]'}
											}
										}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$label,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$for('inb'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class(
													A2(
														_elm_lang$core$Basics_ops['++'],
														'gender-btn three columns',
														A2(_elm_lang$core$List$member, _user$project$App_User_UserModel$NB, intIn) ? ' active' : '')),
												_1: {ctor: '[]'}
											}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('Non-binaries '),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$i,
													{
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$class('fas fa-transgender-alt'),
														_1: {ctor: '[]'}
													},
													{ctor: '[]'}),
												_1: {
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$input,
														{
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$name('intIn'),
															_1: {
																ctor: '::',
																_0: _elm_lang$html$Html_Attributes$type_('checkbox'),
																_1: {
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$id('inb'),
																	_1: {
																		ctor: '::',
																		_0: A3(
																			_user$project$Utils$onClickCustom,
																			false,
																			true,
																			_user$project$Msgs$UpdateIntIn(_user$project$App_User_UserModel$NB)),
																		_1: {
																			ctor: '::',
																			_0: _elm_lang$html$Html_Attributes$checked(
																				A2(_elm_lang$core$List$member, _user$project$App_User_UserModel$NB, intIn)),
																			_1: {ctor: '[]'}
																		}
																	}
																}
															}
														},
														{ctor: '[]'}),
													_1: {ctor: '[]'}
												}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$label,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$for('io'),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class(
														A2(
															_elm_lang$core$Basics_ops['++'],
															'gender-btn three columns',
															A2(_elm_lang$core$List$member, _user$project$App_User_UserModel$O, intIn) ? ' active' : '')),
													_1: {ctor: '[]'}
												}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('Others '),
												_1: {
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$i,
														{
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$class('fas fa-genderless'),
															_1: {ctor: '[]'}
														},
														{ctor: '[]'}),
													_1: {
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$input,
															{
																ctor: '::',
																_0: _elm_lang$html$Html_Attributes$name('intIn'),
																_1: {
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$type_('checkbox'),
																	_1: {
																		ctor: '::',
																		_0: _elm_lang$html$Html_Attributes$id('io'),
																		_1: {
																			ctor: '::',
																			_0: A3(
																				_user$project$Utils$onClickCustom,
																				false,
																				true,
																				_user$project$Msgs$UpdateIntIn(_user$project$App_User_UserModel$O)),
																			_1: {
																				ctor: '::',
																				_0: _elm_lang$html$Html_Attributes$checked(
																					A2(_elm_lang$core$List$member, _user$project$App_User_UserModel$O, intIn)),
																				_1: {ctor: '[]'}
																			}
																		}
																	}
																}
															},
															{ctor: '[]'}),
														_1: {ctor: '[]'}
													}
												}
											}),
										_1: {ctor: '[]'}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				})
		});
};
var _user$project$App_User_UserAccountView$viewGenderForm = function (gender) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('center'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h3,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('I am'),
					_1: {ctor: '[]'}
				}),
			_1: A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Native_Utils.eq(gender, _elm_lang$core$Maybe$Nothing) ? {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$span,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('text-warning'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Please select your gender'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				} : {ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('row'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$label,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$for('gmale'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class(
											A2(
												_elm_lang$core$Basics_ops['++'],
												'gender-btn three columns',
												_elm_lang$core$Native_Utils.eq(
													gender,
													_elm_lang$core$Maybe$Just(_user$project$App_User_UserModel$M)) ? ' active' : '')),
										_1: {ctor: '[]'}
									}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Male '),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$i,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('fas fa-mars'),
												_1: {ctor: '[]'}
											},
											{ctor: '[]'}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$input,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$name('gender'),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$type_('radio'),
														_1: {
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$id('gmale'),
															_1: {
																ctor: '::',
																_0: A3(
																	_user$project$Utils$onClickCustom,
																	false,
																	true,
																	_user$project$Msgs$UpdateGender(_user$project$App_User_UserModel$M)),
																_1: {
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$checked(
																		_elm_lang$core$Native_Utils.eq(
																			gender,
																			_elm_lang$core$Maybe$Just(_user$project$App_User_UserModel$M))),
																	_1: {ctor: '[]'}
																}
															}
														}
													}
												},
												{ctor: '[]'}),
											_1: {ctor: '[]'}
										}
									}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$label,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$for('gfemale'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class(
												A2(
													_elm_lang$core$Basics_ops['++'],
													'gender-btn three columns',
													_elm_lang$core$Native_Utils.eq(
														gender,
														_elm_lang$core$Maybe$Just(_user$project$App_User_UserModel$F)) ? ' active' : '')),
											_1: {ctor: '[]'}
										}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Female '),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$i,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class('fas fa-venus'),
													_1: {ctor: '[]'}
												},
												{ctor: '[]'}),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$input,
													{
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$name('gender'),
														_1: {
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$type_('radio'),
															_1: {
																ctor: '::',
																_0: _elm_lang$html$Html_Attributes$id('gfemale'),
																_1: {
																	ctor: '::',
																	_0: A3(
																		_user$project$Utils$onClickCustom,
																		false,
																		true,
																		_user$project$Msgs$UpdateGender(_user$project$App_User_UserModel$F)),
																	_1: {
																		ctor: '::',
																		_0: _elm_lang$html$Html_Attributes$checked(
																			_elm_lang$core$Native_Utils.eq(
																				gender,
																				_elm_lang$core$Maybe$Just(_user$project$App_User_UserModel$F))),
																		_1: {ctor: '[]'}
																	}
																}
															}
														}
													},
													{ctor: '[]'}),
												_1: {ctor: '[]'}
											}
										}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$label,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$for('gnb'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class(
													A2(
														_elm_lang$core$Basics_ops['++'],
														'gender-btn three columns',
														_elm_lang$core$Native_Utils.eq(
															gender,
															_elm_lang$core$Maybe$Just(_user$project$App_User_UserModel$NB)) ? ' active' : '')),
												_1: {ctor: '[]'}
											}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('Non-binary '),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$i,
													{
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$class('fas fa-transgender-alt'),
														_1: {ctor: '[]'}
													},
													{ctor: '[]'}),
												_1: {
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$input,
														{
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$name('gender'),
															_1: {
																ctor: '::',
																_0: _elm_lang$html$Html_Attributes$type_('radio'),
																_1: {
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$id('gnb'),
																	_1: {
																		ctor: '::',
																		_0: A3(
																			_user$project$Utils$onClickCustom,
																			false,
																			true,
																			_user$project$Msgs$UpdateGender(_user$project$App_User_UserModel$NB)),
																		_1: {
																			ctor: '::',
																			_0: _elm_lang$html$Html_Attributes$checked(
																				_elm_lang$core$Native_Utils.eq(
																					gender,
																					_elm_lang$core$Maybe$Just(_user$project$App_User_UserModel$NB))),
																			_1: {ctor: '[]'}
																		}
																	}
																}
															}
														},
														{ctor: '[]'}),
													_1: {ctor: '[]'}
												}
											}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$label,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$for('go'),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class(
														A2(
															_elm_lang$core$Basics_ops['++'],
															'gender-btn three columns',
															_elm_lang$core$Native_Utils.eq(
																gender,
																_elm_lang$core$Maybe$Just(_user$project$App_User_UserModel$O)) ? ' active' : '')),
													_1: {ctor: '[]'}
												}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('Other '),
												_1: {
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$i,
														{
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$class('fas fa-genderless'),
															_1: {ctor: '[]'}
														},
														{ctor: '[]'}),
													_1: {
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$input,
															{
																ctor: '::',
																_0: _elm_lang$html$Html_Attributes$name('gender'),
																_1: {
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$type_('radio'),
																	_1: {
																		ctor: '::',
																		_0: _elm_lang$html$Html_Attributes$id('go'),
																		_1: {
																			ctor: '::',
																			_0: A3(
																				_user$project$Utils$onClickCustom,
																				false,
																				true,
																				_user$project$Msgs$UpdateGender(_user$project$App_User_UserModel$O)),
																			_1: {
																				ctor: '::',
																				_0: _elm_lang$html$Html_Attributes$checked(
																					_elm_lang$core$Native_Utils.eq(
																						gender,
																						_elm_lang$core$Maybe$Just(_user$project$App_User_UserModel$O))),
																				_1: {ctor: '[]'}
																			}
																		}
																	}
																}
															},
															{ctor: '[]'}),
														_1: {ctor: '[]'}
													}
												}
											}),
										_1: {ctor: '[]'}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				})
		});
};
var _user$project$App_User_UserAccountView$viewTagForm = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('input'),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$id('search-input'),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$form,
				{ctor: '[]'},
				A2(
					_elm_lang$core$Basics_ops['++'],
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$input,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$type_('text'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onInput(_user$project$Msgs$SearchTag),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$value(model.tagInput),
										_1: {ctor: '[]'}
									}
								}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$button,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('btn-no-style'),
									_1: {
										ctor: '::',
										_0: A3(_user$project$Utils$onClickCustom, true, true, _user$project$Msgs$AddNewTag),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$type_('submit'),
											_1: {ctor: '[]'}
										}
									}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('+'),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$ul,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('search-list'),
										_1: {ctor: '[]'}
									},
									A2(
										_elm_lang$core$List$map,
										function (i) {
											return A2(
												_elm_lang$html$Html$li,
												{
													ctor: '::',
													_0: A3(
														_user$project$Utils$onClickCustom,
														false,
														true,
														_user$project$Msgs$AddTag(i)),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$class('pointer'),
														_1: {ctor: '[]'}
													}
												},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text(i),
													_1: {ctor: '[]'}
												});
										},
										model.searchTag)),
								_1: {ctor: '[]'}
							}
						}
					},
					function () {
						var _p0 = _user$project$FormUtils$validTag(
							_elm_lang$core$Maybe$Just(model.tagInput));
						if (_p0.ctor === 'NotValid') {
							return {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('input-tip'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text(_p0._0),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							};
						} else {
							return {ctor: '[]'};
						}
					}())),
			_1: {ctor: '[]'}
		});
};
var _user$project$App_User_UserAccountView$viewTagSection = F2(
	function (model, user) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('tag-section center'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$h3,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Tags'),
						_1: {ctor: '[]'}
					}),
				_1: A2(
					_elm_lang$core$Basics_ops['++'],
					A2(
						_elm_lang$core$List$map,
						function (t) {
							return A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('tag dismissable'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(t),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$div,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('del pointer'),
												_1: {
													ctor: '::',
													_0: A3(
														_user$project$Utils$onClickCustom,
														false,
														true,
														_user$project$Msgs$RemoveTag(t)),
													_1: {ctor: '[]'}
												}
											},
											{
												ctor: '::',
												_0: _user$project$Utils$icon('fas fa-times'),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								});
						},
						_elm_lang$core$List$sort(user.tags)),
					{
						ctor: '::',
						_0: _user$project$App_User_UserAccountView$viewTagForm(model),
						_1: {ctor: '[]'}
					})
			});
	});
var _user$project$App_User_UserAccountView$viewImagePreview = function (image) {
	return A2(
		_elm_lang$html$Html$img,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$src(image.contents),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$title(image.filename),
				_1: {ctor: '[]'}
			}
		},
		{ctor: '[]'});
};
var _user$project$App_User_UserAccountView$viewNewImgeForm = function (model) {
	var imagePreview = function () {
		var _p1 = model.mImage;
		if (_p1.ctor === 'Just') {
			return _user$project$App_User_UserAccountView$viewImagePreview(_p1._0);
		} else {
			return _elm_lang$html$Html$text('');
		}
	}();
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('imageWrapper center'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$label,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$for(model.idImg),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('label-upload button'),
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$type_('file'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$accept('image/*'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$id(model.idImg),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html_Events$on,
											'change',
											_elm_lang$core$Json_Decode$succeed(_user$project$Msgs$ImageSelected)),
										_1: {ctor: '[]'}
									}
								}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html$text('Upload new image'),
						_1: {ctor: '[]'}
					}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$App_User_UserAccountView$viewImages = F2(
	function (model, user) {
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$h3,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Images'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('row gallery'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: (_elm_lang$core$Native_Utils.cmp(
								_elm_lang$core$List$length(user.photos),
								0) > 0) ? A2(
								_elm_lang$html$Html$ul,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('img-account-list'),
									_1: {ctor: '[]'}
								},
								A2(
									_elm_lang$core$List$map,
									function (_p2) {
										var _p3 = _p2;
										var _p4 = _p3._0;
										return A2(
											_elm_lang$html$Html$li,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$div,
													{
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$style(
															{
																ctor: '::',
																_0: {
																	ctor: '_Tuple2',
																	_0: 'background',
																	_1: A2(
																		_elm_lang$core$Basics_ops['++'],
																		'url(',
																		A2(_elm_lang$core$Basics_ops['++'], _p3._1, ') center center no-repeat'))
																},
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$class('img-box'),
															_1: {ctor: '[]'}
														}
													},
													{
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$button,
															{
																ctor: '::',
																_0: _elm_lang$html$Html_Attributes$class('del'),
																_1: {
																	ctor: '::',
																	_0: A3(
																		_user$project$Utils$onClickCustom,
																		true,
																		false,
																		_user$project$Msgs$DeleteImg(_p4)),
																	_1: {ctor: '[]'}
																}
															},
															{
																ctor: '::',
																_0: _user$project$Utils$icon('fas fa-times'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_elm_lang$html$Html$button,
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$class('img-main'),
																	_1: {
																		ctor: '::',
																		_0: A3(
																			_user$project$Utils$onClickCustom,
																			true,
																			false,
																			_user$project$Msgs$UpdateMainImage(_p4)),
																		_1: {ctor: '[]'}
																	}
																},
																{
																	ctor: '::',
																	_0: _p3._2 ? A3(
																		_elm_lang$html$Html_Keyed$node,
																		'main',
																		{
																			ctor: '::',
																			_0: _elm_lang$html$Html_Attributes$class('fas fa-star'),
																			_1: {ctor: '[]'}
																		},
																		{ctor: '[]'}) : A3(
																		_elm_lang$html$Html_Keyed$node,
																		'nomain',
																		{
																			ctor: '::',
																			_0: _elm_lang$html$Html_Attributes$class('far fa-star'),
																			_1: {ctor: '[]'}
																		},
																		{ctor: '[]'}),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {ctor: '[]'}
											});
									},
									user.photos)) : A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('center text-warning'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('You haven\'t uploaded any pictures yet'),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: (_elm_lang$core$Native_Utils.cmp(
									_elm_lang$core$List$length(user.photos),
									5) < 0) ? _user$project$App_User_UserAccountView$viewNewImgeForm(model) : A2(
									_elm_lang$html$Html$div,
									{ctor: '[]'},
									{ctor: '[]'}),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$App_User_UserAccountView$viewLocalisation = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		model.localizing ? {
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('localizing'),
			_1: {ctor: '[]'}
		} : {ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h3,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Localisation'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$id('map'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: model.localizing ? A2(
							_elm_lang$html$Html$button,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('map-btn'),
								_1: {
									ctor: '::',
									_0: A2(_elm_lang$html$Html_Attributes$attribute, 'disabled', 'disabled'),
									_1: {ctor: '[]'}
								}
							},
							{
								ctor: '::',
								_0: A3(
									_elm_lang$html$Html_Keyed$node,
									'loc',
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('fas fa-spinner fa-pulse'),
										_1: {ctor: '[]'}
									},
									{ctor: '[]'}),
								_1: {ctor: '[]'}
							}) : A2(
							_elm_lang$html$Html$button,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(_user$project$Msgs$Localize),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('map-btn'),
									_1: {ctor: '[]'}
								}
							},
							{
								ctor: '::',
								_0: A3(
									_elm_lang$html$Html_Keyed$node,
									'nloc',
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('fas fa-location-arrow'),
										_1: {ctor: '[]'}
									},
									{ctor: '[]'}),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$App_User_UserAccountView$getUserBio = function (user) {
	var _p5 = user.bio;
	if (_p5.ctor === 'Just') {
		return _p5._0;
	} else {
		return '';
	}
};
var _user$project$App_User_UserAccountView$viewInfosMessage = function (user) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('row'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('twelve columns'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Native_Utils.eq(user.status, _user$project$App_User_UserModel$Incomplete) ? {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Please complete your profile'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							} : {ctor: '[]'},
							_elm_lang$core$Native_Utils.eq(user.status, _user$project$App_User_UserModel$ResetPassword) ? {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Don\'t forget to change your password'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							} : {ctor: '[]'})),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$App_User_UserAccountView$view = F2(
	function (session, model) {
		var shortBio = function () {
			var _p6 = session.user.bio;
			if (_p6.ctor === 'Just') {
				var _p7 = _p6._0;
				return _elm_lang$core$Native_Utils.eq(
					_elm_lang$core$String$length(_p7),
					0) ? A2(
					_elm_lang$html$Html$span,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('text-warning pointer'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(_user$project$Msgs$ToggleAccountForm),
							_1: {ctor: '[]'}
						}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Please add a bio'),
						_1: {ctor: '[]'}
					}) : ((_elm_lang$core$Native_Utils.cmp(
					_elm_lang$core$String$length(_p7),
					50) < 0) ? _elm_lang$html$Html$text(_p7) : _elm_lang$html$Html$text(
					A2(
						_elm_lang$core$Basics_ops['++'],
						A2(_elm_lang$core$String$left, 50, _p7),
						'...')));
			} else {
				return A2(
					_elm_lang$html$Html$span,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('text-warning pointer'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(_user$project$Msgs$ToggleAccountForm),
							_1: {ctor: '[]'}
						}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Please add a bio'),
						_1: {ctor: '[]'}
					});
			}
		}();
		return model.showAccountMenu ? {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'width', _1: '100%'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'padding', _1: '14px'},
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						model.showEditAccountForm ? {
							ctor: '::',
							_0: A2(_user$project$App_User_UserAccountView$viewEditAccountForm, model.editAccountForm, session.user),
							_1: {ctor: '[]'}
						} : {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$h2,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(session.user.username),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text(
											A2(
												_elm_lang$core$Basics_ops['++'],
												session.user.fname,
												A2(_elm_lang$core$Basics_ops['++'], ' ', session.user.lname))),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$div,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text(session.user.email),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$div,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: shortBio,
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$button,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class('btn-no-style'),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Events$onClick(_user$project$Msgs$ToggleAccountForm),
														_1: {ctor: '[]'}
													}
												},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('Edit infos'),
													_1: {ctor: '[]'}
												}),
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: model.showResetPwdForm ? _user$project$App_User_UserAccountView$viewEditPwdForm(model.changePwdForm) : A2(
									_elm_lang$html$Html$button,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('btn-no-style'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onClick(_user$project$Msgs$ToggleResetPwdForm),
											_1: {ctor: '[]'}
										}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Edit password'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: _user$project$App_User_UserAccountView$viewDateOfBirthInput(session.user),
							_1: {
								ctor: '::',
								_0: _user$project$App_User_UserAccountView$viewGenderForm(session.user.gender),
								_1: {
									ctor: '::',
									_0: _user$project$App_User_UserAccountView$viewIntInForm(session.user.intIn),
									_1: {
										ctor: '::',
										_0: A2(_user$project$App_User_UserAccountView$viewTagSection, model, session.user),
										_1: {
											ctor: '::',
											_0: A2(_user$project$App_User_UserAccountView$viewImages, model, session.user),
											_1: {
												ctor: '::',
												_0: _user$project$App_User_UserAccountView$viewLocalisation(model),
												_1: {
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$div,
														{
															ctor: '::',
															_0: _elm_lang$html$Html_Events$onClick(_user$project$Msgs$Logout),
															_1: {
																ctor: '::',
																_0: _elm_lang$html$Html_Attributes$class('center logout-btn'),
																_1: {ctor: '[]'}
															}
														},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text('Logout '),
															_1: {
																ctor: '::',
																_0: _user$project$Utils$icon('fas fa-power-off'),
																_1: {ctor: '[]'}
															}
														}),
													_1: {ctor: '[]'}
												}
											}
										}
									}
								}
							}
						}
					}
				}),
			_1: {ctor: '[]'}
		} : {ctor: '[]'};
	});

var _user$project$App_User_UserView$galleryButtonView = F2(
	function (gal, user) {
		var options = {stopPropagation: true, preventDefault: false};
		return (_elm_lang$core$Native_Utils.cmp(
			_elm_lang$core$List$length(gal),
			1) > 0) ? {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('gal-btn '),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: A3(
								_elm_lang$html$Html_Events$onWithOptions,
								'click',
								options,
								_elm_lang$core$Json_Decode$succeed(
									A2(_user$project$Msgs$ChangeImage, user, -1))),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _user$project$Utils$icon('fas fa-chevron-left'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$button,
							{
								ctor: '::',
								_0: A3(
									_elm_lang$html$Html_Events$onWithOptions,
									'click',
									options,
									_elm_lang$core$Json_Decode$succeed(
										A2(_user$project$Msgs$ChangeImage, user, 1))),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _user$project$Utils$icon('fas fa-chevron-right'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}),
			_1: {ctor: '[]'}
		} : {ctor: '[]'};
	});
var _user$project$App_User_UserView$userTagsView = F2(
	function (user, s) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('center'),
				_1: {ctor: '[]'}
			},
			A2(
				_elm_lang$core$List$map,
				function (t) {
					var me = A2(_elm_lang$core$List$member, t, s.user.tags) ? ' metoo' : '';
					return A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class(
								A2(_elm_lang$core$Basics_ops['++'], 'tag', me)),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								A2(_elm_lang$core$Basics_ops['++'], '#', t)),
							_1: {ctor: '[]'}
						});
				},
				_elm_lang$core$List$sort(user.tags)));
	});
var _user$project$App_User_UserView$userBioView = function (user) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('user-bio'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(user.bio),
			_1: {ctor: '[]'}
		});
};
var _user$project$App_User_UserView$userDistanceView = function (user) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('info-dist'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A3(
				_elm_lang$html$Html_Keyed$node,
				'dist',
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('fas fa-location-arrow'),
					_1: {ctor: '[]'}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html$text(
					(_elm_lang$core$Native_Utils.cmp(user.distance, 1) < 0) ? A2(
						_elm_lang$core$Basics_ops['++'],
						' ',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(
								_elm_lang$core$Basics$round(user.distance * 1000)),
							' m away')) : A2(
						_elm_lang$core$Basics_ops['++'],
						' ',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(
								_elm_lang$core$Basics$round(user.distance)),
							' km away'))),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$App_User_UserView$userNameView = function (user) {
	return A2(
		_elm_lang$html$Html$h3,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(user.username),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html$text(', '),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						_elm_lang$core$Basics$toString(2018 - user.date_of_birth)),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('u-pull-right'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _user$project$Utils$genderToIcon(user.gender),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$App_User_UserView$userOnlineStatusView = F2(
	function (model, user) {
		var online = A2(_user$project$App_User_UserHelper$getOnlineStatus, model, user);
		var last_connection = function () {
			var _p0 = _elm_lang$core$String$toFloat(user.lastOn);
			if (_p0.ctor === 'Ok') {
				return _elm_lang$core$Date$fromTime(_p0._0);
			} else {
				return _elm_lang$core$Date$fromTime(0);
			}
		}();
		return online ? A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('online-status on'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text('Online '),
				_1: {
					ctor: '::',
					_0: _user$project$Utils$icon('fas fa-circle'),
					_1: {ctor: '[]'}
				}
			}) : A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('online-status off'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(
					A2(
						_elm_lang$core$Basics_ops['++'],
						'Last time seen: ',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_user$project$Utils$formatDate(last_connection),
							' '))),
				_1: {
					ctor: '::',
					_0: _user$project$Utils$icon('fas fa-circle'),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$App_User_UserView$userMatchStatusView = function (user) {
	var options = {stopPropagation: false, preventDefault: false};
	var talkTxt = user.has_talk ? 'fas fa-comments' : 'far fa-comments';
	return _elm_lang$core$Native_Utils.eq(
		_user$project$App_User_UserHelper$getMatchStatus(user),
		_user$project$App_User_UserModel$Match) ? A2(
		_elm_lang$html$Html$button,
		{
			ctor: '::',
			_0: A3(
				_elm_lang$html$Html_Events$onWithOptions,
				'click',
				options,
				_elm_lang$core$Json_Decode$succeed(
					_user$project$Msgs$SetCurrentTalk(user.username))),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('talk-btn'),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$i,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class(talkTxt),
					_1: {ctor: '[]'}
				},
				{ctor: '[]'}),
			_1: {ctor: '[]'}
		}) : A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{ctor: '[]'});
};
var _user$project$App_User_UserView$userLikeButtonView = F2(
	function (session, user) {
		var options = {stopPropagation: true, preventDefault: false};
		var match = _user$project$App_User_UserHelper$getMatchStatus(user);
		var likeClass = (_elm_lang$core$Native_Utils.eq(match, _user$project$App_User_UserModel$To) || _elm_lang$core$Native_Utils.eq(match, _user$project$App_User_UserModel$Match)) ? ' liked' : '';
		var ico = function () {
			var _p1 = match;
			switch (_p1.ctor) {
				case 'To':
					return A3(
						_elm_lang$html$Html_Keyed$node,
						'to',
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('fas fa-arrow-up'),
							_1: {
								ctor: '::',
								_0: A2(_elm_lang$html$Html_Attributes$attribute, 'data-fa-transform', 'shrink-10 up-.5'),
								_1: {
									ctor: '::',
									_0: A2(_elm_lang$html$Html_Attributes$attribute, 'data-fa-mask', 'fas fa-heart'),
									_1: {ctor: '[]'}
								}
							}
						},
						{ctor: '[]'});
				case 'From':
					return A3(
						_elm_lang$html$Html_Keyed$node,
						'from',
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('fas fa-arrow-down'),
							_1: {
								ctor: '::',
								_0: A2(_elm_lang$html$Html_Attributes$attribute, 'data-fa-transform', 'shrink-10 up-.5'),
								_1: {
									ctor: '::',
									_0: A2(_elm_lang$html$Html_Attributes$attribute, 'data-fa-mask', 'fas fa-heart'),
									_1: {ctor: '[]'}
								}
							}
						},
						{ctor: '[]'});
				case 'Match':
					return A2(
						_elm_lang$html$Html$img,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$src('http://localhost:3001/images/logo_only.svg'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$width(35),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$style(
										{
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'margin-top', _1: '5px'},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'fill', _1: 'orange'},
												_1: {ctor: '[]'}
											}
										}),
									_1: {ctor: '[]'}
								}
							}
						},
						{ctor: '[]'});
				default:
					return A3(
						_elm_lang$html$Html_Keyed$node,
						'nada',
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('fas fa-heart'),
							_1: {ctor: '[]'}
						},
						{ctor: '[]'});
			}
		}();
		return (_elm_lang$core$Native_Utils.cmp(
			_user$project$App_AppUtils$getAccountNotif(session.user),
			0) > 0) ? A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{ctor: '[]'}) : A2(
			_elm_lang$html$Html$button,
			{
				ctor: '::',
				_0: A3(
					_elm_lang$html$Html_Events$onWithOptions,
					'click',
					options,
					_elm_lang$core$Json_Decode$succeed(
						_user$project$Msgs$ToggleLike(user.username))),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class(
						A2(_elm_lang$core$Basics_ops['++'], 'like-btn', likeClass)),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: ico,
				_1: {ctor: '[]'}
			});
	});
var _user$project$App_User_UserView$getStar = F3(
	function (popu, index, step) {
		var att = (!_elm_lang$core$Native_Utils.eq(
			A2(_elm_lang$core$Basics_ops['%'], index, 2),
			0)) ? {
			ctor: '::',
			_0: A2(_elm_lang$html$Html_Attributes$attribute, 'data-fa-transform', 'flip-h'),
			_1: {ctor: '[]'}
		} : {ctor: '[]'};
		return (_elm_lang$core$Native_Utils.cmp(popu, step) > -1) ? A3(
			_elm_lang$html$Html_Keyed$node,
			'fastar',
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('fas fa-star'),
					_1: {ctor: '[]'}
				},
				att),
			{ctor: '[]'}) : A3(
			_elm_lang$html$Html_Keyed$node,
			'fartar',
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('far fa-star'),
					_1: {ctor: '[]'}
				},
				att),
			{ctor: '[]'});
	});
var _user$project$App_User_UserView$getPopu = function (user) {
	return (_elm_lang$core$Basics$toFloat(user.likes) * 2) + (_elm_lang$core$Basics$toFloat(user.visits) * 0.5);
};
var _user$project$App_User_UserView$userPopuView = function (user) {
	var popu = _user$project$App_User_UserView$getPopu(user);
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('pull-right'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$span,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(popu),
							' ')),
					_1: {ctor: '[]'}
				}),
			_1: A2(
				_elm_lang$core$List$indexedMap,
				_user$project$App_User_UserView$getStar(
					_elm_lang$core$Basics$round(popu)),
				{
					ctor: '::',
					_0: 5,
					_1: {
						ctor: '::',
						_0: 10,
						_1: {
							ctor: '::',
							_0: 50,
							_1: {
								ctor: '::',
								_0: 100,
								_1: {
									ctor: '::',
									_0: 200,
									_1: {ctor: '[]'}
								}
							}
						}
					}
				})
		});
};
var _user$project$App_User_UserView$userReportView = function (username) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('text-right'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$button,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('btn-no-style'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(
							_user$project$Msgs$BlockUser(username)),
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('block'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html$text(' '),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('btn-no-style'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(
									_user$project$Msgs$ReportUser(username)),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('report'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$App_User_UserView$userButtonsView = F2(
	function (s, user) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('user-btns layout-row space-between'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(_user$project$App_User_UserView$userLikeButtonView, s, user),
						_1: {
							ctor: '::',
							_0: _user$project$App_User_UserView$userMatchStatusView(user),
							_1: {ctor: '[]'}
						}
					}),
				_1: {
					ctor: '::',
					_0: _user$project$App_User_UserView$userPopuView(user),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$App_User_UserView$userImagesView = F2(
	function (user, session) {
		var imgSrc = function () {
			var _p2 = _elm_lang$core$List$head(user.photos);
			if ((_p2.ctor === 'Just') && (_p2._0.ctor === '_Tuple3')) {
				return _p2._0._1;
			} else {
				return 'http://profile.actionsprout.com/default.jpeg';
			}
		}();
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'background',
							_1: A2(
								_elm_lang$core$Basics_ops['++'],
								'url(',
								A2(_elm_lang$core$Basics_ops['++'], imgSrc, ') center center no-repeat'))
						},
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('img-box'),
					_1: {ctor: '[]'}
				}
			},
			A2(
				_elm_lang$core$Basics_ops['++'],
				A2(
					_user$project$App_User_UserView$galleryButtonView,
					A2(
						_elm_lang$core$List$map,
						function (_p3) {
							var _p4 = _p3;
							return _p4._1;
						},
						user.photos),
					user),
				{
					ctor: '::',
					_0: A2(_user$project$App_User_UserView$userButtonsView, session, user),
					_1: {ctor: '[]'}
				}));
	});
var _user$project$App_User_UserView$alertView = function (user) {
	return (_elm_lang$core$Native_Utils.cmp(
		_user$project$App_AppUtils$getAccountNotif(user),
		0) > 0) ? A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('center pointer text-warning'),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(_user$project$Msgs$ToggleAccountMenu),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('Please complete your profile to interract with user'),
			_1: {ctor: '[]'}
		}) : A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{ctor: '[]'});
};
var _user$project$App_User_UserView$view = F4(
	function (username, session, appModel, model) {
		var view = function () {
			var _p5 = A2(_user$project$App_User_UserHelper$findUserByName, username, model.users);
			if (_p5.ctor === 'Just') {
				var _p6 = _p5._0;
				return {
					ctor: '::',
					_0: A2(_user$project$App_User_UserView$userImagesView, _p6, session),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('user-infos'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _user$project$App_User_UserView$alertView(session.user),
								_1: {
									ctor: '::',
									_0: _user$project$App_User_UserView$userNameView(_p6),
									_1: {
										ctor: '::',
										_0: A2(_user$project$App_User_UserView$userTagsView, _p6, session),
										_1: {
											ctor: '::',
											_0: _user$project$App_User_UserView$userBioView(_p6),
											_1: {
												ctor: '::',
												_0: _user$project$App_User_UserView$userReportView(_p6.username),
												_1: {
													ctor: '::',
													_0: _user$project$App_User_UserView$userDistanceView(_p6),
													_1: {
														ctor: '::',
														_0: A2(_user$project$App_User_UserView$userOnlineStatusView, appModel, _p6),
														_1: {ctor: '[]'}
													}
												}
											}
										}
									}
								}
							}),
						_1: {ctor: '[]'}
					}
				};
			} else {
				return {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('user-infos'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								A2(_elm_lang$core$Basics_ops['++'], 'No user with name ', username)),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				};
			}
		}();
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('user-box appear'),
				_1: {ctor: '[]'}
			},
			view);
	});

var _user$project$App_User_UsersView$isMainImage = function (_p0) {
	var _p1 = _p0;
	return _p1._2;
};
var _user$project$App_User_UsersView$userImageView = F3(
	function (user, session, model) {
		var imgSrc = function () {
			var _p2 = _elm_lang$core$List$head(
				A2(_elm_lang$core$List$filter, _user$project$App_User_UsersView$isMainImage, user.photos));
			if ((_p2.ctor === 'Just') && (_p2._0.ctor === '_Tuple3')) {
				return _p2._0._1;
			} else {
				return 'http://profile.actionsprout.com/default.jpeg';
			}
		}();
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'background',
							_1: A2(
								_elm_lang$core$Basics_ops['++'],
								'url(',
								A2(_elm_lang$core$Basics_ops['++'], imgSrc, ') center center no-repeat'))
						},
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('img-box'),
					_1: {ctor: '[]'}
				}
			},
			{ctor: '[]'});
	});
var _user$project$App_User_UsersView$userInfosView = F3(
	function (appModel, user, model) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('user-infos'),
				_1: {ctor: '[]'}
			},
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: _user$project$App_User_UserView$userNameView(user),
					_1: {
						ctor: '::',
						_0: _user$project$App_User_UserView$userDistanceView(user),
						_1: {ctor: '[]'}
					}
				},
				A2(_user$project$App_User_UserHelper$getOnlineStatus, appModel, user) ? {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('online-status on'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Online '),
							_1: {
								ctor: '::',
								_0: A3(
									_elm_lang$html$Html_Keyed$node,
									'online',
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('fas fa-circle'),
										_1: {ctor: '[]'}
									},
									{ctor: '[]'}),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				} : {ctor: '[]'}));
	});
var _user$project$App_User_UsersView$cardUserView = F5(
	function (appModel, user, i, session, model) {
		return A3(
			_elm_lang$html$Html_Keyed$node,
			A2(_elm_lang$core$String$filter, _elm_lang$core$Char$isLower, user.username),
			{ctor: '[]'},
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'div',
					_1: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(
								_user$project$Msgs$ShowUser(user.username)),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('user-card animated fadeInUp'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$style(
										{
											ctor: '::',
											_0: {
												ctor: '_Tuple2',
												_0: 'animation-delay',
												_1: A2(
													_elm_lang$core$Basics_ops['++'],
													_elm_lang$core$Basics$toString(
														_elm_lang$core$Basics$toFloat(i) / 15),
													's')
											},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'animation-duration', _1: '.3s'},
												_1: {ctor: '[]'}
											}
										}),
									_1: {ctor: '[]'}
								}
							}
						},
						{
							ctor: '::',
							_0: A3(_user$project$App_User_UsersView$userImageView, user, session, model),
							_1: {
								ctor: '::',
								_0: A3(_user$project$App_User_UsersView$userInfosView, appModel, user, model),
								_1: {ctor: '[]'}
							}
						})
				},
				_1: {ctor: '[]'}
			});
	});
var _user$project$App_User_UsersView$viewUsersList = F3(
	function (session, appModel, model) {
		var listF = A2(
			_elm_lang$core$List$filter,
			_user$project$App_User_UserHelper$filterUser(model.userFilter),
			model.users);
		var list = function () {
			var _p3 = model.userSort;
			switch (_p3.ctor) {
				case 'S_Dist':
					return A2(
						_elm_lang$core$List$sortBy,
						function (_) {
							return _.distance;
						},
						listF);
				case 'S_Age':
					return _elm_lang$core$List$reverse(
						A2(
							_elm_lang$core$List$sortBy,
							function (_) {
								return _.date_of_birth;
							},
							listF));
				case 'S_LastOn':
					return _elm_lang$core$List$reverse(
						A2(
							_elm_lang$core$List$sortBy,
							function (_) {
								return _.lastOn;
							},
							listF));
				default:
					return _elm_lang$core$List$reverse(
						A2(
							_elm_lang$core$List$sortBy,
							function (u) {
								return A2(_user$project$App_User_UserHelper$getAffinityScore, session.user, u);
							},
							listF));
			}
		}();
		var listOrdered = _elm_lang$core$Native_Utils.eq(model.orderSort, _user$project$App_User_UserModel$DESC) ? A2(
			_elm_lang$core$List$indexedMap,
			F2(
				function (v0, v1) {
					return {ctor: '_Tuple2', _0: v0, _1: v1};
				}),
			_elm_lang$core$List$reverse(list)) : A2(
			_elm_lang$core$List$indexedMap,
			F2(
				function (v0, v1) {
					return {ctor: '_Tuple2', _0: v0, _1: v1};
				}),
			list);
		return A2(
			_elm_lang$html$Html$ul,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('users-list'),
				_1: {ctor: '[]'}
			},
			A2(
				_elm_lang$core$List$map,
				function (_p4) {
					var _p5 = _p4;
					return A2(
						_elm_lang$html$Html$li,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: A5(_user$project$App_User_UsersView$cardUserView, appModel, _p5._1, _p5._0, session, model),
							_1: {ctor: '[]'}
						});
				},
				listOrdered));
	});
var _user$project$App_User_UsersView$emptyUsersView = A2(
	_elm_lang$html$Html$div,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$class('layout-column flex center'),
		_1: {ctor: '[]'}
	},
	{
		ctor: '::',
		_0: _elm_lang$html$Html$text('No users'),
		_1: {ctor: '[]'}
	});
var _user$project$App_User_UsersView$getActiveClass = function (a) {
	return a ? 'active' : '';
};
var _user$project$App_User_UsersView$userMenuView = F2(
	function (route, model) {
		return A2(
			_elm_lang$html$Html$ul,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('group-btn'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$li,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class(
							_user$project$App_User_UsersView$getActiveClass(
								_elm_lang$core$Native_Utils.eq(
									route,
									_user$project$App_AppModels$UsersRoute('all')))),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$a,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('button'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$href('/#/users/'),
									_1: {ctor: '[]'}
								}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Around me'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$li,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class(
								_user$project$App_User_UsersView$getActiveClass(
									_elm_lang$core$Native_Utils.eq(
										route,
										_user$project$App_AppModels$UsersRoute('visitors')))),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$a,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('button'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$href('/#/users/visitors'),
										_1: {ctor: '[]'}
									}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Visitors '),
									_1: {
										ctor: '::',
										_0: _user$project$Utils$notif(model.notifVisit),
										_1: {ctor: '[]'}
									}
								}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$li,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class(
									_user$project$App_User_UsersView$getActiveClass(
										_elm_lang$core$Native_Utils.eq(
											route,
											_user$project$App_AppModels$UsersRoute('likers')))),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$a,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('button'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$href('/#/users/likers'),
											_1: {ctor: '[]'}
										}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Likers '),
										_1: {
											ctor: '::',
											_0: _user$project$Utils$notif(
												model.notifLike + _elm_lang$core$List$length(model.notifUnlike)),
											_1: {ctor: '[]'}
										}
									}),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$li,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class(
										_user$project$App_User_UsersView$getActiveClass(
											_elm_lang$core$Native_Utils.eq(
												route,
												_user$project$App_AppModels$UsersRoute('matchers')))),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$a,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('button'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$href('/#/users/matchers'),
												_1: {ctor: '[]'}
											}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('Matchers '),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}
			});
	});
var _user$project$App_User_UsersView$ageFilterView = A2(
	_elm_lang$html$Html$div,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$class('layout-column flex align-center'),
		_1: {ctor: '[]'}
	},
	{
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('layout'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('From '),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$select,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onInput(_user$project$Msgs$UpdateMinAgeFilter),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$option,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$value('No'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('No'),
											_1: {ctor: '[]'}
										}),
									_1: A2(
										_elm_lang$core$List$map,
										function (a) {
											return A2(
												_elm_lang$html$Html$option,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$value(
														_elm_lang$core$Basics$toString(a)),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text(
														_elm_lang$core$Basics$toString(a)),
													_1: {ctor: '[]'}
												});
										},
										A2(_elm_lang$core$List$range, 18, 98))
								}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(' to '),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$select,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onInput(_user$project$Msgs$UpdateMaxAgeFilter),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$option,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$value('No'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('No'),
													_1: {ctor: '[]'}
												}),
											_1: A2(
												_elm_lang$core$List$map,
												function (a) {
													return A2(
														_elm_lang$html$Html$option,
														{
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$value(
																_elm_lang$core$Basics$toString(a)),
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text(
																_elm_lang$core$Basics$toString(a)),
															_1: {ctor: '[]'}
														});
												},
												A2(_elm_lang$core$List$range, 18, 98))
										}),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text(' years old'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}),
		_1: {ctor: '[]'}
	});
var _user$project$App_User_UsersView$tagsFilterView = F2(
	function (session, model) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('center'),
				_1: {ctor: '[]'}
			},
			A2(
				_elm_lang$core$List$map,
				function (t) {
					var me = A2(
						_elm_lang$core$List$member,
						t,
						_user$project$App_User_UserHelper$getFilterTags(model.userFilter)) ? ' metoo' : '';
					return A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class(
								A2(_elm_lang$core$Basics_ops['++'], 'tag', me)),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(
									_user$project$Msgs$UpdateTagFilter(t)),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								A2(_elm_lang$core$Basics_ops['++'], '#', t)),
							_1: {ctor: '[]'}
						});
				},
				session.user.tags));
	});
var _user$project$App_User_UsersView$sortArrow = function (order) {
	var _p6 = order;
	if (_p6.ctor === 'ASC') {
		return '↑';
	} else {
		return '↓';
	}
};
var _user$project$App_User_UsersView$sortMenuView = function (model) {
	return A2(
		_elm_lang$html$Html$ul,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('group-btn'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$li,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class(
						_user$project$App_User_UsersView$getActiveClass(
							_elm_lang$core$Native_Utils.eq(_user$project$App_User_UserModel$S_Afin, model.userSort))),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('button'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(
									_user$project$Msgs$ChangeSort(_user$project$App_User_UserModel$S_Afin)),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Affinity '),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$span,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('sort-arrow'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text(
											_user$project$App_User_UsersView$sortArrow(model.orderSort)),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$li,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class(
							_user$project$App_User_UsersView$getActiveClass(
								_elm_lang$core$Native_Utils.eq(_user$project$App_User_UserModel$S_Age, model.userSort))),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$button,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('button'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(
										_user$project$Msgs$ChangeSort(_user$project$App_User_UserModel$S_Age)),
									_1: {ctor: '[]'}
								}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Age '),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$span,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('sort-arrow'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text(
												_user$project$App_User_UsersView$sortArrow(model.orderSort)),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$li,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class(
								_user$project$App_User_UsersView$getActiveClass(
									_elm_lang$core$Native_Utils.eq(_user$project$App_User_UserModel$S_Dist, model.userSort))),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$button,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('button'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onClick(
											_user$project$Msgs$ChangeSort(_user$project$App_User_UserModel$S_Dist)),
										_1: {ctor: '[]'}
									}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Distance '),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$span,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('sort-arrow'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text(
													_user$project$App_User_UsersView$sortArrow(model.orderSort)),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$li,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class(
									_user$project$App_User_UsersView$getActiveClass(
										_elm_lang$core$Native_Utils.eq(_user$project$App_User_UserModel$S_LastOn, model.userSort))),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$button,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('button'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onClick(
												_user$project$Msgs$ChangeSort(_user$project$App_User_UserModel$S_LastOn)),
											_1: {ctor: '[]'}
										}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('LastOn '),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$span,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class('sort-arrow'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text(
														_user$project$App_User_UsersView$sortArrow(model.orderSort)),
													_1: {ctor: '[]'}
												}),
											_1: {ctor: '[]'}
										}
									}),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$App_User_UsersView$locFilterView = A2(
	_elm_lang$html$Html$div,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$class('layout-column flex align-center'),
		_1: {ctor: '[]'}
	},
	{
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('layout'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Less than'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$select,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onInput(_user$project$Msgs$UpdateLocFilter),
							_1: {ctor: '[]'}
						},
						A2(
							_elm_lang$core$List$map,
							function (v) {
								return A2(
									_elm_lang$html$Html$option,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$value(
											_elm_lang$core$Basics$toString(v)),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text(
											_elm_lang$core$Basics$toString(v)),
										_1: {ctor: '[]'}
									});
							},
							{
								ctor: '::',
								_0: 1,
								_1: {
									ctor: '::',
									_0: 5,
									_1: {
										ctor: '::',
										_0: 10,
										_1: {
											ctor: '::',
											_0: 20,
											_1: {
												ctor: '::',
												_0: 50,
												_1: {
													ctor: '::',
													_0: 100,
													_1: {
														ctor: '::',
														_0: 200,
														_1: {
															ctor: '::',
															_0: 500,
															_1: {ctor: '[]'}
														}
													}
												}
											}
										}
									}
								}
							})),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(' km away'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}
			}),
		_1: {ctor: '[]'}
	});
var _user$project$App_User_UsersView$advanceFilterView = F3(
	function (session, appModel, model) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$id('advance-filters'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class(
						A2(
							_elm_lang$core$Basics_ops['++'],
							'center',
							appModel.showAdvanceFilters ? ' active' : '')),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('layout-row xs-no-flex'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _user$project$App_User_UsersView$ageFilterView,
						_1: {
							ctor: '::',
							_0: _user$project$App_User_UsersView$locFilterView,
							_1: {ctor: '[]'}
						}
					}),
				_1: {
					ctor: '::',
					_0: A2(_user$project$App_User_UsersView$tagsFilterView, session, model),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$button,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(_user$project$Msgs$ResetFilters),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('btn-no-style'),
									_1: {ctor: '[]'}
								}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Reset'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}
			});
	});
var _user$project$App_User_UsersView$usersMenuView = F4(
	function (route, session, appModel, model) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('filter-menu center'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('layout xs-no-flex'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(_user$project$App_User_UsersView$userMenuView, route, appModel),
						_1: {
							ctor: '::',
							_0: _user$project$App_User_UsersView$sortMenuView(model),
							_1: {ctor: '[]'}
						}
					}),
				_1: {
					ctor: '::',
					_0: A3(_user$project$App_User_UsersView$advanceFilterView, session, appModel, model),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$App_User_UsersView$locSearchView = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('layout-column flex align-center'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('layout'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Less than'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$select,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onInput(_user$project$Msgs$UpdateLocSearch),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$option,
									A2(
										_elm_lang$core$Basics_ops['++'],
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$value('No'),
											_1: {ctor: '[]'}
										},
										_elm_lang$core$Native_Utils.eq(model.loc, _elm_lang$core$Maybe$Nothing) ? {
											ctor: '::',
											_0: A2(_elm_lang$html$Html_Attributes$attribute, 'selected', 'selected'),
											_1: {ctor: '[]'}
										} : {ctor: '[]'}),
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('No'),
										_1: {ctor: '[]'}
									}),
								_1: A2(
									_elm_lang$core$List$map,
									function (v) {
										return A2(
											_elm_lang$html$Html$option,
											A2(
												_elm_lang$core$Basics_ops['++'],
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$value(
														_elm_lang$core$Basics$toString(v)),
													_1: {ctor: '[]'}
												},
												_elm_lang$core$Native_Utils.eq(
													model.loc,
													_elm_lang$core$Maybe$Just(v)) ? {
													ctor: '::',
													_0: A2(_elm_lang$html$Html_Attributes$attribute, 'selected', 'selected'),
													_1: {ctor: '[]'}
												} : {ctor: '[]'}),
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text(
													_elm_lang$core$Basics$toString(v)),
												_1: {ctor: '[]'}
											});
									},
									{
										ctor: '::',
										_0: 1,
										_1: {
											ctor: '::',
											_0: 5,
											_1: {
												ctor: '::',
												_0: 10,
												_1: {
													ctor: '::',
													_0: 20,
													_1: {
														ctor: '::',
														_0: 50,
														_1: {
															ctor: '::',
															_0: 100,
															_1: {
																ctor: '::',
																_0: 200,
																_1: {
																	ctor: '::',
																	_0: 500,
																	_1: {ctor: '[]'}
																}
															}
														}
													}
												}
											}
										}
									})
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(' km away'),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$App_User_UsersView$ageSearchView = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('layout-column flex align-center'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('layout'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('From '),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$select,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onInput(_user$project$Msgs$UpdateMinYearSearch),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$option,
											A2(
												_elm_lang$core$Basics_ops['++'],
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$value('No'),
													_1: {ctor: '[]'}
												},
												_elm_lang$core$Native_Utils.eq(model.yearMin, _elm_lang$core$Maybe$Nothing) ? {
													ctor: '::',
													_0: A2(_elm_lang$html$Html_Attributes$attribute, 'selected', 'selected'),
													_1: {ctor: '[]'}
												} : {ctor: '[]'}),
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('No'),
												_1: {ctor: '[]'}
											}),
										_1: A2(
											_elm_lang$core$List$map,
											function (a) {
												return A2(
													_elm_lang$html$Html$option,
													A2(
														_elm_lang$core$Basics_ops['++'],
														{
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$value(
																_elm_lang$core$Basics$toString(a)),
															_1: {ctor: '[]'}
														},
														_elm_lang$core$Native_Utils.eq(
															model.yearMin,
															_elm_lang$core$Maybe$Just(a)) ? {
															ctor: '::',
															_0: A2(_elm_lang$html$Html_Attributes$attribute, 'selected', 'selected'),
															_1: {ctor: '[]'}
														} : {ctor: '[]'}),
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text(
															_elm_lang$core$Basics$toString(a)),
														_1: {ctor: '[]'}
													});
											},
											A2(_elm_lang$core$List$range, 18, 98))
									}),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(' to '),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$select,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Events$onInput(_user$project$Msgs$UpdateMaxYearSearch),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$option,
													A2(
														_elm_lang$core$Basics_ops['++'],
														{
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$value('No'),
															_1: {ctor: '[]'}
														},
														_elm_lang$core$Native_Utils.eq(model.yearMax, _elm_lang$core$Maybe$Nothing) ? {
															ctor: '::',
															_0: A2(_elm_lang$html$Html_Attributes$attribute, 'selected', 'selected'),
															_1: {ctor: '[]'}
														} : {ctor: '[]'}),
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('No'),
														_1: {ctor: '[]'}
													}),
												_1: A2(
													_elm_lang$core$List$map,
													function (a) {
														return A2(
															_elm_lang$html$Html$option,
															A2(
																_elm_lang$core$Basics_ops['++'],
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$value(
																		_elm_lang$core$Basics$toString(a)),
																	_1: {ctor: '[]'}
																},
																_elm_lang$core$Native_Utils.eq(
																	model.yearMax,
																	_elm_lang$core$Maybe$Just(a)) ? {
																	ctor: '::',
																	_0: A2(_elm_lang$html$Html_Attributes$attribute, 'selected', 'selected'),
																	_1: {ctor: '[]'}
																} : {ctor: '[]'}),
															{
																ctor: '::',
																_0: _elm_lang$html$Html$text(
																	_elm_lang$core$Basics$toString(a)),
																_1: {ctor: '[]'}
															});
													},
													A2(_elm_lang$core$List$range, 18, 98))
											}),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$div,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text(' years old'),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$App_User_UsersView$tagsSearchView = F2(
	function (session, model) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('center'),
				_1: {ctor: '[]'}
			},
			A2(
				_elm_lang$core$List$map,
				function (t) {
					var me = A2(_elm_lang$core$List$member, t, model.search.tags) ? ' metoo' : '';
					return A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class(
								A2(_elm_lang$core$Basics_ops['++'], 'tag', me)),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(
									_user$project$Msgs$UpdateSearchTags(t)),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								A2(_elm_lang$core$Basics_ops['++'], '#', t)),
							_1: {ctor: '[]'}
						});
				},
				session.user.tags));
	});
var _user$project$App_User_UsersView$notifUnlikeView = F2(
	function (route, appModel) {
		return _elm_lang$core$Native_Utils.eq(
			route,
			_user$project$App_AppModels$UsersRoute('likers')) ? A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			A2(
				_elm_lang$core$List$map,
				function (n) {
					return A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('text-warning center'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								A2(_elm_lang$core$Basics_ops['++'], n, ' unliked you')),
							_1: {ctor: '[]'}
						});
				},
				appModel.notifUnlike)) : A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{ctor: '[]'});
	});
var _user$project$App_User_UsersView$viewUsers = F4(
	function (route, session, appModel, model) {
		var view = _elm_lang$core$Native_Utils.eq(
			_elm_lang$core$List$length(model.users),
			0) ? _user$project$App_User_UsersView$emptyUsersView : A3(_user$project$App_User_UsersView$viewUsersList, session, appModel, model);
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$id('users-list'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('layout-column'),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: (_elm_lang$core$Native_Utils.cmp(
					_user$project$App_AppUtils$getAccountNotif(session.user),
					0) > 0) ? A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_user$project$Msgs$ToggleAccountMenu),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('text-warning pointer center'),
							_1: {ctor: '[]'}
						}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Please complete your account to be able to interract with users'),
						_1: {ctor: '[]'}
					}) : A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(_user$project$App_User_UsersView$notifUnlikeView, route, appModel),
					_1: {
						ctor: '::',
						_0: view,
						_1: {ctor: '[]'}
					}
				}
			});
	});
var _user$project$App_User_UsersView$searchView = F4(
	function (route, session, appModel, model) {
		return _elm_lang$core$Native_Utils.eq(
			_elm_lang$core$List$length(model.users),
			0) ? {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$id('advance-search'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('center'),
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class(
								A2(
									_elm_lang$core$Basics_ops['++'],
									'center',
									appModel.showAdvanceFilters ? ' active' : '')),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('layout-row xs-no-flex'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _user$project$App_User_UsersView$ageSearchView(appModel.search),
									_1: {
										ctor: '::',
										_0: _user$project$App_User_UsersView$locSearchView(appModel.search),
										_1: {ctor: '[]'}
									}
								}),
							_1: {
								ctor: '::',
								_0: A2(_user$project$App_User_UsersView$tagsSearchView, session, appModel),
								_1: {ctor: '[]'}
							}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$button,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(_user$project$Msgs$AdvanceSearch),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Search'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('center '),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$button,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(_user$project$Msgs$ResetSearch),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('btn-no-style'),
									_1: {ctor: '[]'}
								}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Reset'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		} : {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('filter-menu center'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('layout xs-no-flex'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _user$project$App_User_UsersView$sortMenuView(model),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A4(_user$project$App_User_UsersView$viewUsers, route, session, appModel, model),
						_1: {ctor: '[]'}
					}
				}),
			_1: {ctor: '[]'}
		};
	});
var _user$project$App_User_UsersView$view = F4(
	function (route, session, appModel, model) {
		return {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A4(_user$project$App_User_UsersView$usersMenuView, route, session, appModel, model),
					_1: {
						ctor: '::',
						_0: A4(_user$project$App_User_UsersView$viewUsers, route, session, appModel, model),
						_1: {ctor: '[]'}
					}
				}),
			_1: {ctor: '[]'}
		};
	});

var _user$project$Login_LoginView$viewResetPwdForm = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$p,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('In order to reset your password, please give us your login and the email you used when you created your account. You\'ll recieve an email with your new password'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$form,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('home-form'),
						_1: {ctor: '[]'}
					},
					A2(
						_elm_lang$core$Basics_ops['++'],
						A2(
							_elm_lang$core$List$map,
							function (i) {
								return A2(
									_user$project$FormUtils$viewInput,
									_user$project$Msgs$UpdateResetPwdForm(i.id),
									i);
							},
							model.resetPwdForm),
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$input,
								{
									ctor: '::',
									_0: A3(
										_elm_lang$html$Html_Events$onWithOptions,
										'click',
										{preventDefault: true, stopPropagation: false},
										_elm_lang$core$Json_Decode$succeed(_user$project$Msgs$ResetPwd)),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('important-font'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$type_('submit'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$value('Reset my password'),
												_1: {ctor: '[]'}
											}
										}
									}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						})),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$a,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$href('#/login'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Login page'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Login_LoginView$viewNewUserForm = function (model) {
	return A2(
		_elm_lang$html$Html$form,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('home-form'),
			_1: {ctor: '[]'}
		},
		A2(
			_elm_lang$core$Basics_ops['++'],
			A2(
				_elm_lang$core$List$map,
				function (i) {
					return A2(
						_user$project$FormUtils$viewInput,
						_user$project$Msgs$UpdateNewUserForm(i.id),
						i);
				},
				model.newUserForm),
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: A3(_user$project$Utils$onClickCustom, true, false, _user$project$Msgs$NewUser),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('important-font'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$type_('submit'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$value('SIGN IN'),
									_1: {ctor: '[]'}
								}
							}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('row'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('twelve columns'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$a,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$href('#/login'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('I already have an account'),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}));
};
var _user$project$Login_LoginView$viewLoginForm = function (model) {
	return A2(
		_elm_lang$html$Html$form,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('home-form'),
			_1: {ctor: '[]'}
		},
		A2(
			_elm_lang$core$Basics_ops['++'],
			A2(
				_elm_lang$core$List$map,
				function (i) {
					return A2(
						_user$project$FormUtils$viewInput,
						_user$project$Msgs$UpdateLoginForm(i.id),
						i);
				},
				model.loginForm),
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: A3(_user$project$Utils$onClickCustom, true, false, _user$project$Msgs$SendLogin),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('important-font'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$type_('submit'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$value('ENTER'),
									_1: {ctor: '[]'}
								}
							}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('row'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('twelve columns'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$a,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$href('#/signup'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('Create new account'),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('twelve columns'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$a,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$href('#/password_reset'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('Forgot password ?'),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}
			}));
};
var _user$project$Login_LoginView$view404 = A2(
	_elm_lang$html$Html$div,
	{ctor: '[]'},
	{
		ctor: '::',
		_0: _elm_lang$html$Html$text('404 not found'),
		_1: {ctor: '[]'}
	});
var _user$project$Login_LoginView$view = F2(
	function (route, model) {
		var view = function () {
			var _p0 = route;
			switch (_p0.ctor) {
				case 'LoginRoute':
					return _user$project$Login_LoginView$viewLoginForm(model);
				case 'SigninRoute':
					return A3(
						_elm_lang$html$Html_Keyed$node,
						'sign',
						{ctor: '[]'},
						{
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'div',
								_1: _user$project$Login_LoginView$viewNewUserForm(model)
							},
							_1: {ctor: '[]'}
						});
				case 'ResetPwdRoute':
					return A3(
						_elm_lang$html$Html_Keyed$node,
						'rest',
						{ctor: '[]'},
						{
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'div',
								_1: _user$project$Login_LoginView$viewResetPwdForm(model)
							},
							_1: {ctor: '[]'}
						});
				default:
					return _user$project$Login_LoginView$view404;
			}
		}();
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('layout-column center container'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$img,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$src('http://localhost:3001/images/DARKROOM_logo.svg'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$alt('DARKROOM'),
							_1: {ctor: '[]'}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: function () {
						var _p1 = model.message;
						if (_p1.ctor === 'Just') {
							return A2(
								_elm_lang$html$Html$div,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(_p1._0),
									_1: {ctor: '[]'}
								});
						} else {
							return A2(
								_elm_lang$html$Html$div,
								{ctor: '[]'},
								{ctor: '[]'});
						}
					}(),
					_1: {
						ctor: '::',
						_0: view,
						_1: {ctor: '[]'}
					}
				}
			});
	});

var _user$project$App_AppViews$getMenuClass = F2(
	function (menuRoute, currentRoute) {
		if (_elm_lang$core$Native_Utils.eq(menuRoute, currentRoute)) {
			return _elm_lang$html$Html_Attributes$class('active');
		} else {
			var _p0 = {ctor: '_Tuple2', _0: menuRoute, _1: currentRoute};
			if (((_p0.ctor === '_Tuple2') && (_p0._0.ctor === 'UsersRoute')) && (_p0._1.ctor === 'UsersRoute')) {
				return _elm_lang$html$Html_Attributes$class('active');
			} else {
				return _elm_lang$html$Html_Attributes$class('');
			}
		}
	});
var _user$project$App_AppViews$viewMenu = F4(
	function (route, session, appModel, talksModel) {
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$nav,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('navbar'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$ul,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('navbar-list'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$ul,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$li,
											{
												ctor: '::',
												_0: A2(
													_user$project$App_AppViews$getMenuClass,
													_user$project$App_AppModels$UsersRoute('all'),
													route),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$a,
													{
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$href('/#/users/all'),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: _user$project$Utils$icon('fas fa-th'),
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$li,
												{
													ctor: '::',
													_0: A2(_user$project$App_AppViews$getMenuClass, _user$project$App_AppModels$SearchRoute, route),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$button,
														{
															ctor: '::',
															_0: _elm_lang$html$Html_Events$onClick(_user$project$Msgs$ResetSearch),
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _user$project$Utils$icon('fas fa-search'),
															_1: {ctor: '[]'}
														}),
													_1: {ctor: '[]'}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$li,
													{
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$class('notif-menu'),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$button,
															{
																ctor: '::',
																_0: _elm_lang$html$Html_Events$onClick(_user$project$Msgs$ToggleTalksList),
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _user$project$Utils$icon('fas fa-comments'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: _user$project$Utils$notif(
																_user$project$App_Talk_TalkUtils$getTalkNotif(talksModel.talks)),
															_1: {ctor: '[]'}
														}
													}),
												_1: {ctor: '[]'}
											}
										}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$li,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('notif-menu'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$button,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Events$onClick(_user$project$Msgs$ToggleAccountMenu),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: _user$project$Utils$icon('fas fa-user'),
													_1: {ctor: '[]'}
												}),
											_1: {
												ctor: '::',
												_0: _user$project$Utils$notif(
													_user$project$App_AppUtils$getAccountNotif(session.user)),
												_1: {ctor: '[]'}
											}
										}),
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			});
	});
var _user$project$App_AppViews$view404 = A2(
	_elm_lang$html$Html$div,
	{ctor: '[]'},
	{
		ctor: '::',
		_0: _elm_lang$html$Html$text('404 error, page not found'),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$a,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$href('/#/users'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Back to homepage'),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		}
	});
var _user$project$App_AppViews$alertMessageView = function (model) {
	var _p1 = model.message;
	if (_p1.ctor === 'Just') {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('alert alert-danger'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(_p1._0),
				_1: {ctor: '[]'}
			});
	} else {
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{ctor: '[]'});
	}
};
var _user$project$App_AppViews$viewCurrentTalk = F2(
	function (appModel, model) {
		var _p2 = model.currentTalk;
		if (_p2.ctor === 'Nothing') {
			return A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{ctor: '[]'});
		} else {
			return A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				A3(_user$project$App_Talk_TalkView$view, _p2._0, appModel, model));
		}
	});
var _user$project$App_AppViews$view = F5(
	function (route, session, appModel, usersModel, talksModel) {
		var onTop = appModel.showTalksList || (appModel.showAccountMenu || (!_elm_lang$core$Native_Utils.eq(usersModel.currentUser, _elm_lang$core$Maybe$Nothing)));
		var view = function () {
			var _p3 = route;
			switch (_p3.ctor) {
				case 'UsersRoute':
					return A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						A4(_user$project$App_User_UsersView$view, route, session, appModel, usersModel));
				case 'SearchRoute':
					return A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						A4(_user$project$App_User_UsersView$searchView, route, session, appModel, usersModel));
				default:
					return _user$project$App_AppViews$view404;
			}
		}();
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('layout-row'),
				_1: {ctor: '[]'}
			},
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class(
								A2(
									_elm_lang$core$Basics_ops['++'],
									'container',
									onTop ? ' blur' : '')),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(_user$project$App_AppViews$viewCurrentTalk, appModel, talksModel),
							_1: {
								ctor: '::',
								_0: view,
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				},
				A2(
					_elm_lang$core$Basics_ops['++'],
					onTop ? {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('on-top'),
								_1: {
									ctor: '::',
									_0: A3(_user$project$Utils$onClickCustom, false, true, _user$project$Msgs$UnshowAll),
									_1: {ctor: '[]'}
								}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{ctor: '[]'},
								A2(
									_elm_lang$core$Basics_ops['++'],
									function () {
										var _p4 = {ctor: '_Tuple3', _0: usersModel.currentUser, _1: appModel.showAccountMenu, _2: appModel.showTalksList};
										if ((((_p4.ctor === '_Tuple3') && (_p4._0.ctor === 'Just')) && (_p4._1 === false)) && (_p4._2 === false)) {
											return {
												ctor: '::',
												_0: A4(_user$project$App_User_UserView$view, _p4._0._0, session, appModel, usersModel),
												_1: {ctor: '[]'}
											};
										} else {
											return {ctor: '[]'};
										}
									}(),
									A2(
										_elm_lang$core$Basics_ops['++'],
										appModel.showAccountMenu ? {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$div,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class('animated fadeInLeft'),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$id('account-menu'),
														_1: {ctor: '[]'}
													}
												},
												A2(_user$project$App_User_UserAccountView$view, session, appModel)),
											_1: {ctor: '[]'}
										} : {ctor: '[]'},
										appModel.showTalksList ? {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$div,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class('animated fadeInLeft'),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$id('talks-list'),
														_1: {ctor: '[]'}
													}
												},
												{
													ctor: '::',
													_0: _user$project$App_Talk_TalkView$talksListView(talksModel),
													_1: {ctor: '[]'}
												}),
											_1: {ctor: '[]'}
										} : {ctor: '[]'}))),
							_1: {ctor: '[]'}
						}
					} : {ctor: '[]'},
					{
						ctor: '::',
						_0: A4(_user$project$App_AppViews$viewMenu, route, session, appModel, talksModel),
						_1: {
							ctor: '::',
							_0: _user$project$App_AppViews$alertMessageView(appModel),
							_1: {ctor: '[]'}
						}
					})));
	});

var _user$project$Login_LoginUpdate$updateLogin = F3(
	function (msg, route, loginModel) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'ResetPwdResponse':
				var _p1 = _p0._0;
				if (_p1.ctor === 'Success') {
					return _elm_lang$core$Native_Utils.eq(_p1._0.status, true) ? {
						ctor: '_Tuple2',
						_0: A2(
							_user$project$Models$NotConnected,
							route,
							_elm_lang$core$Native_Utils.update(
								loginModel,
								{
									message: _elm_lang$core$Maybe$Just('A email have been sent with your new password')
								})),
						_1: _elm_lang$navigation$Navigation$newUrl('/#/login')
					} : {
						ctor: '_Tuple2',
						_0: A2(
							_user$project$Models$NotConnected,
							route,
							_elm_lang$core$Native_Utils.update(
								loginModel,
								{
									message: _elm_lang$core$Maybe$Just('Unknown user')
								})),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _user$project$Models$initialModel(_user$project$Login_LoginModels$LoginRoute),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'NewUserResponse':
				var _p2 = _p0._0;
				if (_p2.ctor === 'Success') {
					var _p4 = _p2._0;
					return _p4.status ? {
						ctor: '_Tuple2',
						_0: A2(
							_user$project$Models$NotConnected,
							route,
							_elm_lang$core$Native_Utils.update(
								loginModel,
								{
									message: _elm_lang$core$Maybe$Just('Your account has been created, check your emails')
								})),
						_1: _elm_lang$core$Platform_Cmd$batch(
							A2(
								_elm_lang$core$Basics_ops['++'],
								{
									ctor: '::',
									_0: _elm_lang$navigation$Navigation$newUrl('/#/login'),
									_1: {ctor: '[]'}
								},
								function () {
									var _p3 = _p4.message;
									if (_p3.ctor === 'Just') {
										return {
											ctor: '::',
											_0: _user$project$Ports$openNewTab(_p3._0),
											_1: {ctor: '[]'}
										};
									} else {
										return {ctor: '[]'};
									}
								}()))
					} : {
						ctor: '_Tuple2',
						_0: A2(
							_user$project$Models$NotConnected,
							route,
							_elm_lang$core$Native_Utils.update(
								loginModel,
								{message: _p4.message, newUserForm: _user$project$FormUtils$initFastNewUserForm})),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _user$project$Models$initialModel(_user$project$Login_LoginModels$LoginRoute),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'UpdateLoginForm':
				var form_ = loginModel.loginForm;
				var newForm = A3(
					_user$project$FormUtils$updateInput,
					form_,
					_p0._0,
					_elm_lang$core$Maybe$Just(_p0._1));
				return {
					ctor: '_Tuple2',
					_0: A2(
						_user$project$Models$NotConnected,
						route,
						_elm_lang$core$Native_Utils.update(
							loginModel,
							{loginForm: newForm})),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'UpdateResetPwdForm':
				var form_ = loginModel.resetPwdForm;
				var newForm = A3(
					_user$project$FormUtils$updateInput,
					form_,
					_p0._0,
					_elm_lang$core$Maybe$Just(_p0._1));
				return {
					ctor: '_Tuple2',
					_0: A2(
						_user$project$Models$NotConnected,
						route,
						_elm_lang$core$Native_Utils.update(
							loginModel,
							{resetPwdForm: newForm})),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'UpdateNewUserForm':
				var form_ = loginModel.newUserForm;
				var newForm = A3(
					_user$project$FormUtils$updateInput,
					form_,
					_p0._0,
					_elm_lang$core$Maybe$Just(_p0._1));
				return {
					ctor: '_Tuple2',
					_0: A2(
						_user$project$Models$NotConnected,
						route,
						_elm_lang$core$Native_Utils.update(
							loginModel,
							{newUserForm: newForm})),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'SendLogin':
				var values = A2(
					_elm_lang$core$List$map,
					function (i) {
						return i.status;
					},
					loginModel.loginForm);
				var _p5 = values;
				if (((((_p5.ctor === '::') && (_p5._0.ctor === 'Valid')) && (_p5._1.ctor === '::')) && (_p5._1._0.ctor === 'Valid')) && (_p5._1._1.ctor === '[]')) {
					return {
						ctor: '_Tuple2',
						_0: _user$project$Models$Connexion(
							_user$project$App_AppModels$UsersRoute('all')),
						_1: A2(_user$project$Login_LoginCommands$sendLogin, _p5._0._0, _p5._1._0._0)
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: A2(_user$project$Models$NotConnected, route, loginModel),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'ResetPwd':
				var values = A2(
					_elm_lang$core$List$map,
					function (i) {
						return i.status;
					},
					loginModel.resetPwdForm);
				var _p6 = values;
				if (((((_p6.ctor === '::') && (_p6._0.ctor === 'Valid')) && (_p6._1.ctor === '::')) && (_p6._1._0.ctor === 'Valid')) && (_p6._1._1.ctor === '[]')) {
					return {
						ctor: '_Tuple2',
						_0: A2(_user$project$Models$NotConnected, route, loginModel),
						_1: A2(_user$project$Login_LoginCommands$resetPwd, _p6._0._0, _p6._1._0._0)
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: A2(_user$project$Models$NotConnected, route, loginModel),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'NewUser':
				var values = A2(
					_elm_lang$core$List$map,
					function (i) {
						return i.status;
					},
					loginModel.newUserForm);
				var _p7 = values;
				if (((((((((((((_p7.ctor === '::') && (_p7._0.ctor === 'Valid')) && (_p7._1.ctor === '::')) && (_p7._1._0.ctor === 'Valid')) && (_p7._1._1.ctor === '::')) && (_p7._1._1._0.ctor === 'Valid')) && (_p7._1._1._1.ctor === '::')) && (_p7._1._1._1._0.ctor === 'Valid')) && (_p7._1._1._1._1.ctor === '::')) && (_p7._1._1._1._1._0.ctor === 'Valid')) && (_p7._1._1._1._1._1.ctor === '::')) && (_p7._1._1._1._1._1._0.ctor === 'Valid')) && (_p7._1._1._1._1._1._1.ctor === '[]')) {
					return {
						ctor: '_Tuple2',
						_0: A2(_user$project$Models$NotConnected, route, loginModel),
						_1: A7(_user$project$Login_LoginCommands$sendFastNewUser, _p7._0._0, _p7._1._0._0, _p7._1._1._0._0, _p7._1._1._1._0._0, _p7._1._1._1._1._0._0, _p7._1._1._1._1._1._0._0, loginModel.localisation)
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: A2(_user$project$Models$NotConnected, route, loginModel),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'OnLocationChange':
				var newRoute = _user$project$Routing$parseLoginLocation(_p0._0);
				return {
					ctor: '_Tuple2',
					_0: A2(
						_user$project$Models$NotConnected,
						newRoute,
						_elm_lang$core$Native_Utils.update(
							loginModel,
							{message: _elm_lang$core$Maybe$Nothing, loginForm: _user$project$FormUtils$initLoginForm, newUserForm: _user$project$FormUtils$initFastNewUserForm, resetPwdForm: _user$project$FormUtils$initResetPwdForm})),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: A2(_user$project$Models$NotConnected, route, loginModel),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});

var _user$project$Views$connectionView = A2(
	_elm_lang$html$Html$div,
	{ctor: '[]'},
	{
		ctor: '::',
		_0: _elm_lang$html$Html$text('connexion...'),
		_1: {ctor: '[]'}
	});
var _user$project$Views$view = function (model) {
	var _p0 = model;
	switch (_p0.ctor) {
		case 'NotConnected':
			return A2(_user$project$Login_LoginView$view, _p0._0, _p0._1);
		case 'Connexion':
			return _user$project$Views$connectionView;
		default:
			return A5(_user$project$App_AppViews$view, _p0._0, _p0._1, _p0._2, _p0._3, _p0._4);
	}
};

var _user$project$Update$updateConnexion = F2(
	function (msg, route) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'SessionUserResponse':
				var _p6 = _p0._0;
				var _p1 = _p0._1;
				if (_p1.ctor === 'Ok') {
					var _p5 = _p1._0;
					var _p2 = {ctor: '_Tuple2', _0: _p5.status, _1: _p5.data};
					if (((_p2.ctor === '_Tuple2') && (_p2._0 === true)) && (_p2._1.ctor === 'Just')) {
						var _p4 = _p2._1._0;
						var session = A2(_user$project$App_AppModels$Session, _p4, _p6);
						var model = A5(_user$project$Models$Connected, route, session, _user$project$App_AppModels$initialAppModel, _user$project$App_User_UserModel$initialUsersModel, _user$project$App_Talk_TalkModel$initialTalksModel);
						var cmds = A2(
							_elm_lang$core$Basics_ops['++'],
							{
								ctor: '::',
								_0: _user$project$App_Talk_TalkCommands$getTalks(session.token),
								_1: {
									ctor: '::',
									_0: A2(_user$project$App_User_UserCommands$sendLikeNotif, _p6, _p4.username),
									_1: {
										ctor: '::',
										_0: A2(_user$project$App_User_UserCommands$sendUnlikeNotif, _p6, _p4.username),
										_1: {
											ctor: '::',
											_0: A2(_user$project$App_User_UserCommands$sendVisitNotif, _p6, _p4.username),
											_1: {
												ctor: '::',
												_0: _elm_lang$navigation$Navigation$newUrl('/#/users/all'),
												_1: {ctor: '[]'}
											}
										}
									}
								}
							},
							(_elm_lang$core$Native_Utils.eq(_p4.localisation.lon, 0) && _elm_lang$core$Native_Utils.eq(_p4.localisation.lat, 0)) ? {
								ctor: '::',
								_0: _user$project$Ports$tryToLocalize(
									{ctor: '_Tuple0'}),
								_1: {ctor: '[]'}
							} : {ctor: '[]'});
						var _p3 = _p4.status;
						switch (_p3.ctor) {
							case 'Activated':
								return {
									ctor: '_Tuple2',
									_0: model,
									_1: _elm_lang$core$Platform_Cmd$batch(cmds)
								};
							case 'ResetPassword':
								return {
									ctor: '_Tuple2',
									_0: A5(
										_user$project$Models$Connected,
										route,
										session,
										_elm_lang$core$Native_Utils.update(
											_user$project$App_AppModels$initialAppModel,
											{
												message: _elm_lang$core$Maybe$Just('Please reset your password'),
												showResetPwdForm: true,
												showAccountMenu: true
											}),
										_user$project$App_User_UserModel$initialUsersModel,
										_user$project$App_Talk_TalkModel$initialTalksModel),
									_1: _elm_lang$core$Platform_Cmd$batch(cmds)
								};
							case 'Incomplete':
								return {
									ctor: '_Tuple2',
									_0: A5(
										_user$project$Models$Connected,
										route,
										session,
										_elm_lang$core$Native_Utils.update(
											_user$project$App_AppModels$initialAppModel,
											{
												message: _elm_lang$core$Maybe$Just('Please complete your profile'),
												showEditAccountForm: true,
												showAccountMenu: true
											}),
										_user$project$App_User_UserModel$initialUsersModel,
										_user$project$App_Talk_TalkModel$initialTalksModel),
									_1: _elm_lang$core$Platform_Cmd$batch(cmds)
								};
							default:
								return {
									ctor: '_Tuple2',
									_0: A2(
										_user$project$Models$NotConnected,
										_user$project$Login_LoginModels$LoginRoute,
										_elm_lang$core$Native_Utils.update(
											_user$project$Login_LoginModels$initialLoginModel,
											{
												message: _elm_lang$core$Maybe$Just('Please activate your email')
											})),
									_1: _elm_lang$core$Platform_Cmd$none
								};
						}
					} else {
						return {
							ctor: '_Tuple2',
							_0: A2(_user$project$Models$NotConnected, _user$project$Login_LoginModels$LoginRoute, _user$project$Login_LoginModels$initialLoginModel),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					}
				} else {
					return {
						ctor: '_Tuple2',
						_0: A2(_user$project$Models$NotConnected, _user$project$Login_LoginModels$LoginRoute, _user$project$Login_LoginModels$initialLoginModel),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'SaveToken':
				var _p7 = _p0._0;
				if ((_p7.ctor === '::') && (_p7._1.ctor === '[]')) {
					var _p8 = _p7._0;
					return (!_elm_lang$core$Native_Utils.eq(_p8, '')) ? {
						ctor: '_Tuple2',
						_0: _user$project$Models$Connexion(route),
						_1: _user$project$App_User_UserCommands$getSessionUser(_p8)
					} : {
						ctor: '_Tuple2',
						_0: A2(_user$project$Models$NotConnected, _user$project$Login_LoginModels$LoginRoute, _user$project$Login_LoginModels$initialLoginModel),
						_1: _elm_lang$navigation$Navigation$newUrl('/#/login')
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: A2(_user$project$Models$NotConnected, _user$project$Login_LoginModels$LoginRoute, _user$project$Login_LoginModels$initialLoginModel),
						_1: _elm_lang$navigation$Navigation$newUrl('/#/login')
					};
				}
			case 'LoginResponse':
				var _p9 = _p0._0;
				if (_p9.ctor === 'Success') {
					var _p12 = _p9._0;
					var _p10 = {ctor: '_Tuple4', _0: _p12.status, _1: _p12.token, _2: _p12.user, _3: _p12.message};
					if (((_p10._0 === true) && (_p10._1.ctor === 'Just')) && (_p10._2.ctor === 'Just')) {
						var _p11 = _p10._1._0;
						return {
							ctor: '_Tuple2',
							_0: _user$project$Models$Connexion(
								_user$project$App_AppModels$UsersRoute('all')),
							_1: _elm_lang$core$Platform_Cmd$batch(
								{
									ctor: '::',
									_0: _user$project$App_User_UserCommands$getSessionUser(_p11),
									_1: {
										ctor: '::',
										_0: _user$project$Ports$storeToken(
											{
												ctor: '::',
												_0: _p11,
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								})
						};
					} else {
						return {
							ctor: '_Tuple2',
							_0: A2(
								_user$project$Models$NotConnected,
								_user$project$Login_LoginModels$LoginRoute,
								_elm_lang$core$Native_Utils.update(
									_user$project$Login_LoginModels$initialLoginModel,
									{message: _p10._3})),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					}
				} else {
					return {
						ctor: '_Tuple2',
						_0: A2(
							_user$project$Models$NotConnected,
							_user$project$Login_LoginModels$LoginRoute,
							_elm_lang$core$Native_Utils.update(
								_user$project$Login_LoginModels$initialLoginModel,
								{
									message: _elm_lang$core$Maybe$Just('Error')
								})),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			default:
				return {
					ctor: '_Tuple2',
					_0: A2(_user$project$Models$NotConnected, _user$project$Login_LoginModels$LoginRoute, _user$project$Login_LoginModels$initialLoginModel),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Update$update = F2(
	function (msg, model) {
		var _p13 = {ctor: '_Tuple2', _0: model, _1: msg};
		switch (_p13._0.ctor) {
			case 'NotConnected':
				return A3(_user$project$Login_LoginUpdate$updateLogin, _p13._1, _p13._0._0, _p13._0._1);
			case 'Connexion':
				return A2(_user$project$Update$updateConnexion, _p13._1, _p13._0._0);
			default:
				return A6(_user$project$App_AppUpdate$updateApp, _p13._1, _p13._0._0, _p13._0._1, _p13._0._2, _p13._0._3, _p13._0._4);
		}
	});

var _user$project$Main$subscriptions = function (model) {
	var _p0 = model;
	switch (_p0.ctor) {
		case 'Connected':
			var subAnim = function () {
				var _p1 = _p0._2.matchAnim;
				if (_p1.ctor === 'Just') {
					return A2(_elm_lang$core$Time$every, _elm_lang$core$Time$millisecond, _user$project$Msgs$UpdateAnim);
				} else {
					return _elm_lang$core$Platform_Sub$none;
				}
			}();
			var subRoute = function () {
				var _p2 = model;
				if (_p2.ctor === 'Connected') {
					return _p2._2.showAccountMenu ? A2(_elm_lang$core$Time$every, _elm_lang$core$Time$second, _user$project$Msgs$LoadMap) : _elm_lang$core$Platform_Sub$none;
				} else {
					return _elm_lang$core$Platform_Sub$none;
				}
			}();
			return _elm_lang$core$Platform_Sub$batch(
				{
					ctor: '::',
					_0: _user$project$Ports$newLocalisation(_user$project$Msgs$SaveLocalisation),
					_1: {
						ctor: '::',
						_0: _user$project$Ports$noLocalization(_user$project$Msgs$LocalizeIp),
						_1: {
							ctor: '::',
							_0: _user$project$Ports$localized(_user$project$Msgs$NewLoc),
							_1: {
								ctor: '::',
								_0: _user$project$Ports$fileContentRead(_user$project$Msgs$ImageRead),
								_1: {
									ctor: '::',
									_0: subAnim,
									_1: {
										ctor: '::',
										_0: subRoute,
										_1: {
											ctor: '::',
											_0: A2(_elm_lang$core$Time$every, _elm_lang$core$Time$second, _user$project$Msgs$UpdateCurrentTime),
											_1: {
												ctor: '::',
												_0: A2(_elm_lang$websocket$WebSocket$listen, 'ws://localhost:3001/ws', _user$project$Msgs$Notification),
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						}
					}
				});
		case 'Connexion':
			return _user$project$Ports$tokenRecieved(_user$project$Msgs$SaveToken);
		default:
			return _elm_lang$core$Platform_Sub$none;
	}
};
var _user$project$Main$init = function (location) {
	var model = function () {
		var _p3 = _user$project$Routing$parseAppLocation(location);
		if (_p3.ctor === 'NotFoundAppRoute') {
			var _p4 = _user$project$Routing$parseLoginLocation(location);
			if (_p4.ctor === 'NotFoundLoginRoute') {
				return _user$project$Models$Connexion(_user$project$App_AppModels$NotFoundAppRoute);
			} else {
				return A2(_user$project$Models$NotConnected, _p4, _user$project$Login_LoginModels$initialLoginModel);
			}
		} else {
			return _user$project$Models$Connexion(_p3);
		}
	}();
	return {
		ctor: '_Tuple2',
		_0: model,
		_1: _user$project$Ports$getToken(
			{ctor: '_Tuple0'})
	};
};
var _user$project$Main$main = A2(
	_elm_lang$navigation$Navigation$program,
	_user$project$Msgs$OnLocationChange,
	{init: _user$project$Main$init, subscriptions: _user$project$Main$subscriptions, view: _user$project$Views$view, update: _user$project$Update$update})();

var Elm = {};
Elm['Main'] = Elm['Main'] || {};
if (typeof _user$project$Main$main !== 'undefined') {
    _user$project$Main$main(Elm['Main'], 'Main', undefined);
}

if (typeof define === "function" && define['amd'])
{
  define([], function() { return Elm; });
  return;
}

if (typeof module === "object")
{
  module['exports'] = Elm;
  return;
}

var globalElm = this['Elm'];
if (typeof globalElm === "undefined")
{
  this['Elm'] = Elm;
  return;
}

for (var publicModule in Elm)
{
  if (publicModule in globalElm)
  {
    throw new Error('There are two Elm modules called `' + publicModule + '` on this page! Rename one of them.');
  }
  globalElm[publicModule] = Elm[publicModule];
}

}).call(this);

